[{"path":"https://marce10.github.io/warbleR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to CONTRIBUTING.md","title":"Contributing to CONTRIBUTING.md","text":"First , thanks taking time contribute! types contributions encouraged valued. See Table Contents different ways help details project handles . Please make sure read relevant section making contribution. make lot easier us maintainers smooth experience involved. community looks forward contributions. like project, just don’t time contribute, ’s fine. easy ways support project show appreciation, also happy : - Star project - Tweet - Refer project project’s readme - Mention project local meetups tell friends/colleagues","code":""},{"path":"https://marce10.github.io/warbleR/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"Contributing to CONTRIBUTING.md","text":"Code Conduct Question Want Contribute Reporting Bugs Suggesting Enhancements","code":""},{"path":"https://marce10.github.io/warbleR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to CONTRIBUTING.md","text":"project everyone participating governed CONTRIBUTING.md Code Conduct. participating, expected uphold code. Please report unacceptable behavior https://github.com/maRce10/warbleR/issues/.","code":""},{"path":"https://marce10.github.io/warbleR/CONTRIBUTING.html","id":"i-have-a-question","dir":"","previous_headings":"","what":"I Have a Question","title":"Contributing to CONTRIBUTING.md","text":"want ask question, assume read available Documentation. ask question, best search existing Issues might help . case found suitable issue still need clarification, can write question issue. also advisable search internet answers first. still feel need ask question need clarification, recommend following: Open https://github.com/maRce10/warbleR/issues/. Provide much context can ’re running . Provide project platform versions (nodejs, npm, etc), depending seems relevant. take care issue soon possible.","code":""},{"path":"https://marce10.github.io/warbleR/CONTRIBUTING.html","id":"i-want-to-contribute","dir":"","previous_headings":"","what":"I Want To Contribute","title":"Contributing to CONTRIBUTING.md","text":"contributing project, must agree authored 100% content, necessary rights content content contribute may provided project license.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/CONTRIBUTING.html","id":"before-submitting-a-bug-report","dir":"","previous_headings":"I Want To Contribute > Reporting Bugs","what":"Before Submitting a Bug Report","title":"Contributing to CONTRIBUTING.md","text":"good bug report shouldn’t leave others needing chase information. Therefore, ask investigate carefully, collect information describe issue detail report. Please complete following steps advance help us fix potential bug fast possible. Make sure using latest version. Determine bug really bug error side e.g. using incompatible environment components/versions (Make sure read documentation. looking support, might want check section). see users experienced (potentially already solved) issue , check already bug report existing bug erro. Also make sure search internet (including Stack Overflow) see users outside GitHub community discussed issue. Collect information bug: Stack trace (Traceback) OS, Platform Version (Windows, Linux, macOS, x86, ARM) Version interpreter, compiler, SDK, runtime environment, package manager, depending seems relevant. Possibly input output Can reliably reproduce issue? can also reproduce older versions?","code":""},{"path":"https://marce10.github.io/warbleR/CONTRIBUTING.html","id":"how-do-i-submit-a-good-bug-report","dir":"","previous_headings":"I Want To Contribute > Reporting Bugs","what":"How Do I Submit a Good Bug Report?","title":"Contributing to CONTRIBUTING.md","text":"must never report security related issues, vulnerabilities bugs including sensitive information issue tracker, elsewhere public. Instead sensitive bugs must sent email <>. use GitHub issues track bugs errors. run issue project: Open Issue. (Since can’t sure point whether bug , ask talk bug yet label issue.) Explain behavior expect actual behavior. Please provide much context possible describe reproduction steps someone else can follow recreate issue . usually includes code. good bug reports isolate problem create reduced test case. Provide information collected previous section. ’s filed: project team label issue accordingly. team member try reproduce issue provided steps. reproduction steps obvious way reproduce issue, team ask steps mark issue needs-repro. Bugs needs-repro tag addressed reproduced. team able reproduce issue, marked needs-fix, well possibly tags (critical), issue left implemented someone.","code":""},{"path":"https://marce10.github.io/warbleR/CONTRIBUTING.html","id":"suggesting-enhancements","dir":"","previous_headings":"I Want To Contribute","what":"Suggesting Enhancements","title":"Contributing to CONTRIBUTING.md","text":"section guides submitting enhancement suggestion CONTRIBUTING.md, including completely new features minor improvements existing functionality. Following guidelines help maintainers community understand suggestion find related suggestions.","code":""},{"path":"https://marce10.github.io/warbleR/CONTRIBUTING.html","id":"before-submitting-an-enhancement","dir":"","previous_headings":"I Want To Contribute > Suggesting Enhancements","what":"Before Submitting an Enhancement","title":"Contributing to CONTRIBUTING.md","text":"Make sure using latest version. Read documentation carefully find functionality already covered, maybe individual configuration. Perform search see enhancement already suggested. , add comment existing issue instead opening new one. Find whether idea fits scope aims project. ’s make strong case convince project’s developers merits feature. Keep mind want features useful majority users just small subset. ’re just targeting minority users, consider writing add-/plugin library.","code":""},{"path":"https://marce10.github.io/warbleR/CONTRIBUTING.html","id":"how-do-i-submit-a-good-enhancement-suggestion","dir":"","previous_headings":"I Want To Contribute > Suggesting Enhancements","what":"How Do I Submit a Good Enhancement Suggestion?","title":"Contributing to CONTRIBUTING.md","text":"Enhancement suggestions tracked GitHub issues. Use clear descriptive title issue identify suggestion. Provide step--step description suggested enhancement many details possible. Describe current behavior explain behavior expected see instead . point can also tell alternatives work . may want include screenshots animated GIFs help demonstrate steps point part suggestion related . can use tool record GIFs macOS Windows, tool tool Linux. Explain enhancement useful CONTRIBUTING.md users. may also want point projects solved better serve inspiration.","code":""},{"path":"https://marce10.github.io/warbleR/CONTRIBUTING.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributing to CONTRIBUTING.md","text":"guide based contributing.md. Make !","code":""},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"selection-tables","dir":"Articles","previous_headings":"","what":"Selection tables","title":"<font size=","text":"objects created selection_table() function. function takes data frames containing selection data (name sound file, selection, start, end …), verifies information consistent (see function checksels() details) saves ‘diagnostic’ metadata attribute. selection tables basically data frames information contained corroborated can read warbleR functions. selection tables must contain (least) following columns: sound files (sound.files) selection (select) start end sample data “lbh_selec_table” contains columns:   … can converted selection_table format like (saving corresponding sound files): Note path sound files provided. necessary order verify data provided conforms characteristics audio files. Selection tables class R:  ","code":"data(\"lbh_selec_table\")  lbh_selec_table data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))  # parametros globales warbleR_options(wav.path = tempdir())  st <- selection_table(X = lbh_selec_table, pb = FALSE)  st  [30mObject of class  [1m'selection_table' [22m [39m  [90m* The output of the following call: [39m  [90m [3mselection_table(X = lbh_selec_table, pb = FALSE) [23m [39m  [90m [1m Contains: [22m *  A selection table data frame with 11 rows and 7 columns: [39m  [90m|sound.files    | channel| selec|  start|    end| bottom.freq| [39m  [90m|:--------------|-------:|-----:|------:|------:|-----------:| [39m  [90m|Phae.long1.wav |       1|     1| 1.1694| 1.3424|      2.2201| [39m  [90m|Phae.long1.wav |       1|     2| 2.1584| 2.3215|      2.1694| [39m  [90m|Phae.long1.wav |       1|     3| 0.3433| 0.5183|      2.2183| [39m  [90m|Phae.long2.wav |       1|     1| 0.1596| 0.2922|      2.3169| [39m  [90m|Phae.long2.wav |       1|     2| 1.4571| 1.5832|      2.2840| [39m  [90m|Phae.long3.wav |       1|     1| 0.6266| 0.7578|      3.0068| [39m  [90m... 1 more column(s) (top.freq) [39m  [90m and 5 more row(s) [39m  [90m  * A data frame (check.results) generated by check_sels() (as attribute)  [39m  [90mcreated by warbleR 1.1.28 [39m class(st) [1] \"selection_table\" \"data.frame\""},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"extended-selection-tables","dir":"Articles","previous_headings":"Selection tables","what":"Extended selection tables","title":"<font size=","text":"extended = TRUE argument function generates object extended_selection_table class also contains list ‘wave’ objects corresponding selections data. Therefore, function transforms selection table self-contained objects since original sound files longer needed perform acoustic analysis warbleR. can greatly facilitate storage exchange (bio)acoustic data. addition, also speeds analysis, since necessary read sound files every time data analyzed. Now, mentioned earlier, need selection_table() function create extended selection table. must also set argument extended = TRUE (otherwise, class selection table). following code converts sample data extended selection table:   . Now acoustic data selection data (well additional metadata) together single R object.  ","code":"#  global parameters warbleR_options(wav.path = tempdir())   ext_st <- selection_table(   X = lbh_selec_table, pb = FALSE,   extended = TRUE, confirm.extended = FALSE )"},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"handling-extended-selection-tables","dir":"Articles","previous_headings":"Selection tables","what":"Handling extended selection tables","title":"<font size=","text":"Several functions can used deal objects class. can test object belongs extended_selection_table:   can subset selection way data frame still keep attributes: also generic version print() class objects: … equivalent :   can also join rows. original extended_selection_table divided 2 bound using rbind():   ‘wave’ objects can read individually using read_wave(), wrapper readWave() function tuneR, can handle extended selection tables:   regular ‘wave’ objects:      read_wave() function requires selection table, well row index (.e. row number) able read ‘wave’ objects. can also read regular ‘wave’ file path provided. Note functions modify data frames likely delete attributes ‘wave’ objects metadata stored. example, merge extended selection box remove attributes:   case, can use fix_extended_selection_table() function transfer attributes original extended selection table:   works long original sound files retained selections added.  ","code":"is_extended_selection_table(ext_st) [1] TRUE ext_st2 <- ext_st[1:2, ]  is_extended_selection_table(ext_st2) [1] TRUE ## print print(ext_st)  [30mObject of class  [1m'extended_selection_table' [22m [39m  [90m* The output of the following call: [39m  [90m [3mselection_table(X = lbh_selec_table, extended = TRUE, confirm.extended = FALSE,  pb = FALSE) [23m [39m  [90m [1m Contains: [22m  *  A selection table data frame with 11 row(s) and 7 columns: [39m  [90m|sound.files      | channel| selec| start|    end| bottom.freq| [39m  [90m|:----------------|-------:|-----:|-----:|------:|-----------:| [39m  [90m|Phae.long1.wav_1 |       1|     1|   0.1| 0.2730|      2.2201| [39m  [90m|Phae.long1.wav_2 |       1|     1|   0.1| 0.2630|      2.1694| [39m  [90m|Phae.long1.wav_3 |       1|     1|   0.1| 0.2749|      2.2183| [39m  [90m|Phae.long2.wav_1 |       1|     1|   0.1| 0.2326|      2.3169| [39m  [90m|Phae.long2.wav_2 |       1|     1|   0.1| 0.2262|      2.2840| [39m  [90m|Phae.long3.wav_1 |       1|     1|   0.1| 0.2312|      3.0068| [39m  [90m... 1 more column(s) (top.freq) [39m  [90m and 5 more row(s) [39m  [90m * 11 wave object(s) (as attributes):  [39m  [90mPhae.long1.wav_1 [39m [90mPhae.long1.wav_2 [39m [90mPhae.long1.wav_3 [39m [90mPhae.long2.wav_1 [39m [90mPhae.long2.wav_2 [39m [90mPhae.long3.wav_1 [39m  [90m... and 5 more [39m  [90m * A data frame (check.results) generated by check_sels() (as attribute) [39m  [90m The selection table was created [3m [1m by element  [22m [23m(see 'class_extended_selection_table') [39m  [90m* 1 sampling rate(s) (in kHz):  [1m22.5 [22m [39m  [90m* 1 bit depth(s):  [1m16 [22m [39m  [90m* Created by warbleR 1.1.28 [39m ext_st  [30mObject of class  [1m'extended_selection_table' [22m [39m  [90m* The output of the following call: [39m  [90m [3mselection_table(X = lbh_selec_table, extended = TRUE, confirm.extended = FALSE,  pb = FALSE) [23m [39m  [90m [1m Contains: [22m  *  A selection table data frame with 11 row(s) and 7 columns: [39m  [90m|sound.files      | channel| selec| start|    end| bottom.freq| [39m  [90m|:----------------|-------:|-----:|-----:|------:|-----------:| [39m  [90m|Phae.long1.wav_1 |       1|     1|   0.1| 0.2730|      2.2201| [39m  [90m|Phae.long1.wav_2 |       1|     1|   0.1| 0.2630|      2.1694| [39m  [90m|Phae.long1.wav_3 |       1|     1|   0.1| 0.2749|      2.2183| [39m  [90m|Phae.long2.wav_1 |       1|     1|   0.1| 0.2326|      2.3169| [39m  [90m|Phae.long2.wav_2 |       1|     1|   0.1| 0.2262|      2.2840| [39m  [90m|Phae.long3.wav_1 |       1|     1|   0.1| 0.2312|      3.0068| [39m  [90m... 1 more column(s) (top.freq) [39m  [90m and 5 more row(s) [39m  [90m * 11 wave object(s) (as attributes):  [39m  [90mPhae.long1.wav_1 [39m [90mPhae.long1.wav_2 [39m [90mPhae.long1.wav_3 [39m [90mPhae.long2.wav_1 [39m [90mPhae.long2.wav_2 [39m [90mPhae.long3.wav_1 [39m  [90m... and 5 more [39m  [90m * A data frame (check.results) generated by check_sels() (as attribute) [39m  [90m The selection table was created [3m [1m by element  [22m [23m(see 'class_extended_selection_table') [39m  [90m* 1 sampling rate(s) (in kHz):  [1m22.5 [22m [39m  [90m* 1 bit depth(s):  [1m16 [22m [39m  [90m* Created by warbleR 1.1.28 [39m ext_st3 <- ext_st[1:5, ]  ext_st4 <- ext_st[6:11, ]  ext_st5 <- rbind(ext_st3, ext_st4)  # print ext_st5  [30mObject of class  [1m'extended_selection_table' [22m [39m  [90m* The output of the following call: [39m  [90m [3mrbind(deparse.level, ..1, ..2) [23m [39m  [90m [1m Contains: [22m  *  A selection table data frame with 11 row(s) and 7 columns: [39m  [90m|sound.files      | channel| selec| start|    end| bottom.freq| [39m  [90m|:----------------|-------:|-----:|-----:|------:|-----------:| [39m  [90m|Phae.long1.wav_1 |       1|     1|   0.1| 0.2730|      2.2201| [39m  [90m|Phae.long1.wav_2 |       1|     1|   0.1| 0.2630|      2.1694| [39m  [90m|Phae.long1.wav_3 |       1|     1|   0.1| 0.2749|      2.2183| [39m  [90m|Phae.long2.wav_1 |       1|     1|   0.1| 0.2326|      2.3169| [39m  [90m|Phae.long2.wav_2 |       1|     1|   0.1| 0.2262|      2.2840| [39m  [90m|Phae.long3.wav_1 |       1|     1|   0.1| 0.2312|      3.0068| [39m  [90m... 1 more column(s) (top.freq) [39m  [90m and 5 more row(s) [39m  [90m * 11 wave object(s) (as attributes):  [39m  [90mPhae.long1.wav_1 [39m [90mPhae.long1.wav_2 [39m [90mPhae.long1.wav_3 [39m [90mPhae.long2.wav_1 [39m [90mPhae.long2.wav_2 [39m [90mPhae.long3.wav_1 [39m  [90m... and 5 more [39m  [90m * A data frame (check.results) generated by check_sels() (as attribute) [39m  [90m The selection table was created [3m [1m by element  [22m [23m(see 'class_extended_selection_table') [39m  [90m* 1 sampling rate(s) (in kHz):  [1m22.5 [22m [39m  [90m* 1 bit depth(s):  [1m16 [22m [39m  [90m* Created by warbleR 1.1.28 [39m # igual q el original all.equal(ext_st, ext_st5) [1] \"Attributes: < Component \\\"call\\\": target, current do not match when deparsed >\" wv1 <- read_wave(X = ext_st, index = 3, from = 0, to = 0.37) class(wv1) [1] \"Wave\" attr(,\"package\") [1] \"tuneR\" wv1 Wave Object     Number of Samples:      8325     Duration (seconds):     0.37     Samplingrate (Hertz):   22500     Channels (Mono/Stereo): Mono     PCM (integer format):   TRUE     Bit (8/16/24/32/64):    16 spectro(wv1, wl = 150, grid = FALSE, scale = FALSE, ovlp = 90) par(mfrow = c(3, 2), mar = rep(0, 4))  for (i in 1:6) {   wv <- read_wave(X = ext_st, index = i, from = 0.05, to = 0.32)    spectro(wv,     wl = 150, grid = FALSE, scale = FALSE, axisX = FALSE,     axisY = FALSE, ovlp = 90   ) } # create new data frame Y <- data.frame(sound.files = ext_st$sound.files, site = \"La Selva\", lek = c(rep(\"SUR\", 5), rep(\"CCL\", 6)))  # combine mrg_ext_st <- merge(ext_st, Y, by = \"sound.files\")  # check class is_extended_selection_table(mrg_ext_st) [1] FALSE # fix est mrg_ext_st <- fix_extended_selection_table(X = mrg_ext_st, Y = ext_st)  # check class is_extended_selection_table(mrg_ext_st) [1] TRUE"},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"analysis-using-extended-selection-tables","dir":"Articles","previous_headings":"Selection tables","what":"Analysis using extended selection tables","title":"<font size=","text":"objects can used input warbleR functions. examples warbleR functions using extended_selection_table:","code":""},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"spectral-parameters","dir":"Articles","previous_headings":"Selection tables > Analysis using extended selection tables","what":"Spectral parameters","title":"<font size=","text":" ","code":"#  parametros espectrales sp <- spectro_analysis(ext_st)  sp"},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"signal-to-noise-ratio","dir":"Articles","previous_headings":"Selection tables > Analysis using extended selection tables","what":"Signal-to-noise ratio","title":"<font size=","text":" ","code":"snr <- sig2noise(ext_st, mar = 0.05)  snr"},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"dynamic-time-warping-dtw","dir":"Articles","previous_headings":"Selection tables > Analysis using extended selection tables","what":"Dynamic time warping (DTW)","title":"<font size=","text":" ","code":"dtw.dist <- freq_DTW(ext_st, img = FALSE)  dtw.dist"},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"performance","dir":"Articles","previous_headings":"Selection tables","what":"Performance","title":"<font size=","text":"use extended_selection_table objects can improve performance (case, measured time). use microbenchmark compare performance sig2noise() ggplot2 plot results. First, selection table 1000 selections created simply repeating sample data frame several times converted extended selection table:   autodetec image example   function runs much faster extended selection tables. Performance gain likely improve longer recordings data sets used (, compensate computing overhead).  ","code":"# create long selection table lng.selec.table <- do.call(rbind, replicate(10, lbh_selec_table,   simplify = FALSE ))  # relabels selec lng.selec.table$selec <- 1:nrow(lng.selec.table)  # create extended selection table lng_ext_st <- selection_table(   X = lng.selec.table, pb = FALSE,   extended = TRUE, confirm.extended = FALSE )   # load packages library(microbenchmark) library(ggplot2)  # check performance mbmrk.snr <- microbenchmark(extended = sig2noise(lng_ext_st,   mar = 0.05 ), regular = sig2noise(lng.selec.table,   mar = 0.05 ), times = 50)  autoplot(mbmrk.snr) + ggtitle(\"sig2noise\")"},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"sharing-acoustic-data","dir":"Articles","previous_headings":"Selection tables","what":"Sharing acoustic data","title":"<font size=","text":"new object class allows share complete data sets, including acoustic data. example, NatureSounds package contains extended selection table long-billed hermit hummingbirds vocalizations 10 different song types: ability compress large data sets ease performing analyzes require single R object can simplify exchange data reproducibility bioacoustic analyzes.  ","code":"data(\"Phae.long.est\")  Phae.long.est  [30mObject of class  [1m'extended_selection_table' [22m [39m  [90m [1m Contains: [22m  *  A selection table data frame with 50 row(s) and 8 columns: [39m  [90m|sound.files | selec| start|    end| bottom.freq| top.freq| [39m  [90m|:-----------|-----:|-----:|------:|-----------:|--------:| [39m  [90m|BR2-A1-1    |     1|   0.1| 0.2676|      1.6020|  10.9525| [39m  [90m|BR2-A1-2    |     1|   0.1| 0.2652|      1.8914|  11.0250| [39m  [90m|BR2-A1-3    |     1|   0.1| 0.2716|      1.7177|  11.0250| [39m  [90m|BR2-A1-4    |     1|   0.1| 0.2701|      1.8335|  11.0250| [39m  [90m|BR2-A1-5    |     1|   0.1| 0.2770|      2.1229|  11.0250| [39m  [90m|CCE-I3-1    |     1|   0.1| 0.2490|      1.7551|  11.0250| [39m  [90m... 2 more column(s) (lek, lek.song.type) [39m  [90m and 44 more row(s) [39m  [90m * 50 wave object(s) (as attributes):  [39m  [90mBR2-A1-1 [39m [90mBR2-A1-2 [39m [90mBR2-A1-3 [39m [90mBR2-A1-4 [39m [90mBR2-A1-5 [39m [90mCCE-I3-1 [39m  [90m... and 44 more [39m  [90m * A data frame (check.results) generated by check_sels() (as attribute) [39m  [90m The selection table was created [3m [1m by element  [22m [23m(see 'class_extended_selection_table') [39m  [90m* 1 sampling rate(s) (in kHz):  [1m22.05 [22m [39m  [90m* 1 bit depth(s):  [1m8 [22m [39m  [90m* Created by warbleR < 1.1.21 [39m table(Phae.long.est$lek.song.type) BR2-A1 CCE-I3 LOC-D1 SAT-F1 STR-A2 SUR-E1 SUR-K4 TR1-C2 TR1-C5 TR1-D4       5      5      5      5      5      5      5      5      5      5"},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"warbler-functions-and-the-workflow-of-analysis-in-bioacoustics","dir":"Articles","previous_headings":"","what":"warbleR functions and the workflow of analysis in bioacoustics","title":"<font size=","text":"Bioacoustic analyzes generally follow specific processing sequence analysis. sequence can represented schematically like :    can group warbleR functions according bioacoustic analysis stages.  ","code":""},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"get-and-prepare-recordings","dir":"Articles","previous_headings":"warbleR functions and the workflow of analysis in bioacoustics","what":"Get and prepare recordings","title":"<font size=","text":"query_xc() function allows search download sounds free access database Xeno-Canto. can also convert .mp3 files .wav, change sampling rate files correct corrupt files, among functions.  ","code":""},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"annotating-sound","dir":"Articles","previous_headings":"warbleR functions and the workflow of analysis in bioacoustics","what":"Annotating sound","title":"<font size=","text":"recommended make annotations programs import R (example Raven import Rraven package). However, warbleR offers functions facilitate manual automatic annotation sound files, well subsequent manipulation:  ","code":""},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"organize-annotations","dir":"Articles","previous_headings":"warbleR functions and the workflow of analysis in bioacoustics","what":"Organize annotations","title":"<font size=","text":"annotations (selection tables) can manipulated refined variety functions. Selection tables can also converted compact format extended selection tables:  ","code":""},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"measure-acoustic-signal-structure","dir":"Articles","previous_headings":"warbleR functions and the workflow of analysis in bioacoustics","what":"Measure acoustic signal structure","title":"<font size=","text":"warbleR functions dedicated quantifying structure acoustic signals listed selection tables using batch processing. , 4 main measurement methods offered: Spectrographic parameters Cross correlation Dynamic time warping (DTW) Statistical descriptors cepstral coefficients functions gravitate around methods, variations methods:  ","code":""},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"verify-annotations","dir":"Articles","previous_headings":"warbleR functions and the workflow of analysis in bioacoustics","what":"Verify annotations","title":"<font size=","text":"Functions provided detect inconsistencies selection tables modify selection tables. package also offers several functions generate spectrograms showing annotations, can organized annotation categories. allows verify annotations match previously defined categories, particularly useful annotations automatically generated.  ","code":""},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"visually-inspection-of-annotations-and-measurements","dir":"Articles","previous_headings":"warbleR functions and the workflow of analysis in bioacoustics","what":"Visually inspection of annotations and measurements","title":"<font size=","text":" ","code":""},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"additional-functions","dir":"Articles","previous_headings":"warbleR functions and the workflow of analysis in bioacoustics","what":"Additional functions","title":"<font size=","text":"Finally, warbleR offers functions simplify use extended selection tables, organize large numbers images spectrograms generate elaborated signal visualizations:  ","code":""},{"path":"https://marce10.github.io/warbleR/articles/Intro_to_warbleR.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"<font size=","text":"Araya-Salas M, G Smith-Vidaurre & M Webster. 2017. Assessing effect sound file compression background noise measures acoustic signal structure. Bioacoustics 4622, 1-17 Araya-Salas M, Smith-Vidaurre G (2017) warbleR: R package streamline analysis animal acoustic signals. Methods Ecol Evol 8:184-191.   Session information","code":"R version 4.3.0 (2023-04-21) Platform: x86_64-pc-linux-gnu (64-bit) Running under: Ubuntu 22.04.2 LTS  Matrix products: default BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0  locale:  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        LC_COLLATE=C.UTF-8      [5] LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    LC_PAPER=C.UTF-8       LC_NAME=C               [9] LC_ADDRESS=C           LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C     time zone: UTC tzcode source: system (glibc)  attached base packages: [1] stats     graphics  grDevices utils     datasets  methods   base       other attached packages: [1] kableExtra_1.3.4   warbleR_1.1.28     NatureSounds_1.0.4 knitr_1.43         seewave_2.2.0      [6] tuneR_1.4.4         loaded via a namespace (and not attached):  [1] sass_0.4.6        bitops_1.0-7      xml2_1.3.4        stringi_1.7.12    digest_0.6.31      [6] magrittr_2.0.3    evaluate_0.21     fastmap_1.1.1     rprojroot_2.0.3   jsonlite_1.8.4    [11] brio_1.1.3        httr_1.4.6        rvest_1.0.3       purrr_1.0.1       viridisLite_0.4.2 [16] scales_1.2.1      pbapply_1.7-0     textshaping_0.3.6 jquerylib_0.1.4   cli_3.6.1         [21] rlang_1.1.1       fftw_1.0-7        munsell_0.5.0     cachem_1.0.8      yaml_2.3.7        [26] tools_4.3.0       parallel_4.3.0    memoise_2.0.1     colorspace_2.1-0  webshot_0.5.4     [31] vctrs_0.6.2       R6_2.5.1          proxy_0.4-27      lifecycle_1.0.3   dtw_1.23-1        [36] stringr_1.5.0     fs_1.6.2          MASS_7.3-58.4     ragg_1.2.5        desc_1.4.2        [41] pkgdown_2.0.7     bslib_0.4.2       glue_1.6.2        Rcpp_1.0.10       systemfonts_1.0.4 [46] highr_0.10        xfun_0.39         rstudioapi_0.14   rjson_0.2.21      htmltools_0.5.5   [51] svglite_2.1.1     rmarkdown_2.21    testthat_3.1.8    signal_0.7-7      compiler_4.3.0    [56] RCurl_1.98-1.12"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"bioacoustics-in-r-with-warbler","dir":"Articles","previous_headings":"","what":"Bioacoustics in R with warbleR","title":"<font size=","text":"Bioacoustics research encompasses wide range questions, study systems methods, including software used analyses. warbleR Rraven packages leverage flexibility R environment offer broad accessible bioinformatics tool set. packages fundamentally rely upon two types data perform bioacoustics analyses R: Sound files: Recordings wav mp3 format, either research open-access databases like xeno-canto Selection tables: Selection tables contain temporal coordinates (start end points) selected acoustic signals within recordings","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"package-repositories","dir":"Articles","previous_headings":"Bioacoustics in R with warbleR","what":"Package repositories","title":"<font size=","text":"packages available CRAN: warbleR, Rraven, well GitHub: warbleR, Rraven. GitHub repository always contain latest functions updates. can also check article Methods Ecology Evolution documenting warbleR package [1]. welcome users provide feedback, contribute updates new functions report bugs warbleR’s GitHub repository. Please note warbleR Rraven use functions seewave, monitoR, tuneR dtw packages internally. warbleR Rraven designed make bioacoustics analyses accessible R users, analyses possible without tools provided packages . packages given credit using warbleR Rraven including citations publications appropriate (e.g. citation(\"seewave\")).","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"parallel-processing-in-warbler","dir":"Articles","previous_headings":"Bioacoustics in R with warbleR","what":"Parallel processing in warbleR","title":"<font size=","text":"Parallel processing, using multiple cores machine, can greatly speed analyses. iterative warbleR functions now parallel processing Linux, Mac Windows operating systems. functions also contain progress bars visualize progress normal parallel processing. See [1] details improved running time using parallel processing.","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"vignette-introduction","dir":"Articles","previous_headings":"","what":"Vignette introduction","title":"<font size=","text":"present case study microgeographic vocal variation long-billed hermit hummingbirds, Phaethornis longirostris. Variation small geographic scales already described species [2]. goal search visible differences song structure within site, determine whether underlying differences acoustic parameters representative spectrographic distinctiveness. vignette, demonstrate : Prepare bioacoustics analyses downloading warbleR Rraven Use Rraven import Raven selection tables recordings Obtain recordings open-access database xeno-canto Select signals using warbleR functions vignette can run without advanced understanding R, long know run code console. However, knowing basic R coding helpful modify code research questions. details function arguments, input output, read documentation function question (e.g. ?query_xc).  ","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"install-and-load-packages","dir":"Articles","previous_headings":"Prepare for analyses","what":"Install and load packages","title":"<font size=","text":"First, need install load warbleR Rraven. need R version .1 seewave version .1. Also, users using UNIX machines (Linux Mac operating systems), may need install fftw3, pkg-config libsndfile machines prior installing warbleR. external packages need installed UNIX terminal. Installing packages lies outside scope vignette, can find information Google. vignette series always include available warbleR functions, existing functions updated new functions added. see functions available package:  ","code":"### Install packages from CRAN # Note that if you install from CRAN, then don't run the code to install from GitHub below, and vice versa install.packages(\"warbleR\") install.packages(\"Rraven\")  ### Alternatively, install warbleR and Rraven from GitHub repositories, which contain the latest updates # Run this ONLY if devtools is not already installed install.packages(\"devtools\")  # Load devtools to access the install_github function library(devtools)  # Install packages from GitHub # install_github(\"maRce10/warbleR\") # install_github(\"maRce10/Rraven\") # install_github(\"maRce10/NatureSounds\")  # Load warbleR and Rraven into your global environment X <- c(\"warbleR\", \"Rraven\") invisible(lapply(X, library, character.only = TRUE)) # The package must be loaded in your working environment ls(\"package:warbleR\")"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"make-a-new-directory-and-set-your-working-directory","dir":"Articles","previous_headings":"Prepare for analyses","what":"Make a new directory and set your working directory","title":"<font size=","text":" ","code":"# Create a new directory and set your working directory (assuming that you are in your /home/username directory) dir.create(file.path(getwd(), \"warbleR_example\")) setwd(file.path(getwd(), \"warbleR_example\"))  # Check your location getwd()"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"import-selection-tables","dir":"Articles","previous_headings":"","what":"Import selection tables","title":"<font size=","text":"Rraven interface Raven R allows import selection tables recordings. useful prefer select signals recordings outside R. selection tables imported R corresponding sound files working directory, can move making spectrograms performing analyses (see next vignette series). sound files selection tables loaded correspond male long-billed hermit hummingbird songs recorded La Selva Biological Station Costa Rica. Later, add data set searching recordings xeno-canto open-access database. Check Rraven package documentation functions information (although need Raven Syrinx installed computer functions).","code":"# Load Raven example selection tables data(\"selection_files\")  # Write out Raven example selection tables as physical files out <- lapply(1:2, function(x) {   writeLines(selection_files[[x]], con = names(selection_files)[x]) })  # Write example sound files out as physical .wav files data(list = c(\"Phae.long1\", \"Phae.long2\"))  writeWave(Phae.long1, \"Phae.long1.wav\") writeWave(Phae.long2, \"Phae.long2.wav\") # Import selections sels <- imp_raven(all.data = FALSE, freq.cols = FALSE, warbler.format = TRUE) str(sels)  # Write out the imported selections as a .csv for later use write.csv(sels, \"Raven_sels.csv\", row.names = FALSE)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"make-your-data-frame-into-an-object-of-class-selection-table","dir":"Articles","previous_headings":"Import selection tables","what":"Make your data frame into an object of class selection table","title":"<font size=","text":"Downstream warbleR functions require selection tables order run correctly. Use function selection_table convert data frame object class selection_table. future versions warbleR, functions require selection table objects class selection_table.","code":"sels <- selection_table(X = sels) str(sels) class(sels)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"obtain-metadata-and-recordings-from-xeno-canto","dir":"Articles","previous_headings":"","what":"Obtain metadata and recordings from xeno-canto","title":"<font size=","text":"open-access xeno-canto database excellent source sound files across avian species. can query database species genus interest. function query_xc two types output: Metadata recordings: geographic coordinates, recording quality, recordist, type signal, etc. Sound files: Sound files mp3 format returned argument download set TRUE. recommend downloading metadata first xeno-canto, data can filtered R efficiently download recordings (e.g. relevant question). , query xeno-canto database download Phaethornis longirostris sound files question male songs vary microgeographic scale.     can use function map_xc visualize geographic spread queried recordings. map_xc create image file map per species current directory img = TRUE. img = FALSE, maps displayed graphics device.","code":"# Query xeno-canto for all Phaethornis recordings (e.g., by genus) Phae <- query_xc(qword = \"Phaethornis\", download = FALSE)  # Check out the structure of resulting the data frame str(Phae) 'data.frame':   899 obs. of  36 variables:  $ Recording_ID     : int  406968 403856 403854 387711 275252 261696 261695 261694 261693 261692 ...  $ Genus            : chr  \"Phaethornis\" \"Phaethornis\" \"Phaethornis\" \"Phaethornis\" ...  $ Specific_epithet : chr  \"yaruqui\" \"yaruqui\" \"yaruqui\" \"yaruqui\" ...  $ Subspecies       : chr  \"\" \"\" \"\" \"\" ...  $ English_name     : chr  \"White-whiskered Hermit\" \"White-whiskered Hermit\" \"White-whiskered Hermit\" \"White-whiskered Hermit\" ...  $ Recordist        : chr  \"Myornis\" \"Myornis\" \"Myornis\" \"Jerome Fischer\" ...  $ Country          : chr  \"Colombia\" \"Colombia\" \"Colombia\" \"Ecuador\" ...  $ Locality         : chr  \"La Chocoana, Guachalito, Nuquí, Chocó\" \"La Chocoana, Guachalito, Nuquí, Chocó\" \"La Chocoana, Guachalito, Nuquí, Chocó\" \"Amagusa Reserve Pichincha\" ...  $ Latitude         : num  5.627 5.627 5.627 0.161 0.75 ...  $ Longitude        : num  -77.4 -77.4 -77.4 -78.9 -78.9 ...  $ Vocalization_type: chr  \"flight call\" \"flight call\" \"flight call\" \"song\" ...  $ Audio_file       : chr  \"//www.xeno-canto.org/406968/download\" \"//www.xeno-canto.org/403856/download\" \"//www.xeno-canto.org/403854/download\" \"//www.xeno-canto.org/387711/download\" ...  $ License          : chr  \"//creativecommons.org/licenses/by-nc-sa/4.0/\" \"//creativecommons.org/licenses/by-nc-sa/4.0/\" \"//creativecommons.org/licenses/by-nc-sa/4.0/\" \"//creativecommons.org/licenses/by-nc-sa/4.0/\" ...  $ Url              : chr  \"//www.xeno-canto.org/406968\" \"//www.xeno-canto.org/403856\" \"//www.xeno-canto.org/403854\" \"//www.xeno-canto.org/387711\" ...  $ Quality          : chr  \"A\" \"A\" \"A\" \"A\" ...  $ Time             : chr  \"?\" \"?\" \"?\" \"09:00\" ...  $ Date             : chr  \"2018-08-00\" \"2017-08-00\" \"2017-08-00\" \"2017-09-24\" ...  $ Altitude         : chr  \"30\" \"10\" \"10\" \"1300\" ...  $ Spectrogram_small: chr  \"//www.xeno-canto.org/sounds/uploaded/OXSIOLJJUP/ffts/XC406968-small.png\" \"//www.xeno-canto.org/sounds/uploaded/OXSIOLJJUP/ffts/XC403856-small.png\" \"//www.xeno-canto.org/sounds/uploaded/OXSIOLJJUP/ffts/XC403854-small.png\" \"//www.xeno-canto.org/sounds/uploaded/JPBSNBUUEF/ffts/XC387711-small.png\" ...  $ Spectrogram_med  : chr  \"//www.xeno-canto.org/sounds/uploaded/OXSIOLJJUP/ffts/XC406968-med.png\" \"//www.xeno-canto.org/sounds/uploaded/OXSIOLJJUP/ffts/XC403856-med.png\" \"//www.xeno-canto.org/sounds/uploaded/OXSIOLJJUP/ffts/XC403854-med.png\" \"//www.xeno-canto.org/sounds/uploaded/JPBSNBUUEF/ffts/XC387711-med.png\" ...  $ Spectrogram_large: chr  \"//www.xeno-canto.org/sounds/uploaded/OXSIOLJJUP/ffts/XC406968-large.png\" \"//www.xeno-canto.org/sounds/uploaded/OXSIOLJJUP/ffts/XC403856-large.png\" \"//www.xeno-canto.org/sounds/uploaded/OXSIOLJJUP/ffts/XC403854-large.png\" \"//www.xeno-canto.org/sounds/uploaded/JPBSNBUUEF/ffts/XC387711-large.png\" ...  $ Spectrogram_full : chr  \"//www.xeno-canto.org/sounds/uploaded/OXSIOLJJUP/ffts/XC406968-full.png\" \"//www.xeno-canto.org/sounds/uploaded/OXSIOLJJUP/ffts/XC403856-full.png\" \"//www.xeno-canto.org/sounds/uploaded/OXSIOLJJUP/ffts/XC403854-full.png\" \"//www.xeno-canto.org/sounds/uploaded/JPBSNBUUEF/ffts/XC387711-full.png\" ...  $ Length           : chr  \"0:02\" \"0:04\" \"0:01\" \"0:50\" ...  $ Uploaded         : chr  \"2018-03-23\" \"2018-02-28\" \"2018-02-28\" \"2017-09-27\" ...  $ Other_species    : chr  \"\" \"Coereba flaveola\" \"\" \"\" ...  $ Remarks          : chr  \"In forest.\" \"Forest border.\" \"Forest border.\" \"\" ...  $ Bird_seen        : chr  \"yes\" \"yes\" \"yes\" \"yes\" ...  $ Playback_used    : chr  \"no\" \"no\" \"no\" \"no\" ...  $ Other_species1   : chr  NA NA NA NA ...  $ Other_species2   : chr  NA NA NA NA ...  $ Other_species3   : chr  NA NA NA NA ...  $ Other_species4   : chr  NA NA NA NA ...  $ Other_species5   : chr  NA NA NA NA ...  $ Other_species6   : chr  NA NA NA NA ...  $ Other_species7   : chr  NA NA NA NA ...  $ Other_species8   : chr  NA NA NA NA ... # Query xeno-canto for all Phaethornis longirostris recordings Phae.lon <- query_xc(qword = \"Phaethornis longirostris\", download = FALSE)  # Check out the structure of resulting the data frame str(Phae.lon) 'data.frame':   85 obs. of  31 variables:  $ Recording_ID     : int  497036 495384 433645 402755 355350 282529 274377 271499 154138 154129 ...  $ Genus            : chr  \"Phaethornis\" \"Phaethornis\" \"Phaethornis\" \"Phaethornis\" ...  $ Specific_epithet : chr  \"longirostris\" \"longirostris\" \"longirostris\" \"longirostris\" ...  $ Subspecies       : chr  \"\" \"cephalus\" \"\" \"\" ...  $ English_name     : chr  \"Long-billed Hermit\" \"Long-billed Hermit\" \"Long-billed Hermit\" \"Long-billed Hermit\" ...  $ Recordist        : chr  \"Jerome Fischer\" \"Guy Kirwan\" \"Oscar Campbell\" \"Marilyn Castillo\" ...  $ Country          : chr  \"Panama\" \"Panama\" \"Panama\" \"Mexico\" ...  $ Locality         : chr  \"Achiote Road, Colón Province\" \"Panama Rainforest Discovery Centre\" \"Panama Rainforest Discovery Centre\" \"Boca de Chajul, Marqués de Comillas, Chiapas\" ...  $ Latitude         : num  9.2 9.13 9.13 16.13 8.94 ...  $ Longitude        : num  -80 -79.7 -79.7 -90.9 -78.5 ...  $ Vocalization_type: chr  \"song\" \"call\" \"song\" \"alarm call\" ...  $ Audio_file       : chr  \"//www.xeno-canto.org/497036/download\" \"//www.xeno-canto.org/495384/download\" \"//www.xeno-canto.org/433645/download\" \"//www.xeno-canto.org/402755/download\" ...  $ License          : chr  \"//creativecommons.org/licenses/by-nc-sa/4.0/\" \"//creativecommons.org/licenses/by-nc-sa/4.0/\" \"//creativecommons.org/licenses/by-nc-sa/4.0/\" \"//creativecommons.org/licenses/by-nc-nd/4.0/\" ...  $ Url              : chr  \"//www.xeno-canto.org/497036\" \"//www.xeno-canto.org/495384\" \"//www.xeno-canto.org/433645\" \"//www.xeno-canto.org/402755\" ...  $ Quality          : chr  \"no score\" \"A\" \"A\" \"A\" ...  $ Time             : chr  \"09:30\" \"09:00\" \"08:30\" \"07:30\" ...  $ Date             : chr  \"2019-02-10\" \"2019-07-04\" \"2018-07-10\" \"2016-01-18\" ...  $ Altitude         : chr  \"30\" \"70\" \"70\" \"180\" ...  $ Spectrogram_small: chr  \"//www.xeno-canto.org/sounds/uploaded/JPBSNBUUEF/ffts/XC497036-small.png\" \"//www.xeno-canto.org/sounds/uploaded/BZVYBRUAAE/ffts/XC495384-small.png\" \"//www.xeno-canto.org/sounds/uploaded/RFRTVEHIZX/ffts/XC433645-small.png\" \"//www.xeno-canto.org/sounds/uploaded/CHRIDPJVMH/ffts/XC402755-small.png\" ...  $ Spectrogram_med  : chr  \"//www.xeno-canto.org/sounds/uploaded/JPBSNBUUEF/ffts/XC497036-med.png\" \"//www.xeno-canto.org/sounds/uploaded/BZVYBRUAAE/ffts/XC495384-med.png\" \"//www.xeno-canto.org/sounds/uploaded/RFRTVEHIZX/ffts/XC433645-med.png\" \"//www.xeno-canto.org/sounds/uploaded/CHRIDPJVMH/ffts/XC402755-med.png\" ...  $ Spectrogram_large: chr  \"//www.xeno-canto.org/sounds/uploaded/JPBSNBUUEF/ffts/XC497036-large.png\" \"//www.xeno-canto.org/sounds/uploaded/BZVYBRUAAE/ffts/XC495384-large.png\" \"//www.xeno-canto.org/sounds/uploaded/RFRTVEHIZX/ffts/XC433645-large.png\" \"//www.xeno-canto.org/sounds/uploaded/CHRIDPJVMH/ffts/XC402755-large.png\" ...  $ Spectrogram_full : chr  \"//www.xeno-canto.org/sounds/uploaded/JPBSNBUUEF/ffts/XC497036-full.png\" \"//www.xeno-canto.org/sounds/uploaded/BZVYBRUAAE/ffts/XC495384-full.png\" \"//www.xeno-canto.org/sounds/uploaded/RFRTVEHIZX/ffts/XC433645-full.png\" \"//www.xeno-canto.org/sounds/uploaded/CHRIDPJVMH/ffts/XC402755-full.png\" ...  $ Length           : chr  \"0:27\" \"0:49\" \"0:58\" \"0:03\" ...  $ Uploaded         : chr  \"2019-09-13\" \"2019-09-01\" \"2018-09-09\" \"2018-02-14\" ...  $ Other_species    : chr  \"\" \"\" \"\" \"\" ...  $ Remarks          : chr  \"\" \"Lek with up to three different individuals. Focal bird was perched 1.5 m above ground on a 45-degree angle twig.\" \"Male seen on lek; 3 feet above ground in gap in undergrowth. Calling incessantly and quivering tail as doing so\"| __truncated__ \"\" ...  $ Bird_seen        : chr  \"yes\" \"yes\" \"yes\" \"yes\" ...  $ Playback_used    : chr  \"no\" \"no\" \"no\" \"no\" ...  $ Other_species1   : chr  NA NA NA NA ...  $ Other_species2   : chr  NA NA NA NA ...  $ Other_species3   : chr  NA NA NA NA ... # Image type default is jpeg, but tiff files have better resolution  # When the data frame contains multiple species, this will yield one map per species map_xc(X = Phae, img = TRUE, it = \"tiff\") # all species in the genus map_xc(X = Phae.lon, img = FALSE) # a single species"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"filter-xeno-canto-recordings-by-quality-signal-type-and-locality","dir":"Articles","previous_headings":"Obtain metadata and recordings from xeno-canto","what":"Filter xeno-canto recordings by quality, signal type and locality","title":"<font size=","text":"cases, need filter xeno-canto metadata type signal want analyze. subset metadata, can input filtered metadata back query_xc download selected recordings. many ways filter data R, example can modified fit data. , downloading sound files xeno-canto, want ensure select high quality sound files contain songs (rather acoustic signal types) also recorded La Selva Biological Station Costa Rica.       can check location coordinates make sense (recordings single place Costa Rica) making map recordings using map_xc.   ’re sure want recordings, use query_xc download files. Also, save metadata .csv file.  ","code":"# How many recordings are available for Phaethornis longirostris? nrow(Phae.lon) [1] 85 # How many signal types exist in the xeno-canto metadata? unique(Phae.lon$Vocalization_type) [1] \"song\"              \"call\"              \"alarm call\"        \"song at lek\"       \"lekking\"           \"flight call\"       \"calls\"              [8] \"300\"               \"song, wing whirrs\" \"lek, song\" # How many recordings per signal type? table(Phae.lon$Vocalization_type) 300        alarm call              call             calls       flight call         lek, song           lekking              song                  1                 1                 6                 1                 2                 2                 1                68        song at lek song, wing whirrs                  2                 1 # Filter the metadata to select the signals we want to retain  # First by quality Phae.lon <- Phae.lon[Phae.lon$Quality == \"A\", ] nrow(Phae.lon) [1] 12 # Then by signal type Phae.lon.song <- Phae.lon[grep(\"song\", Phae.lon$Vocalization_type, ignore.case = TRUE), ] nrow(Phae.lon.song) [1] 9 # Finally by locality Phae.lon.LS <- Phae.lon.song[grep(\"La Selva Biological Station, Sarapiqui, Heredia\", Phae.lon.song$Locality, ignore.case = FALSE), ]  # Check resulting data frame, 6 recordings remain str(Phae.lon.LS) 'data.frame':   3 obs. of  31 variables:  $ Recording_ID     : int  154138 154129 154072  $ Genus            : chr  \"Phaethornis\" \"Phaethornis\" \"Phaethornis\"  $ Specific_epithet : chr  \"longirostris\" \"longirostris\" \"longirostris\"  $ Subspecies       : chr  \"\" \"\" \"\"  $ English_name     : chr  \"Long-billed Hermit\" \"Long-billed Hermit\" \"Long-billed Hermit\"  $ Recordist        : chr  \"Marcelo Araya-Salas\" \"Marcelo Araya-Salas\" \"Marcelo Araya-Salas\"  $ Country          : chr  \"Costa Rica\" \"Costa Rica\" \"Costa Rica\"  $ Locality         : chr  \"La Selva Biological Station, Sarapiqui, Heredia\" \"La Selva Biological Station, Sarapiqui, Heredia\" \"La Selva Biological Station, Sarapiqui, Heredia\"  $ Latitude         : num  10.4 10.4 10.4  $ Longitude        : num  -84 -84 -84  $ Vocalization_type: chr  \"song\" \"song\" \"song\"  $ Audio_file       : chr  \"//www.xeno-canto.org/154138/download\" \"//www.xeno-canto.org/154129/download\" \"//www.xeno-canto.org/154072/download\"  $ License          : chr  \"//creativecommons.org/licenses/by-nc-sa/3.0/\" \"//creativecommons.org/licenses/by-nc-sa/3.0/\" \"//creativecommons.org/licenses/by-nc-sa/3.0/\"  $ Url              : chr  \"//www.xeno-canto.org/154138\" \"//www.xeno-canto.org/154129\" \"//www.xeno-canto.org/154072\"  $ Quality          : chr  \"A\" \"A\" \"A\"  $ Time             : chr  \"14:18\" \"10:09\" \"7:05\"  $ Date             : chr  \"2010-05-21\" \"2010-05-21\" \"2010-05-28\"  $ Altitude         : chr  \"\" \"\" \"\"  $ Spectrogram_small: chr  \"//www.xeno-canto.org/sounds/uploaded/EMCWQLLKEW/ffts/XC154138-small.png\" \"//www.xeno-canto.org/sounds/uploaded/EMCWQLLKEW/ffts/XC154129-small.png\" \"//www.xeno-canto.org/sounds/uploaded/EMCWQLLKEW/ffts/XC154072-small.png\"  $ Spectrogram_med  : chr  \"//www.xeno-canto.org/sounds/uploaded/EMCWQLLKEW/ffts/XC154138-med.png\" \"//www.xeno-canto.org/sounds/uploaded/EMCWQLLKEW/ffts/XC154129-med.png\" \"//www.xeno-canto.org/sounds/uploaded/EMCWQLLKEW/ffts/XC154072-med.png\"  $ Spectrogram_large: chr  \"//www.xeno-canto.org/sounds/uploaded/EMCWQLLKEW/ffts/XC154138-large.png\" \"//www.xeno-canto.org/sounds/uploaded/EMCWQLLKEW/ffts/XC154129-large.png\" \"//www.xeno-canto.org/sounds/uploaded/EMCWQLLKEW/ffts/XC154072-large.png\"  $ Spectrogram_full : chr  \"//www.xeno-canto.org/sounds/uploaded/EMCWQLLKEW/ffts/XC154138-full.png\" \"//www.xeno-canto.org/sounds/uploaded/EMCWQLLKEW/ffts/XC154129-full.png\" \"//www.xeno-canto.org/sounds/uploaded/EMCWQLLKEW/ffts/XC154072-full.png\"  $ Length           : chr  \"2:58\" \"2:25\" \"3:09\"  $ Uploaded         : chr  \"2013-11-11\" \"2013-11-11\" \"2013-11-11\"  $ Other_species    : chr  \"\" \"\" \"\"  $ Remarks          : chr  \"Recording equipment: Marantz Pmd 660+sennheiser ME67. Comments: individuo-AK; lek-Sura. Primera parte de grabac\"| __truncated__ \"Recording equipment: Marantz Pmd 660+sennheiser ME67. Comments: individuo-AK; lek-Sura. video 511, revisar. 9 m\"| __truncated__ \"Recording equipment: Marantz Pmd 660+sennheiser ME67. Comments: individuo-VA; lek-CCL. en percha ded VA, probab\"| __truncated__  $ Bird_seen        : chr  \"yes\" \"yes\" \"yes\"  $ Playback_used    : chr  \"no\" \"no\" \"no\"  $ Other_species1   : chr  NA NA NA  $ Other_species2   : chr  NA NA NA  $ Other_species3   : chr  NA NA NA # map in the RStudio graphics device (img = FALSE) map_xc(Phae.lon.LS, img = FALSE) # Download sound files query_xc(X = Phae.lon.LS)  # Save the metadata object as a .csv file write.csv(Phae.lon.LS, \"Phae_lon.LS.csv\", row.names = FALSE)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"convert-xeno-canto-mp3-recordings-to-wav-format","dir":"Articles","previous_headings":"Obtain metadata and recordings from xeno-canto","what":"Convert xeno-canto mp3 recordings to wav format","title":"<font size=","text":"xeno-canto maintains recordings mp3 format due file size restrictions. However, require wav format downstream analyses. Compression wav mp3 back involves information losses, recordings undergone transformation successfully used research  [3]. convert mp3 wav, can use warbleR function mp32wav, relies underlying function tuneR package. function always work (remains unclear !). bug fixed future versions tuneR. RStudio aborts running mp32wav, use mp3 wav converter online, download open source software Audacity (available Mac, Linux Windows users). mp3 files converted, need check wav files corrupted can read RStudio (wav files can’t read due format permission issues).  ","code":"# Always check you're in the right directory beforehand # getwd()  # here we are downsampling the original sampling rate of 44.1 kHz to speed up downstream analyses in the vignette series mp32wav(samp.rate = 22.05)  # Use checkwavs to see if wav files can be read check_wavs()"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"a-note-on-combining-data-from-different-sources","dir":"Articles","previous_headings":"","what":"A note on combining data from different sources","title":"<font size=","text":"now .wav files existing recordings ( Phae.long1.wav Phae.long4.wav, representing recordings made field) well 6 recordings downloaded xeno-canto. existing Phae.long*.wav recordings associated selection tables made Raven, xeno-canto selection tables, parsed sound files select signals within . Depending question(s), can combine sound files xeno-canto single data set (ground-truthing). made possible fact warbleR functions read sound files present working directory. main case study vignette, move forwards xeno-canto sound files. use example sound files demonstrating warbleR functions mandatory case study may useful workflow (e.g. consolidate ). continue workflow, remove example wav files working directory","code":"# Make sure you are in the right working directory # Note that all the example sound files begin with the pattern \"Phae.long\" wavs <- list.files(pattern = \"wav$\") wavs  rm <- wavs[grep(\"Phae.long\", wavs)]  file.remove(rm)  # Check that the right wav files were removed # Only xeno-cant wav files should remain list.files(pattern = \"wav$\")"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"consolidate-sound-files-across-various-directories","dir":"Articles","previous_headings":"A note on combining data from different sources","what":"Consolidate sound files across various directories","title":"<font size=","text":"Since warbleR handles sound files working directories, ’s good practice keep sound files associated project single directory. ’re someone likes make new directory every batch recordings new analysis associated project, may find consolidate function useful. case recordings wav format skipped previous sections, must specify location sound files use prior running downstream functions setting working directory .","code":"# For this example, set your working directory to an empty temporary directory setwd(tempdir())  # Here we will simulate the problem of having files scattered in multiple directories  # Load .wav file examples from the NatureSounds package data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\"))  # Create first folder inside the temporary directory and write new .wav files inside this new folder dir.create(\"folder1\") writeWave(Phae.long1, file.path(\"folder1\", \"Phae_long1.wav\")) writeWave(Phae.long2, file.path(\"folder1\", \"Phae_long2.wav\"))  # Create second folder inside the temporary directory and write new .wav files inside this second new folder dir.create(\"folder2\") writeWave(Phae.long3, file.path(\"folder2\", \"Phae_long3.wav\"))  # Consolidate the scattered files into a single folder, and make a .csv file that contains metadata (location, old and new names in the case that files were renamed) invisible(consolidate(path = tempdir(), save.csv = TRUE))  list.files(path = \"./consolidated_folder\")  # set your working directory back to \"/home/user/warbleR_example\" for the rest of the vignette, or to whatever working directory you were using originally"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"make-long-spectrograms-of-whole-recordings","dir":"Articles","previous_headings":"","what":"Make long spectrograms of whole recordings","title":"<font size=","text":"full_spectrograms produces image files spectrograms whole sound files split multiple rows. useful tool filtering visual inspection. full_spectrograms allows visually inspect quality recording (e.g. amount background noise) type, number, completeness vocalizations interest. can discard image files recordings longer want analyze. First, adjust function arguments needed. can work subset recordings specifying names flist argument. satisfied argument settings can make long spectrograms sound files. pdf image files (working directory) xeno-canto recordings look like :   sound file name page number placed top right corner. dimensions image made letter paper size printing subsequent visual inspection. Recording 154123 lot background noise. Delete wav file recording remove subsequent analyses.","code":"# Create a vector of all the recordings in the directory wavs <- list.files(pattern = \"wav$\")  # Print this object to see all sound files # 6 sound files from xeno-canto wavs  # Select a subset of recordings to explore full_spectrograms() arguments # Based on the list of wav files we created above sub <- wavs[c(1, 5)]  # How long are these files? this will determine number of pages returned by full_spectrograms duration_wavs(sub)  # ovlp = 10 to speed up function # tiff image files are better quality and are faster to produce full_spectrograms(flist = sub, ovlp = 10, it = \"tiff\")  # We can zoom in on the frequency axis by changing flim, # the number of seconds per row, and number of rows full_spectrograms(flist = sub, flim = c(2, 10), sxrow = 6, rows = 15, ovlp = 10, it = \"tiff\") # Make long spectrograms for the xeno-canto sound files full_spectrograms(flim = c(2, 10), ovlp = 10, sxrow = 6, rows = 15, it = \"jpeg\", flist = fl)  # Concatenate full_spectrograms image files into a single PDF per recording # full_spectrograms images must be jpegs to do this full_spectrograms2pdf(keep.img = FALSE, overwrite = TRUE)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"select-signals-in-warbler","dir":"Articles","previous_headings":"","what":"Select signals in warbleR","title":"<font size=","text":"warbleR provides function selecting acoustic signals within recordings. auto_detec automatically detects start end signals sound files based amplitude, duration, frequency range attributes. functions fastest shorter recordings, ways deal larger recordings (hour long ). section expanded important function arguments, check function documentation information.","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"automatically-detect-signals-with-auto_detec","dir":"Articles","previous_headings":"Select signals in warbleR","what":"Automatically detect signals with auto_detec","title":"<font size=","text":"auto_detec 2 types output:** + data frame recording name, selection, start end times. last two temporal coordinates passed downstream functions measure acoustic parameters + spectrogram per recording, red dotted lines marking start end detected signal, saved working directory Check auto_detec documentation information. argument threshold one important detection parameters, well information signal frequency range duration. Phaethornis longirostris songs frequencies 2 10 kHz durations 0.05 0.5 s. need detect signals within recording, play around different arguments increase detection accuracy. Since may need several rounds optimization, recommend using subsets recordings speed process. species study produces stereotyped signals, like Phaethornis longirostris, just signals needed per recording, low-accuracy detection yield enough selections. auto_detec replace visual inspection selected signals. Ensure set aside time inspect selected signals accuracy. often need run detection functions several times, process get know signals better (don’t already). Check image files working directory. Note songs correctly detected undesired sounds also detected. cases, undesired selections shorter duration target signals. won’t save auto_detec ouput object ’re satisfied detection. improve detection play around argument values. Also note image files produced auto_detec contain values used different arguments, can help better compare runs. detection parameters work well Phaethornis longirostris  recordings: seems provide good detection recordings (recording ID 154161): auto_detec image example   ’re satisfied detection, can run auto_detec recordings, removing argument flist (auto_detec runs wav files working directory). also save temporal output object. Let’s look number selections per sound file:","code":"# Select a subset of sound files # Reinitialize the wav object wavs <- list.files(pattern = \".wav$\", ignore.case = TRUE)  # Set a seed so we all have the same results set.seed(1) sub <- wavs[sample(1:length(wavs), 3)]  # Run auto_detec() on subset of recordings # The data frame object output is printed to the console, we are not saving this in an object yet, since we are just playing around with argument settings # you can run this in parallel to speed up computation time auto_detec(flist = sub, bp = c(1, 10), threshold = 10, mindur = 0.05, maxdur = 0.5, envt = \"abs\", ssmooth = 300, ls = TRUE, res = 100, flim = c(1, 12), wl = 300, set = TRUE, sxrow = 6, rows = 15, redo = FALSE) auto_detec(flist = sub, bp = c(2, 10), threshold = 20, mindur = 0.09, maxdur = 0.22, envt = \"abs\", ssmooth = 900, ls = TRUE, res = 100, flim = c(1, 12), wl = 300, set = TRUE, sxrow = 6, rows = 15, redo = TRUE, it = \"tiff\", img = TRUE, smadj = \"end\") Phae.ad <- auto_detec(bp = c(2, 10), threshold = 20, mindur = 0.09, maxdur = 0.22, envt = \"abs\", ssmooth = 900, ls = TRUE, res = 100, flim = c(2, 10), wl = 300, set = TRUE, sxrow = 6, rows = 15, redo = TRUE, it = \"tiff\", img = TRUE, smadj = \"end\") table(Phae.ad$sound.files)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"use-snr-to-filter-automatically-selected-signals","dir":"Articles","previous_headings":"Select signals in warbleR","what":"Use SNR to filter automatically selected signals","title":"<font size=","text":"Signal--noise ratio (SNR) can useful filter automated signal detection. background noise detected signal low SNR, characteristic can used remove background noise auto_detec selection table. SNR = 1 means signal background noise amplitude, signals SNR <= 1 poor quality. SNR calculations can also used different purposes throughout analysis workflow.","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"optimize-snr-measurements","dir":"Articles","previous_headings":"Select signals in warbleR > Use SNR to filter automatically selected signals","what":"Optimize SNR measurements","title":"<font size=","text":"snr_spectrograms function family spectrogram creators allows pick margin measuring noise. margins important calculating SNR, especially working signals separated short gaps (e.g. duets). Check image files working directory. margin overlaps neighboring signals, smaller margin better.  ","code":"# A margin that's too large causes other signals to be included in the noise measurement # Re-initialize X as needed, for either auto_detec output  # Try this with 10% of the selections first # Set a seed first, so we all have the same results set.seed(5)  X <- Phae.ad[sample(1:nrow(Phae.ad), (nrow(Phae.ad) * 0.05)), ] nrow(X)  snr_spectrograms(X = X, flim = c(2, 10), snrmar = 0.5, mar = 0.7, it = \"jpeg\") # This smaller margin is better snr_spectrograms(X = X, flim = c(2, 10), snrmar = 0.04, mar = 0.7, it = \"jpeg\")"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"calculate-snr-for-automatically-selected-signals","dir":"Articles","previous_headings":"Select signals in warbleR > Use SNR to filter automatically selected signals","what":"Calculate SNR for automatically selected signals","title":"<font size=","text":"’ve picked SNR margin can move forward SNR calculation. measure SNR every selection speed process. just need songs characterize individuals (sound files equivalent different individuals), can choose selections highest SNR per sound file. example, choose 5 selections per recording highest SNRs.  ","code":"Phae.snr <- sig2noise(X = Phae.ad[seq(1, nrow(Phae.ad), 2), ], mar = 0.04) Phae.hisnr <- Phae.snr[ave(-Phae.snr$SNR, Phae.snr$sound.files, FUN = rank) <= 5, ]  # save the selections as a physical file write.csv(Phae.hisnr, \"Phae_hisnr.csv\", row.names = FALSE)  # Double check the number of selection per sound files # Only the xeno-canto sound files will have 5 selections, the other sound files started off with less than 5 selections table(Phae.hisnr$sound.files)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"next-vignette-visual-inspection-and-signal-classification","dir":"Articles","previous_headings":"","what":"Next vignette: Visual inspection and signal classification","title":"<font size=","text":"given examples begin warbleR workflow. Note many different ways begin workflow, depending question source data. running code first vignette, now idea : type data used warbleR (sound files selections) import Raven selection tables sound files obtain open-access xeno-canto sound files create long spectrograms recordings visual inspection automatic selection filtering automatically selected signals using SNR manual selection next vignette cover second phase warbleR workflow, includes methods visualize signals quality control classification.","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"<font size=","text":"Please cite warbleR use package: Araya-Salas, M. Smith-Vidaurre, G. (2017), warbleR: R package streamline analysis animal acoustic signals. Methods Ecol Evol. 8, 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"reporting-bugs","dir":"Articles","previous_headings":"","what":"Reporting bugs","title":"<font size=","text":"Please report bugs .  ","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_01.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"<font size=","text":"Araya-Salas, M. G. Smith-Vidaurre. 2016. warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution. doi: 10.1111/2041-210X.12624 Araya-Salas, M. T. Wright. 2013. Open-ended song learning hummingbird. Biology Letters. 9 (5). doi: 10.1098/rsbl.2013.0625 Medina-Garcia, Angela, M. Araya-Salas, T. Wright. 2015. vocal learning accelerate acoustic diversification? Evolution contact calls Neotropical parrots. Journal Evolutionary Biology. doi: 10.1111/jeb.12694  ","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"bioacoustics-in-r-with-warbler","dir":"Articles","previous_headings":"","what":"Bioacoustics in R with warbleR","title":"<font size=","text":"Bioacoustics research encompasses wide range questions, study systems methods, including software used analyses. warbleR Rraven packages leverage flexibility R environment offer broad accessible bioinformatics tool set. packages fundamentally rely upon two types data begin bioacoustic analyses R: Sound files: Recordings wav mp3 format, either research open-access databases like xeno-canto Selection tables: Selection tables contain temporal coordinates (start end points) selected acoustic signals within recordings","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"package-repositories","dir":"Articles","previous_headings":"Bioacoustics in R with warbleR","what":"Package repositories","title":"<font size=","text":"packages available CRAN: warbleR, Rraven, well GitHub: warbleR, Rraven. GitHub repository always contain latest functions updates. can also check article Methods Ecology Evolution documenting warbleR package [1]. welcome users provide feedback, contribute updates new functions report bugs warbleR’s GitHub repository. Please note warbleR Rraven use functions seewave, monitoR, tuneR dtw packages internally. warbleR Rraven designed make bioacoustics analyses accessible R users, analyses possible without tools provided packages . packages given credit using warbleR Rraven including citations publications appropriate (e.g. citation(\"seewave\")).","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"parallel-processing-in-warbler","dir":"Articles","previous_headings":"Bioacoustics in R with warbleR","what":"Parallel processing in warbleR","title":"<font size=","text":"Parallel processing, using multiple cores machine, can greatly speed analyses. iterative warbleR functions now parallel processing Linux, Mac Windows operating systems. functions also contain progress bars visualize progress normal parallel processing. See [1] details improved running time using parallel processing.","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"vignette-introduction","dir":"Articles","previous_headings":"","what":"Vignette introduction","title":"<font size=","text":"previous vignette, used Rraven package import Raven selection tables recordings working directory, added recordings data set downloading new sound files open-access xeno-canto database reviewed methods automated manual signal selection warbleR. continue case study microgeographic vocal variation long-billed hermit hummingbirds, Phaethornis longirostris [2] : Performing quality control processing selected signals, including visual inspection tailoring temporal coordinates Making lexicons visual classification signals vignette can run without advanced understanding R, long know run code console. However, knowing basic R coding helpful modify code research questions. details function arguments, input output, read documentation function question (e.g. ?catalog).  ","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"prepare-for-analyses","dir":"Articles","previous_headings":"","what":"Prepare for analyses","title":"<font size=","text":"vignette series always include available warbleR functions, existing functions updated new functions added. see functions available package:","code":"library(warbleR)  # set your working directory appropriately # setwd(\"/path/to/working directory\")  # run this if you have restarted RStudio between vignettes without saving your workspace (assuming that you are in your /home/username directory) setwd(file.path(getwd(), \"warbleR_example\"))  # Check your location getwd() # The package must be loaded in your working environment ls(\"package:warbleR\")"},{"path":[]},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"find-overlapping-selections","dir":"Articles","previous_headings":"Quality control filtering of selections","what":"Find overlapping selections","title":"<font size=","text":"Overlapping selections can sometimes arise selecting signals using functions software. function helps detect overlapping signals selection table, arguments can play around overlap detection, renaming deleting overlapping selections.","code":"# To run this example: # Open Phae_hisnr.csv and modify the start coordinate of the first selection and the end coordinate of the second selection so that the signals overlap  Phae.hisnr <- read.csv(\"Phae_hisnr.csv\", header = TRUE) str(Phae.hisnr) head(Phae.hisnr, n = 15)  # yields a data frame with an additional column (ovlp.sels) that indicates which selections overlap Phae.hisnr <- overlapping_sels(X = Phae.hisnr, max.ovlp = 0)  # run the function again but this time retain only the signals that don't overlap Phae.hisnr <- overlapping_sels(X = Phae.hisnr, max.ovlp = 0, drop = TRUE)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"make-spectrograms-of-selections","dir":"Articles","previous_headings":"Quality control filtering of selections","what":"Make spectrograms of selections","title":"<font size=","text":"spectrograms generates spectrograms individual selected signals. image files can used filter selections poorly made represent signals relevant analysis. quality control step important visualizing selected signals selection method, even imported selections Raven Syrinx. Inspect spectrograms throw away image files poor quality prepare later steps. Make sure working directory image files associated vignette. Delete image files corresponding recording 154070 selection 8 154070 selection 12, start coordinates selections accurate.","code":"spectrograms(Phae.hisnr, wl = 300, flim = c(2, 10), it = \"jpeg\", res = 150, osci = TRUE, ovlp = 90)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"remove-selections-with-missing-image-files","dir":"Articles","previous_headings":"Quality control filtering of selections","what":"Remove selections with missing image files","title":"<font size=","text":"removing poorest quality selections signals, quality control steps may helpful.","code":"# remove selections after deleting corresponding image files Phae.hisnr2 <- filtersels(Phae.hisnr, it = \"jpeg\", incl.wav = TRUE) nrow(Phae.hisnr2)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"check-selections","dir":"Articles","previous_headings":"Quality control filtering of selections","what":"Check selections","title":"<font size=","text":"Can selections read downstream functions? function checksels also yields data frame columns duration, minimum samples, sampling rate, channels bits. selections read, possible sound files corrupt. , use fixwavs function repair wav files.","code":"# if selections can be read, \"OK\" will be printed to check.res column checksels(Phae.hisnr2, check.header = FALSE)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"tailor-temporal-coordinates-of-selections","dir":"Articles","previous_headings":"Quality control filtering of selections","what":"Tailor temporal coordinates of selections","title":"<font size=","text":"Sometimes start end times selected signals need fine-tuned adjustments. particularly true signals found within bouts closely delivered sounds may hard pull apart, duets, multiple researchers use different rules--thumb select signals. tailor_sels provides interactive interface tailoring temporal coordinates selections. check image files generated running spectrograms , ’ll see selections made automatic detection process auto_detec accurate start /end coordinates. instance: end signal well selected.    temporal coordinates tailored signals saved _ .csv_ file called seltailor_output.csv. can rename file read back R continue downstream analyses.","code":"tailor_sels(Phae.hisnr2, wl = 300, flim = c(2, 10), wn = \"hanning\", mar = 0.1, osci = TRUE, title = c(\"sound.files\", \"selec\"), auto.next = TRUE)  # Read in tailor_sels output after renaming the csv file Phae.hisnrt <- read.csv(\"Phae_hisnrt.csv\", header = TRUE) str(Phae.hisnrt) 'data.frame':   23 obs. of  6 variables:  $ sound.files: chr  \"Phaethornis-longirostris-154070.wav\" \"Phaethornis-longirostris-154070.wav\" \"Phaethornis-longirostris-154070.wav\" \"Phaethornis-longirostris-154072.wav\" ...  $ selec      : int  14 18 20 36 108 124 142 148 57 83 ...  $ start      : num  8.66 11.08 12.19 22.6 76.04 ...  $ end        : num  8.79 11.2 12.32 22.73 76.16 ...  $ SNR        : num  11.7 11.6 10.2 15.5 15.3 ...  $ tailored   : chr  \"y\" \"y\" \"y\" \"y\" ..."},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"visual-classification-of-selected-signals","dir":"Articles","previous_headings":"","what":"Visual classification of selected signals","title":"<font size=","text":"Visual classification signals fundamental vocal repertoire analysis, can also useful questions. research focuses assessing variation individuals groups, several warbleR functions can provide important information steer analysis. discrete variation vocalization structure across groups (e.g. treatments geographic regions), visual classification vocalizations useful.","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"print-long-spectrograms-with-full_spectrograms","dir":"Articles","previous_headings":"Visual classification of selected signals","what":"Print long spectrograms with full_spectrograms","title":"<font size=","text":"function full_spectrogramsthat used last vignette can also tool visually classifying signals. Long spectrograms can printed classify signals hand, comments accompanying selections can printed selected signals. , print start end selections red dotted line, selection number printed signal. selection data frame contains comments column, printed selection number. Check image file working directory. look similar full_spectrograms images produced vignette 1, red dotted lines indicating selected signals start end.","code":"# highlight selected signals full_spectrograms(Phae.hisnrt, wl = 300, flim = c(2, 10), ovlp = 10, sxrow = 6, rows = 15, it = \"jpeg\")  # concatenate full_spectrograms image files into a single PDF per recording # full_spectrograms images must be jpegs full_spectrograms2pdf(keep.img = FALSE, overwrite = TRUE)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"highlight-spectrogram-regions-with-color_spectro","dir":"Articles","previous_headings":"Visual classification of selected signals","what":"Highlight spectrogram regions with color_spectro","title":"<font size=","text":"color_spectro allows highlight selections ’ve made within short region spectrogram. example use color_spectro highlight neighboring songs. function wide variety uses, especially useful analysis duets coordinated singing bouts. example taken directly color_spectro documentation. working data frame selections, make sure calculate frequency range selections beforehand using function frange, come next vignette.","code":"# we will use Phaethornis songs and selections from the warbleR package data(list = c(\"Phae.long1\", \"selec.table\")) writeWave(Phae.long1, \"Phae.long1.wav\") # save sound files  # subset selection table # already contains the frequency range for these signals st <- selec.table[selec.table$sound.files == \"Phae.long1.wav\", ]  # read wave file as an R object sgnl <- tuneR::readWave(as.character(st$sound.files[1]))  # create color column st$colors <- c(\"red2\", \"blue\", \"green\")  # highlight selections color_spectro(wave = sgnl, wl = 300, ovlp = 90, flim = c(1, 8.6), collevels = seq(-90, 0, 5), dB = \"B\", X = st, col.clm = \"colors\", base.col = \"skyblue\", t.mar = 0.07, f.mar = 0.1)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"optimize-spectrogram-display-parameters","dir":"Articles","previous_headings":"Visual classification of selected signals","what":"Optimize spectrogram display parameters","title":"<font size=","text":"spec_param makes catalog mosaic signal plotted different combinations spectrogram display arguments. purpose function help choose parameters yield best spectrograms (e.g. optimal visualization) signals (although low signal--noise ratio selections may exception).  ","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"make-lexicons-of-signals","dir":"Articles","previous_headings":"Visual classification of selected signals","what":"Make lexicons of signals","title":"<font size=","text":"section catalog taken Marcelo Araya-Salas’s bioacoustics GitHub blog slight modifications. interested geographic variation acoustic signals, usually want compare spectrograms different individuals sites. can challenging working large numbers signals, individuals /sites. catalog aims simplify task. works: catalog plots matrix spectrograms signals listed selection table catalog files saved image files working directory (path provided) Several image files generated signals fit single file Spectrograms can labeled color-tagged facilitate exploring variation related parameter interest (e.g. site song type already classified) different color palettes can used tag facilitates comparisons can control number rows columns well width height output image catalog allows group signals biologically relevant groups coloring background selected spectrograms accordingly. also option add hatching tag labels, well filling catalog spectrograms rows columns selection table data frame, among additional arguments. Check Marcelo’s post recent updates catalog function. move_imgs function can come handy creating multiple catalogs avoid overwriting previous image files, working rounds image files. case, first catalog create signals labeled, tagged grouped respective color hatching levels. second catalog create grouping signals whatsoever, used test inter-observer reliability. move_imgs helps us move first catalog another directory save overwritten creating second catalog. Catalog labels, tags groups   can also make lexicons blind scoring, useful determining interobserver reliability.","code":"# create a column of recording IDs for friendlier catalog labels rec_ID <- sapply(1:nrow(Phae.hisnrt), function(x) {   gsub(x = strsplit(as.character(Phae.hisnrt$sound.files[x]), split = \"-\")[[1]][3], pattern = \".wav$\", replacement = \"\") }) rec_ID  Phae.hisnrt$rec_ID <- rec_ID str(Phae.hisnrt)  # set color palette # alpha controls transparency for softer colors cmc <- function(n) cm.colors(n, alpha = 0.8)  catalog(X = Phae.hisnrt, flim = c(2, 10), nrow = 4, ncol = 3, height = 10, width = 10, tag.pal = list(cmc), cex = 0.8, same.time.scale = TRUE, mar = 0.01, wl = 300, gr = FALSE, labels = \"rec_ID\", tags = \"rec_ID\", hatching = 1, group.tag = \"rec_ID\", spec.mar = 0.4, lab.mar = 0.8, max.group.cols = 5)  catalog2pdf(keep.img = FALSE, overwrite = TRUE)  # assuming we are working from the warbleR_example directory # the ~/ format does not apply to Windows # make sure you have already moved or deleted all other pdf files move_imgs(from = \".\", it = \"pdf\", create.folder = TRUE, folder.name = \"Catalog_image_files\") # now create a catalog without labels, tags, groups or axes Phae.hisnrt$no_label <- \"\"  # catalog(X = Phae.hisnrt, flim = c(1, 10), nrow = 4, ncol = 3, height = 10, width = 10, cex = 0.8, same.time.scale = TRUE, mar = 0.01, wl = 300, spec.mar = 0.4, rm.axes = TRUE, labels = \"no_label\", lab.mar = 0.8, max.group.cols = 5, img.suffix = \"nolabel\")  catalog(X = Phae.hisnrt, flim = c(1, 10), nrow = 4, ncol = 3, height = 10, width = 10, tag.pal = list(cmc), cex = 0.8, same.time.scale = TRUE, mar = 0.01, wl = 300, gr = FALSE, labels = \"no_label\", spec.mar = 0.4, lab.mar = 0.8, max.group.cols = 5, img.suffix = \"nolabels\")  catalog2pdf(keep.img = FALSE, overwrite = TRUE)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"next-vignette-acoustic-dissimilarity-coordinated-singing-and-simulating-songs","dir":"Articles","previous_headings":"Visual classification of selected signals","what":"Next vignette: Acoustic (dis)similarity, coordinated singing and simulating songs","title":"<font size=","text":"finished second phase warbleR workflow, includes various options quality control filtering visual classification signals can leverage acoustic analysis. running code vignette, now idea : perform quality control filtering selected signals, including visual inspection tailoring temporal coordinates spectrograms long spectrograms highlighted regions within spectrograms catalogs lexicons individual signals next vignette cover third phase warbleR workflow, includes methods perform acoustic measurements batch process, example use measurements analysis geographic variation, coordinated singing analysis new function simulate songs.","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"<font size=","text":"Please cite warbleR use package: Araya-Salas, M. Smith-Vidaurre, G. (2017), warbleR: R package streamline analysis animal acoustic signals. Methods Ecol Evol. 8, 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_02.html","id":"reporting-bugs","dir":"Articles","previous_headings":"","what":"Reporting bugs","title":"<font size=","text":"Please report bugs .   References Araya-Salas, M. G. Smith-Vidaurre. 2016. warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution. doi: 10.1111/2041-210X.12624  ","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"bioacoustics-in-r-with-warbler","dir":"Articles","previous_headings":"","what":"Bioacoustics in R with warbleR","title":"<font size=","text":"Bioacoustics research encompasses wide range questions, study systems methods, including software used analyses. warbleR Rraven packages leverage flexibility R environment offer broad accessible bioinformatics tool set. packages fundamentally rely upon two types data begin bioacoustic analyses R: Sound files: Recordings wav mp3 format, either research open-access databases like xeno-canto Selection tables: Selection tables contain temporal coordinates (start end points) selected acoustic signals within recordings","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"package-repositories","dir":"Articles","previous_headings":"Bioacoustics in R with warbleR","what":"Package repositories","title":"<font size=","text":"packages available CRAN: warbleR, Rraven, well GitHub: warbleR, Rraven. GitHub repository always contain latest functions updates. can also check article Methods Ecology Evolution documenting warbleR package [1]. welcome users provide feedback, contribute updates new functions report bugs warbleR’s GitHub repository. Please note warbleR Rraven use functions seewave, monitoR, tuneR dtw packages internally. warbleR Rraven designed make bioacoustics analyses accessible R users, analyses possible without tools provided packages . packages given credit using warbleR Rraven including citations publications appropriate (e.g. citation(\"seewave\")).","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"parallel-processing-in-warbler","dir":"Articles","previous_headings":"Bioacoustics in R with warbleR","what":"Parallel processing in warbleR","title":"<font size=","text":"Parallel processing, using multiple cores machine, can greatly speed analyses. iterative warbleR functions now parallel processing Linux, Mac Windows operating systems. functions also contain progress bars visualize progress normal parallel processing. See [1] details improved running time using parallel processing.","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"vignette-introduction","dir":"Articles","previous_headings":"","what":"Vignette introduction","title":"<font size=","text":"previous vignette, performed quality control processing selected signals made lexicons visual classification. continue case study microgeographic vocal variation long-billed hermit hummingbirds, Phaethornis longirostris [2] (short sidenote using Tinamus major example tonal signal) : Detecting signal frequency range Extracting spectral entropy frequency contours time series Comparing methods quantitative analysis signal structure data set 29 acoustic parameters spectrographic cross-correlation dynamic time warping frequency contours Visually inspecting frequency contours Measuring acoustic parameters batch-process across signals Calculating pairwise acoustic (dis)similarity signals Analysis geographic variation Phaethornis longirostris songs also include examples end vignette perform coordinated singing analysis simulate songs. vignette can run without advanced understanding R, long know run code console. However, knowing basic R coding helpful modify code research questions. details function arguments, input output, read documentation function question (e.g. ?cross_correlation).  ","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"prepare-for-analyses","dir":"Articles","previous_headings":"","what":"Prepare for analyses","title":"<font size=","text":"vignette series always include available warbleR functions, existing functions updated new functions added. see functions available package:","code":"library(warbleR)  # set your working directory appropriately # setwd(\"/path/to/working directory\")  # run this if you have restarted RStudio between vignettes without saving your workspace # assumes that you are in your /home/username directory setwd(file.path(getwd(), \"warbleR_example\"))  # Check your location getwd() # The package must be loaded in your working environment ls(\"package:warbleR\")"},{"path":[]},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"detect-frequency-range","dir":"Articles","previous_headings":"Extract acoustic parameters as time series","what":"Detect frequency range","title":"<font size=","text":"Raven selection tables can return low high frequencies selections (e.g. .data freq.cols run_raven imp.raven TRUE), accuracy frequency selections depends signals selected. demonstrate visualize detect frequency range selected signals using functions freq_range_detec freq_range, options setting bandpass filters exclude background noise non-target acoustic signals. freq_range_detec creates plot print graphics device, also outputs data frame per recording frequency range. data frame can used subsequent analyses saved object. freq_range_detec works best single signals. used whole recording, freq_range_detec pick sounds recording. Finally, although using Phaethornis longirostris vocalizations throughout vignettes, signals harmonically structured. functions detecting frequency ranges, freq_range freq_range_detec work best tonal signals, example use Great Tinamou ( Tinamus major) songs. Download tinamou recording xeno-canto, make selections visualize/detect frequency ranges. function freq_range allows simultaneously return frequency ranges signals selection table, including graphical output freq_range_detec. Check resulting image file graphics device. addition image files, function returns original selection table, data frame newly calculated low high frequency measurements.","code":"tin <- query_xc(qword = \"Tinamus\", download = FALSE)  # select a single recording tin <- tin[tin$Recordist == \"Marcelo Araya-Salas\", ]  # download this recording query_xc(X = tin, download = TRUE)  mp32wav() # here we will use a data set with sound files that have been already annotated # read the selections back into the global environment Tin.sels <- read.csv(\"manualoc_output.csv\") str(Tin.sels)  # cut the original wave file by selections for freq_range_detec below writeWave(seewave::cutw(readWave(\"Tinamus-major-154191.wav\"), from = Tin.sels$start[1], to = Tin.sels$end[1], f = 44100, plot = FALSE, output = \"Wave\"), filename = \"Tinamus-major-154191-1.wav\")  writeWave(seewave::cutw(readWave(\"Tinamus-major-154191.wav\"), from = Tin.sels$start[2], to = Tin.sels$end[2], f = 44100, plot = FALSE, output = \"Wave\"), filename = \"Tinamus-major-154191-2.wav\") # note that changing the threshold argument in combination with the bandpass argument can improve the detection freq_range_detec(readWave(\"Tinamus-major-154191-1.wav\"), flim = c(0, 2.5), bp = c(0, 3), threshold = 15, plot = TRUE) # here, giving a strict bandpass with very low threshold improves freq_range detection # since the curving end of the tinamou signal is lower amplitude than the rest of the signal c(readWave(\"Tinamus-major-154191-1.wav\"), flim = c(0, 2.5), bp = c(0, 3), threshold = 1, plot = TRUE) # use arguments from freq_range_detec above fr <- freq_range(Tin.sels, threshold = 1, res = 100, flim = c(0, 2.5), bp = c(0.5, 2.5)) str(fr)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"extract-spectral-entropy-as-a-time-series","dir":"Articles","previous_headings":"Extract acoustic parameters as time series","what":"Extract spectral entropy as a time series","title":"<font size=","text":"Spectral entropy can calculated time series selected signals plotted onto image files. Previously, spectral entropy available sole measurement across selection, measured spectro_analysis. Check resulting image files working directory.","code":"Phae.hisnrt <- read.csv(\"Phae_hisnrt.csv\", header = TRUE) str(Phae.hisnrt)  se <- entropy_ts(Phae.hisnrt, wl = 300, length.out = 10, threshold = 10, img = TRUE, img.suffix = \"entropy_ts\", type = \"b\", ovlp = 90, sp.en.range = c(-25, 10), flim = c(2, 10), picsize = 0.75, title = FALSE)  str(se)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"visualizing-frequency-contours-with-track_freq_contour","dir":"Articles","previous_headings":"Extract acoustic parameters as time series > Extract spectral entropy as a time series","what":"Visualizing frequency contours with track_freq_contour","title":"<font size=","text":"function track_freq_contour allows create spectrograms visualize accuracy dominant frequency fundamental frequency measurements. Use track_freq_contour recordings want extract frequency contours time series, later, calculate frequency measurements. Scroll spectrograms get feeling well frequency measurements performed across recordings. Running track_freq_contour can allow decide frequency parameters use subsequent analyses, namely spectro_analysis dynamic time warping methods. Also, ff frequency measurements look acceptable bandpass setting used track_freq_contour, use bandpass running spectro_analysis.   Note fundamental frequency measurements always accurate, remove fundamental frequency measurements later .","code":"# Note that the dominant frequency measurements are almost always more accurate track_freq_contour(Phae.hisnrt, wl = 300, flim = c(2, 10), bp = c(1, 12), it = \"jpeg\")  # We can change the lower end of bandpass to make the frequency measurements more precise track_freq_contour(Phae.hisnrt, wl = 300, flim = c(2, 10), bp = c(2, 12), col = c(\"purple\", \"orange\"), pch = c(17, 3), res = 100, it = \"jpeg\", picsize = 0.8)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"extract-fundamental-or-dominant-frequency-contours-as-a-time-series","dir":"Articles","previous_headings":"Extract acoustic parameters as time series","what":"Extract fundamental or dominant frequency contours as a time series","title":"<font size=","text":"functions return data frame contains estimated frequency contours time series across signal input data frame. can also specify want create image files estimated frequency contours plotted spectrograms. can change argument settings better visualize signals change estimation frequency contour. instance, argument threshold (auto_detec) controls amplitude threshold estimating frequency values time point. Note fundamental frequency contour estimation can often errors, tends perform best tonal signals. frequency contours can visualized using track_freq_contour.","code":"# Fundamental frequency contour ff_df <- freq_ts(Phae.hisnrt, wl = 300, length.out = 20, threshold = 15, img = TRUE, img.suffix = \"ff\", type = \"p\", ovlp = 70, clip.edges = FALSE, leglab = \"freq_ts\", ff.method = \"tuneR\")  str(ff_df) # Dominant frequency contour  # Uses seewave function dfreq by default df_df <- freq_ts(Phae.hisnrt, wl = 300, length.out = 20, threshold = 15, img = TRUE, img.suffix = \"ff\", type = \"p\", ovlp = 70, clip.edges = FALSE, leglab = \"freq_ts\", fsmooth = 0.2)  str(df_df)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"manually-tailor-frequency-contours-with-tailor_sels","dir":"Articles","previous_headings":"Extract acoustic parameters as time series","what":"Manually tailor frequency contours with tailor_sels","title":"<font size=","text":"functions track/extract dominant fundamental frequency contours perform best tonal signals. frequency measurements signals harmonic structure tend jump around, might always match visual tracking frequency contours. case, can use function tailor_sels fix frequency contours individual frequency measurements clearly far frequency contour detected human eye. tailor_sels function used vignette 2 series, changing arguments, can use tailor_sels fix frequency contours. Note manually fixing frequency contours might make sense, depending question /contour question. instance, dominant frequency contour harmonic signal jumps around form smooth contour may fact truth, rather mis-estimation contour. hand, fundamental frequencies can easily traced human eye across signal, using tailor_sels fix frequency contour jumps around signal makes sense. new graphics window tailor_sels appears, show spectrograms saw vignette 2, frequency contours plotted points spectrogram. fix frequency contour, click near malaligned points place frequency contour detect eye. tailor_sels makes new .csv file working directory merges original data frame (, Phae.hisnrt) modified frequency time series (, ff_df modified frequency values). check manual tracing improved frequency contours, can use track_freq_contour make spectrograms new frequency contours plotted custom contours.","code":"# Use the original data frame of songs for the main tailor_sels dataset # the data frame with the fundamental frequency contours is provided for manual tracing tailor_sels(Phae.hisnrt,   wl = 300, flim = c(2, 10), wn = \"hanning\", mar = 0.1,   osci = TRUE, title = c(\"sound.files\", \"selec\"), auto.contour = TRUE, ts.df = ff_df, col = \"red\", alpha = 0.6 )  # rename your tailor_sels output csv as desired, then read it back into R mff <- read.csv(\"seltailor_output_mff.csv\") str(mff)  track_freq_contour(Phae.hisnrt, wl = 300, flim = c(2, 10), bp = c(1, 12), it = \"jpeg\", custom.contour = mff)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"count-inflections-across-frequency-contours","dir":"Articles","previous_headings":"Extract acoustic parameters as time series","what":"Count inflections across frequency contours","title":"<font size=","text":"function calculates modulation index frequency contour time series. function spectro_analysis (see ) also calculates modulation index signals, single value across length signal. ##Quantitative measurements acoustic (dis)similarity","code":"df_inf <- inflections(X = df_df, pb = TRUE) str(df_inf)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"compare-methods-for-quantitative-analysis-of-signal-structure","dir":"Articles","previous_headings":"Extract acoustic parameters as time series","what":"Compare methods for quantitative analysis of signal structure","title":"<font size=","text":"section compare_methods taken directly Marcelo Araya-Salas’s bioacoustics blog slight modifications. Bioacoustic research relies quantifying structure acoustic signals comparing structure across behavioral/ecological contexts, groups species. However, measuring signal structure way fully accounts variation signals tricky task. differences apparent visual inspection spectrograms might picked analyses. Hence, choosing appropriate analytical approach critical step. warbleR function compare_methods attempts facilitate method selection. function produces graphs (image files working directory) spectrograms 4 signals allow visual inspection performance acoustic analysis methods comparing signals. signals randomly picked provided data frame (X argument), function compares 2 warbleRmethods time. methods available : * cross-correlation warbleR function cross_correlation * dynamic time warping dominant fundamental frequency contours freq_DTW * spectral parameters spectro_analysis last vignette, tailored selections Phaethornis longirostris songs originally downloaded xeno-canto, detected auto_detecand filtered signal--noise ratio (SNR). pick workflow filtered tailored selections, using data frame Phae.hisnrt. compare_methods produce 10 image files working directory (since specified n = 10) look like :   graphic, acoustic pairwise distance signals shown next arrows linking . font color distance value corresponds font color method generated , shown scatterplots (case black font represents XCORR distances). Distances standardized, 0 distance signal 1 farthest pairwise distance pool signals. Principal Component Analysis (princomp function) applied calculate distances using spectral parameters (SP). case, first 2 PC’s used. Classical Multidimensional Scaling (also known Principal Coordinates Analysis, cmdscale function) used methods. image file name contains methods compared row number selections. function internally uses modified version spectro function seewave package create spectrograms. Note spectrograms plotted frequency time scales. Also note graphs contain 2 scatterplots (1 per method) acoustic space signals input data frame X. position 4 signals spectrograms highlighted acoustic space scatterplot. graphics allow directly assess distances signals acoustic space accurately represent spectrographic similarity (e.g. similar acoustic structure looks spectrograms). can run compare_methods combination quantitative methods assessing acoustic (dis)similarity mentioned . Importantly, include SP method (spectral parameters measured function spectro_analysis), need large enough dataset, PCA summarizes spectral parameters needs units (rows) variables (columns).","code":"Phae.hisnrt <- read.csv(\"Phae_hisnrt.csv\", header = TRUE)  compare_methods(   X = Phae.hisnrt, flim = c(0, 10), bp = c(0, 10),   wl = 300, n = 10, methods = c(\"XCORR\", \"dfDTW\") )"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"measure-acoustic-parameters-with-spectro_analysis","dir":"Articles","previous_headings":"Extract acoustic parameters as time series","what":"Measure acoustic parameters with spectro_analysis","title":"<font size=","text":"can now perform acoustic measurements function spectro_analysis. function relies temporal coordinates selection tables measure 29 parameters across selections. spectro_analysis batch process faster calculating measurements manually, e.g. one selection recording time. spectro_analysis uses customizes several functions available seewave package. Use bandpass filter advantage , filter low high background noise performing measurements. Also note changing amplitude threshold change amplitude noises (including non-target signals) detected measurements. Remove parameters derived fundamental frequency (based track_freq_contour results).","code":"params <- spectro_analysis(Phae.hisnrt, bp = c(2, 10), threshold = 15) write.csv(params, \"acoustic_parameters.csv\", row.names = FALSE) params <- params[, grep(\"fun|peakf\", colnames(params), invert = TRUE)]"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"calculate-acoustic-parameters-by-song-type","dir":"Articles","previous_headings":"Extract acoustic parameters as time series","what":"Calculate acoustic parameters by song type","title":"<font size=","text":"addition calculating acoustic parameters per individual signals using spectro_analysis, can also calculate acoustic parameters song type (average, minimum maximum values per song type group).","code":"data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"selec.table\")) writeWave(Phae.long1, \"Phae.long1.wav\") writeWave(Phae.long2, \"Phae.long2.wav\") writeWave(Phae.long3, \"Phae.long3.wav\") writeWave(Phae.long4, \"Phae.long4.wav\")  # Add a 'song' column selec.table$song <- rep(1:4, each = 3)[1:11]  # Measure acoustic parameters sp <- spectro_analysis(selec.table, bp = c(1, 11), 300, fast = TRUE)  # Add song data sp <- merge(sp, selec.table, by = c(\"sound.files\", \"selec\"))  # Caculate song-level parameters for all numeric parameters sng <- song_analysis(X = sp, song_colm = \"song\", parallel = 1, pb = TRUE) str(sng)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"dynamic-time-warping-of-frequency-contours","dir":"Articles","previous_headings":"Extract acoustic parameters as time series","what":"Dynamic time warping of frequency contours","title":"<font size=","text":"section dynamic time warping methods taken directly Marcelo Araya-Salas’s bioacoustics blog slight modifications. dynamic time warping methods warbleR rely functions dtw package, available dominant fundamental frequencies. df_DTW ff_DTW calculate dominant fundamental frequency contours, respectively, signal compares using dynamic time warping. can interpolate measurements across frequency time series using length.argument. functions return matrix pairwise acoustic dissimilarity (e.g. acoustic “distance”) measurements can used analyses acoustic similarity, well image files frequency contours plotted spectrograms. require time series without dynamic time warping analysis either dominant fundamental frequency, check functions freq_tsand freq_ts. Note freq_range freq_range_detec functions, dynamic time warping functions tend work best tonal signals. Check resulting image files working directory. Check Marcelo’s blog great example evaluate whether dynamic time warping (dis)similarity measurements accurately represents acoustic differences.","code":"# Harmonic Phaethornis signals dm <- freq_DTW(Phae.hisnrt, length.out = 30, flim = c(2, 10), bp = c(2, 9), wl = 300, img = TRUE)  str(dm) # Tonal Tinamou signals Tin.sels <- read.csv(\"Tinamus-major-154191_sels.csv\", header = TRUE)  dm <- freq_DTW(Tin.sels, length.out = 30, flim = c(0, 2.5), bp = c(0.5, 2.5), wl = 512, img = TRUE) str(dm)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"spectrographic-cross-correlation","dir":"Articles","previous_headings":"Extract acoustic parameters as time series","what":"Spectrographic cross-correlation","title":"<font size=","text":"Cross-correlation calculates pairwise similarity multiple signals spectrogram cross-correlation. cross_correlation calculates correlation amplitude values step sliding one spectrogram . function modified version corMatch makeTemplate functions package monitoR. cross_correlation runs multiple signals returns list output, including: correlation statistic “sliding” step maximum (peak) correlation pairwise comparison cross_correlation requires margins half duration signal either side signal (e.g. start end coordinates). Signals close either start end recording may throw errors. Additionally, sound files modified bandpass filters, pairwise cross-correlations may work correlation matrix may contain NA values. cross_correlation now contains argument remove columns matrix contain NA values, reduce data matrix also allow matrix used subsequent analyses. output matrix peak correlation per pairwise comparison, recording-selection names matrix dimension names.","code":"xc <- cross_correlation(Phae.hisnrt, wl = 300, na.rm = FALSE) str(xc)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"analysis-of-geographic-variation-using-spectro_analysis-measurements","dir":"Articles","previous_headings":"","what":"Analysis of geographic variation using spectro_analysis measurements","title":"<font size=","text":"can evaluate whether observed variation song structure reflected meters just measured. conduct Principal Component Analysis scaled (z-transformed) meters look grouping songs (data points) scatter plot.  Songs grouped sound file. sound file represents single individual, suggests songs individual signatures. Let’s look song type level. First, need classify songs song type. can check spectrograms previously created .   Songs sound files 154070 154072 seem belong song type. Sound files 154129 154161 represent different song type. Finally, songs 2 sound files unique structure, one represents different song type. Sound file 154123 represented , vignette 1 decided using signals recording. can add information plot using symbols represent song types.  Songs song type similar (cluster together). PCA confirms visually obvious differences song structures well described meters measured warbleR. Likewise, also confirms can detect biologically relevant differences sound files undergone mp3 compression conversion back wav format (see also  [2]). Importantly, analysis publication run filtering steps acoustic parameters generated spectro_analysis, including removing collinear variables.","code":"# Run the PCA with only numeric variables of params pca <- prcomp(x = params[, sapply(params, is.numeric)], scale. = TRUE)  # Check loadings summary(pca) Importance of components:                          PC1    PC2    PC3     PC4     PC5     PC6    PC7     PC8     PC9    PC10    PC11    PC12    PC13   PC14    PC15    PC16 Standard deviation     3.799 2.6465 1.7684 1.01130 0.93681 0.88418 0.8449 0.72613 0.63069 0.52078 0.44692 0.43914 0.41945 0.3552 0.23923 0.18924 Proportion of Variance 0.481 0.2335 0.1042 0.03409 0.02925 0.02606 0.0238 0.01758 0.01326 0.00904 0.00666 0.00643 0.00586 0.0042 0.00191 0.00119 Cumulative Proportion  0.481 0.7145 0.8187 0.85280 0.88205 0.90811 0.9319 0.94948 0.96274 0.97178 0.97844 0.98487 0.99073 0.9949 0.99685 0.99804                           PC17    PC18    PC19    PC20    PC21    PC22      PC23 Standard deviation     0.15921 0.15130 0.07228 0.05806 0.03699 0.02449 2.204e-15 Proportion of Variance 0.00084 0.00076 0.00017 0.00011 0.00005 0.00002 0.000e+00 Cumulative Proportion  0.99888 0.99965 0.99982 0.99993 0.99998 1.00000 1.000e+00 # Extract PCA scores pcascor <- as.data.frame(pca[[5]])  # Plot the 2 first PCs plot(pcascor[, 1], pcascor[, 2],   col = as.numeric(as.factor(params$sound.files)), pch = 20,   cex = 1, xlab = \"PC1\", ylab = \"PC2\" )  # Add recordings/individuals labels x <- tapply(pcascor[, 1], params$sound.files, mean) y <- tapply(pcascor[, 2], params$sound.files, mean)  labs <- gsub(\".wav\", \"\", unique(sapply(as.character(params$sound.files), function(x) {   strsplit(x, split = \"-\", fixed = TRUE)[[1]][3] }, USE.NAMES = FALSE)))  text(x, y, labs, cex = 0.75) # Create a song type variable  # First, extract recording ID songtype <- gsub(\".wav\", \"\", sapply(as.character(params$sound.files), function(x) {   strsplit(x, split = \"-\", fixed = TRUE)[[1]][3] }, USE.NAMES = FALSE))  # Now change IDs for letters representing song types songtype <- gsub(\"154070|154072\", \"A\", songtype) songtype <- gsub(\"154129|154161\", \"B\", songtype) songtype <- gsub(\"154138\", \"C\", songtype)  # Add song type as a variable representing symbol type plot(pcascor[, 1], pcascor[, 2],   col = as.numeric(as.factor(params$sound.files)),   pch = as.numeric(as.factor(songtype)),   cex = 1, xlab = \"PC1\", ylab = \"PC2\" )  # Add song type labels x <- tapply(pcascor[, 1], songtype, mean) y <- tapply(pcascor[, 2], songtype, mean)  text(x, y, unique(songtype), cex = 1)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"coordinated-singing-analysis","dir":"Articles","previous_headings":"","what":"Coordinated singing analysis","title":"<font size=","text":"warbleR contains functions visualize test whether singing bouts individuals can considered coordinated singing. function plot_coordination plots signals polygons better visualize overlap signals. function test_coordination uses Monte Carlo randomization test determine whether probability finding overlapping songs singing event less expect chance. test_coordination can run simultaneously many singing events, contained single data frame (see test_coordination documentation information). sim_coor_sing dataset contains three types singing bouts: can test overlapping alternating coordinated singing using less..chance argument test_coordination. test alternating coordinated singing, since less..chance set TRUE.","code":"data(sim_coor_sing) str(sim_coor_sing) # save plots in a list g <- plot_coordination(sim_coor_sing, it = \"jpeg\", img = FALSE, res = 300)  # print list of plots to graphics device g cs <- test_coordination(sim_coor_sing, iterations = 1000, less.than.chance = TRUE, cutoff = 10) str(cs)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"simulating-songs","dir":"Articles","previous_headings":"","what":"Simulating songs","title":"<font size=","text":"can simulate songs using warbleR. Depending question, can simulate songs different numbers subunits, subunit durations, numbers harmonics, amplitudes, gaps subunits, amplitude fading subunits, among options. Songs simulated Brownian motion frequency drift.   vignette concludes warbleR vignette series. running code third vignette, now idea : measure frequency range signals extract spectral entropy frequency contours time series manually fix frequency contours (appropriate) compare choose methods acoustic (dis)similarity analysis spectro_analysis- 29 parameters (across signals song types) freq_DTW - dynamic time warping frequency contours cross_correlation- spectrographic cross-correlation carry steps analysis geographic variation vocalizations perform coordinated singing analysis simulate songs research questions vignettes presented examples warbleR functions can used streamlined workflow flexible rigorous bioacoustics analyses. output warbleR functions can used packages statistical analyses, machine learning.","code":"# simulate a song with 3 tonal elements ss <- sim_songs(n = 3, harms = 1)  # plot the simulated song # seewave::spectro(ss)  # simulate a song with 3 harmonic elements of differing amplitude ss <- sim_songs(n = 3, harms = 3)  # plot the simulated song seewave::spectro(ss)"},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"<font size=","text":"Please cite warbleR use package: Araya-Salas, M. Smith-Vidaurre, G. (2017), warbleR: R package streamline analysis animal acoustic signals. Methods Ecol Evol. 8, 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/articles/warbleR_workflow_03.html","id":"reporting-bugs","dir":"Articles","previous_headings":"","what":"Reporting bugs","title":"<font size=","text":"Please report bugs .   References Araya-Salas, M. G. Smith-Vidaurre. 2016. warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution. doi: 10.1111/2041-210X.12624  ","code":""},{"path":"https://marce10.github.io/warbleR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marcelo Araya-Salas. Author, maintainer. Grace Smith-Vidaurre. Author.","code":""},{"path":"https://marce10.github.io/warbleR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Araya-Salas, M. Smith-Vidaurre, G. (2017), warbleR: r package streamline analysis animal acoustic signals. Methods Ecol Evol. 8, 184-191.   NOTE: please also cite 'tuneR' 'seewave' packages use spectrogram-creating acoustic-measuring function","code":"@Misc{,   title = {warbleR: an r package to streamline analysis of animal acoustic signals},   author = {M. Araya-Salas and G. Smith-Vidaurre},   year = {2017},   journal = {Methods in Ecology and Evolution},   url = {https://dx.doi.org/10.1111/2041-210X.12624}, }"},{"path":"https://marce10.github.io/warbleR/index.html","id":"warbler-streamline-bioacoustic-analysis","dir":"","previous_headings":"","what":"Streamline Bioacoustic Analysis","title":"Streamline Bioacoustic Analysis","text":"warbleR intended facilitate analysis structure animal acoustic signals R. Users can collect open-access avian recordings enter data workflow facilitates spectrographic visualization measurement acoustic parameters. warbleR makes use fundamental sound analysis tools seewave package, offers new tools acoustic structure analysis. tools available batch analysis acoustic signals. main features package : Diverse tools measuring acoustic structure use loops apply tasks acoustic signals referenced selection table production images working directory spectrograms allow users organize data verify acoustic analyses package offers functions : Explore download Xeno‐Canto recordings Explore, organize manipulate multiple sound files Detect signals automatically (frequency time) (check R package ohun thorough friendly implementation) Create spectrograms complete recordings individual signals Run different measures acoustic signal structure Evaluate performance measurement methods Catalog signals Characterize different structural levels acoustic signals Statistical analysis duet coordination Consolidate databases annotation tables functions allow parallelization tasks, distributes tasks among several processors improve computational efficiency. Tools evaluate performance analysis step also available.","code":""},{"path":"https://marce10.github.io/warbleR/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing","title":"Streamline Bioacoustic Analysis","text":"Install/load package CRAN follows: install latest developmental version github need R package remotes:","code":"install.packages(\"warbleR\")  # load package library(warbleR) remotes::install_github(\"maRce10/warbleR\")  # load package library(warbleR)"},{"path":"https://marce10.github.io/warbleR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Streamline Bioacoustic Analysis","text":"Take look package vignettes detailed examples organize functions acoustic analysis workflow. full description package (although bit outdated) can found journal article.","code":""},{"path":"https://marce10.github.io/warbleR/index.html","id":"other-packages","dir":"","previous_headings":"","what":"Other packages","title":"Streamline Bioacoustic Analysis","text":"packages seewave tuneR provide huge variety functions acoustic analysis manipulation. moslty works wave objects already imported R environment. package baRulho focuses quantifying habitat-induced degradatio acoustic signals data inputs ouputs similar warbleR. package Rraven facilitates exchange data R Raven sound analysis software (Cornell Lab Ornithology) can helpful incorporating Raven annotating tool acoustic analysis workflow R. package ohun works automated detection sound events, providing functions diagnose optimize detection routines. dynaSpec allows create dynamic spectrograms (.e. spectrogram videos).","code":""},{"path":"https://marce10.github.io/warbleR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Streamline Bioacoustic Analysis","text":"Please cite warbleR follows: Araya-Salas, M. Smith-Vidaurre, G. (2017), warbleR: r package streamline analysis animal acoustic signals. Methods Ecol Evol. 8, 184-191. link NOTE: please also cite tuneR seewave packages use spectrogram-creating acoustic-measuring functions","code":""},{"path":"https://marce10.github.io/warbleR/reference/auto_detec.html","id":null,"dir":"Reference","previous_headings":"","what":"auto_detec automatically detects the start and end of vocalizations in sound files based\non amplitude, duration, and frequency range attributes. — auto_detec","title":"auto_detec automatically detects the start and end of vocalizations in sound files based\non amplitude, duration, and frequency range attributes. — auto_detec","text":"auto_detec automatically detects start end vocalizations sound files based amplitude, duration, frequency range attributes.","code":""},{"path":"https://marce10.github.io/warbleR/reference/auto_detec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"auto_detec automatically detects the start and end of vocalizations in sound files based\non amplitude, duration, and frequency range attributes. — auto_detec","text":"","code":"auto_detec(X = NULL, wl = 512, threshold = 15, parallel = 1, power = 1,    output = 'data.frame', thinning = 1, path = NULL, pb = TRUE, ssmooth = 0,    bp = NULL, flist = NULL, hold.time = 0, mindur = NULL, maxdur = NULL, envt = NULL,    msmooth = NULL, osci = NULL, xl = NULL, picsize = NULL, res = NULL, flim = NULL,    ls = NULL, sxrow = NULL, rows = NULL,  redo = NULL, img = NULL, it = NULL,    set = NULL, smadj = NULL, pal = NULL, fast.spec = NULL)"},{"path":"https://marce10.github.io/warbleR/reference/auto_detec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"auto_detec automatically detects the start and end of vocalizations in sound files based\non amplitude, duration, and frequency range attributes. — auto_detec","text":"X 'selection_table' object data frame columns sound file name (sound.files), selection number (selec), start end time signal (start end). provided detection conducted within selections 'X'. Alternatively, 'autodetec.output' object can input. objects also generated function output = \"list\". detection runs much faster envelopes already calculated. wl numeric vector length 1 specifying window used internally ffilter bandpass filtering (applied 'bp' supplied). Default 512. threshold numeric vector length 1 specifying amplitude threshold detecting signals (%). parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). power numeric vector length 1 indicating power factor applied amplitude envelope. Increasing power reduce low amplitude modulations increase high amplitude modulations, order reduce background noise. Default 1 (change). output Character string indicating output 'data.frame' detections (default) list (class 'autodetec.output') containing 1) detections 2) amplitude envelopes (time vs amplitude) sound file. list can input full_spectrograms explore detections associated amplitude envelopes. thinning Numeric vector length 1 range 0~1 indicating proportional reduction number samples used represent amplitude envelopes (.e. thinning envelopes). Usually amplitude envelopes many samples needed accurately represent amplitude variation time, affects size output (usually large R objects / files). Default  1 (thinning). Higher sampling rates can afford higher size reduction (e.g. lower thinning values). Reduction conducted interpolation using approx. Note thinning may decrease time precision, higher thinning less precise time detection. path Character string containing directory path sound files located. NULL (default) current working directory used. pb Logical argument control progress bar. Default TRUE. ssmooth numeric vector length 1 smooth amplitude envelope sum smooth function. Default 0. Note smoothing applied thinning (see 'thinning' argument). bp Numeric vector length 2 giving lower upper limits frequency bandpass filter (kHz). Default NULL. flist character vector factor indicating subset files analyzed. Ignored X provided. hold.time Numeric vector length 1. Specifies time range selections merged (.e. 2 selections separated less specified hold.time merged single selection). Default  0. mindur Numeric vector length 1 giving shortest duration (seconds) signals detected. removes signals threshold. maxdur Numeric vector length 1 giving longest duration (seconds) signals detected. removes signals threshold. envt DEPRECATED. msmooth DEPRECATED. osci DEPRECATED. xl DEPRECATED picsize DEPRECATED res DEPRECATED flim DEPRECATED ls DEPRECATED sxrow DEPRECATED rows DEPRECATED redo DEPRECATED. img DEPRECATED. DEPRECATED. set DEPRECATED. smadj DEPRECATED. pal DEPRECATED. fast.spec DEPRECATED.","code":""},{"path":"https://marce10.github.io/warbleR/reference/auto_detec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"auto_detec automatically detects the start and end of vocalizations in sound files based\non amplitude, duration, and frequency range attributes. — auto_detec","text":"data frame containing start end signal   sound file selection number. 'output = \"list\"' list including 1) detection data frame, 2) amplitude envelopes 3) parameters return. additional column 'org.selec' added 'X' provided (detection can traced back selections 'X').","code":""},{"path":"https://marce10.github.io/warbleR/reference/auto_detec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"auto_detec automatically detects the start and end of vocalizations in sound files based\non amplitude, duration, and frequency range attributes. — auto_detec","text":"function determines start end signals sound file selections listed   input data frame ('X'). Alternatively, data frame provided, function detects signals across   entire sound file. can also create long spectrograms highlighting start detected   signals sound files working directory (img = TRUE). Sound files located    working directory path sound files provided using 'path' argument. input    data frame following columns: c(\"sound.files\",\"selec\",\"start\",\"end\"). function uses modified version timer function seewave package detect signals. Note warbleR function signal detection deprecated future warbleR versions. Look ohun package automatic signal detection functions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/auto_detec.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"auto_detec automatically detects the start and end of vocalizations in sound files based\non amplitude, duration, and frequency range attributes. — auto_detec","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/auto_detec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"auto_detec automatically detects the start and end of vocalizations in sound files based\non amplitude, duration, and frequency range attributes. — auto_detec","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr). Implements modified version timer function seewave.","code":""},{"path":"https://marce10.github.io/warbleR/reference/auto_detec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"auto_detec automatically detects the start and end of vocalizations in sound files based\non amplitude, duration, and frequency range attributes. — auto_detec","text":"","code":"{   # Save to temporary working directory   data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\"))   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"))   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))   writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))   writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))    ad <- auto_detec(     threshold = 5, ssmooth = 300,     bp = c(2, 9), wl = 300, path = tempdir()   ) } #> Warning: This function will be deprecated in future warbleR versions, please look at the ohun package for automatic signal detection functions (https://marce10.github.io/ohun/index.html) #> Detecting signals in sound files:"},{"path":"https://marce10.github.io/warbleR/reference/autodetec.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for auto_detec — autodetec","title":"alternative name for auto_detec — autodetec","text":"alternative name auto_detec","code":""},{"path":"https://marce10.github.io/warbleR/reference/autodetec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for auto_detec — autodetec","text":"","code":"autodetec(   X = NULL,   wl = 512,   threshold = 15,   parallel = 1,   power = 1,   output = \"data.frame\",   thinning = 1,   path = NULL,   pb = TRUE,   ssmooth = 0,   bp = NULL,   flist = NULL,   hold.time = 0,   mindur = NULL,   maxdur = NULL,   envt = NULL,   msmooth = NULL,   osci = NULL,   xl = NULL,   picsize = NULL,   res = NULL,   flim = NULL,   ls = NULL,   sxrow = NULL,   rows = NULL,   redo = NULL,   img = NULL,   it = NULL,   set = NULL,   smadj = NULL,   pal = NULL,   fast.spec = NULL )"},{"path":"https://marce10.github.io/warbleR/reference/autodetec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for auto_detec — autodetec","text":"see auto_detec documentation. autodetec deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/by_element_est.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a by-song extended selection table to by-element — by_element_est","title":"Convert a by-song extended selection table to by-element — by_element_est","text":"by_element_est converts -song extended selection table -element.","code":""},{"path":"https://marce10.github.io/warbleR/reference/by_element_est.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a by-song extended selection table to by-element — by_element_est","text":"","code":"by_element_est(X, mar = 0.1, pb = FALSE, parallel = 1)"},{"path":"https://marce10.github.io/warbleR/reference/by_element_est.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a by-song extended selection table to by-element — by_element_est","text":"X object class 'extended_selection_table' (see selection_table). mar Numeric vector length 1 specifying margins (seconds) adjacent start end points selections creating ''element' extended selection table. Default 0.1. pb Logical argument control progress bar. Default FALSE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing).","code":""},{"path":"https://marce10.github.io/warbleR/reference/by_element_est.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a by-song extended selection table to by-element — by_element_est","text":"'element' extended selection table (see selection_table).","code":""},{"path":"https://marce10.github.io/warbleR/reference/by_element_est.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a by-song extended selection table to by-element — by_element_est","text":"function converts extended selection tables 'song' format (several selection per wave object) 'element' format (one wave object per selection).","code":""},{"path":"https://marce10.github.io/warbleR/reference/by_element_est.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert a by-song extended selection table to by-element — by_element_est","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/by_element_est.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a by-song extended selection table to by-element — by_element_est","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr) #last modification nov-9-2022 (MAS)","code":""},{"path":"https://marce10.github.io/warbleR/reference/by_element_est.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a by-song extended selection table to by-element — by_element_est","text":"","code":"if (FALSE) { data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))  # create extended selection table by_song_est <- selection_table(lbh_selec_table,   path = tempdir(),   extended = TRUE, by.song = \"song\", confirm.extended = FALSE )  # conver o by element by_element_est <- by_element_est(by_song_est, mar = 0.05) }"},{"path":"https://marce10.github.io/warbleR/reference/catalog.html","id":null,"dir":"Reference","previous_headings":"","what":"Create catalogs of vocal signals — catalog","title":"Create catalogs of vocal signals — catalog","text":"catalog produces spectrograms selections (signals) split multiple rows columns.","code":""},{"path":"https://marce10.github.io/warbleR/reference/catalog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create catalogs of vocal signals — catalog","text":"","code":"catalog(X, flim = NULL, nrow = 4, ncol = 3, same.time.scale = TRUE,  collevels = seq(-40, 0, 1), ovlp = 50, parallel = 1, mar = 0.05, prop.mar = NULL,  lab.mar = 1, wl = 512, wn = \"hanning\", gr = FALSE, pal = reverse.gray.colors.2,  it = \"jpeg\", path = NULL, pb = TRUE, fast.spec = FALSE, res = 100,  orientation = \"v\", labels = c(\"sound.files\", \"selec\"), height = NULL,  width = NULL, tags = NULL, tag.pal = list(temp.colors, heat.colors, topo.colors), legend = 3, cex = 1, leg.wd = 1, img.suffix = NULL, img.prefix = NULL,  tag.widths = c(1, 1), hatching = 0, breaks = c(5, 5), group.tag = NULL,  spec.mar = 0, spec.bg = \"white\", max.group.cols = NULL, sub.legend = FALSE,  rm.axes = FALSE, title = NULL, by.row = TRUE, box = TRUE, highlight = FALSE, alpha = 0.5)"},{"path":"https://marce10.github.io/warbleR/reference/catalog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create catalogs of vocal signals — catalog","text":"X 'selection_table', 'extended_selection_table' data frame columns sound file name (sound.files), selection number (selec),  start end time signal (start end). Default NULL. flim numeric vector length 2 indicating highest lowest  frequency limits (kHz) spectrogram,  spectro. Default NULL. nrow numeric vector length 1. Specifies number rows. Default 4. ncol numeric vector length 1.  Specifies number columns. Default 3. .time.scale Logical. Controls spectrograms time scale  (.e. duration). collevels numeric vector length 3. Specifies levels partition  amplitude range spectrogram (dB). levels higher resolution spectrogram. Default seq(-40, 0, 1). seq(-115, 0, 1) produces spectrograms similar acoustic analysis software packages. ovlp Numeric vector length 1 specifying % overlap two  consecutive windows, spectro. Default 50. High values ovlp  slow function produce accurate selection limits (X provided). parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). mar Numeric vector length 1. Specifies margins (seconds) adjacent start end points selections, delineating spectrogram limits. Default 0.05. prop.mar Numeric vector length 1. Specifies margins adjacent  start end points selections proportion duration signal. provided 'mar' argument ignored. Default NULL. Useful high  variation signal duration. Ignored .time.scale = FALSE. Must > 0 <= 1. lab.mar Numeric vector length 1. Specifies space allocated labels tags (upper margin). Default 1. wl numeric vector length 1 specifying window length spectrogram, default  512. wn Character vector length 1 specifying window function name. See ftwindow name options. Default \"hanning\". gr Logical argument add grid spectrogram. Default FALSE. pal Color palette function spectrogram. Default reverse.gray.colors.2. See  spectro palettes. Palettes gray.2 may work better fast.spec = TRUE. character vector length 1 giving image type used. Currently \"tiff\" \"jpeg\" admitted. Default \"jpeg\". path Character string containing directory path sound files located.  NULL (default) current working directory used. pb Logical argument control progress bar. Default TRUE. fast.spec Logical. TRUE image function used internally create spectrograms, substantially  increases performance (much faster), although options become unavailable, collevels, sc (amplitude scale). option indicated signals high background noise levels. Palette colors gray.1, gray.2,  gray.3, topo.1 rainbow.1 (imported package monitoR) seem work better 'fast.spec' spectrograms. Palette colors gray.1, gray.2,  gray.3 offer  decreasing darkness levels. res Numeric argument length 1. Controls image resolution. Default 100 (faster) although 300 recommended publication/presentation quality. Note high resolution  produce significantly bigger image files. problematic creating pdf files  using catalog. orientation String. Indicates whether letter page size image produced vertical ('v' option) horizontal orientation ('h' option). Note width height can also specified. labels String vector. Provides column names used labels corresponding spectrograms. height Numeric. Single value (inches) indicating height output image files. Default 11  vertical orientation. width Numeric. Single value (inches) indicating width output image files.  Default 8.5 vertical orientation. tags String vector. Provides column names used color tagging legend . Tags can also numeric. Continuous variables break 10 color classes. tag.pal List color palette function tags. length 1, 2 3.  Default list(temp.colors, heat.colors, topo.colors). legend numeric vector length 1 controlling legend color tags added. Ignored tags provided. Four values allowed: 0: label 1: Label first color tag 2: Label second color tag 3: Labels color tags Default 3. Currently legend can set group tags. Use labels instead. cex numeric vector length 1 giving amount text  (including labels axis) magnified. Default 1. leg.wd Numeric. Controls width legend column. Default 1. img.suffix character vector length 1 suffix (label) add end names  image files. Default NULL (suffix). Useful label catalogs different individuals,  species sites. img.prefix character vector length 1 prefix (label) add beginning names  image files. Default NULL (prefix). Useful label catalogs different individuals,  species sites ensure grouped together sorted file name. tag.widths numeric vector length 2 control relative width color tags (2 tags provided). hatching numeric vector length 1 controlling cross-hatching used color tags. Several cross-hatching  patterns used make tags similar colors distinguishable. Four values allowed: 0: cross-hatching 1: Cross-hatching first color tag 2: Cross-hatching second color tag 3: Cross-hatching color tags breaks Numeric vector length 1 2 controlling number intervals  numeric tag divided. numbers control first second tags respectively.  Ignored tags numeric. Default c(5, 5). group.tag Character vector length 1 indicating column name used color empty plot areas around spectrograms. provided selections belong tag level clumped together catalog ('X' data frame sorted column). tags included legend better use label field identify different levels. spec.mar Numeric vector length 1 add space top, left right sides spectrogram. Useful better display grouping selections 'group.tag'  provided. Internally applied setting 'mar' using par. spec.bg Character vector length 1 control background color spectrogram. Default 'white'. Ignored group.tag = NULL. max.group.cols Numeric vector length 1 indicating number different colors  used group tags (see 'group.tag' argument). provided (number  smaller number levels 'group.tag' column) colors recycled,  although ensuring adjacent groups share color. Useful  'group.tag' many levels colors assigned become similar. Default NULL. sub.legend Logical. TRUE levels present page shown legend. Default FALSE. rm.axes Logical. TRUE frequency time axes excluded. Default FALSE. title Character vector length 1 set title catalogs. .row Logical. TRUE (default) catalogs filled rows. box Logical. TRUE (default) box drawn around spectrograms  corresponding labels tags. highlight Logical. TRUE transparent white layer plotted spectrogram areas outside selection. level transparency controlled argument 'alpha'. Default FAlSE. alpha Numeric vector length 1 controlling level transparency highlighting selections (.e. highlight = TRUE, see highlight argument. Default 0.5.","code":""},{"path":"https://marce10.github.io/warbleR/reference/catalog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create catalogs of vocal signals — catalog","text":"Image files spectrogram catalogs working directory. Multiple pages can returned, depending length sound file.","code":""},{"path":"https://marce10.github.io/warbleR/reference/catalog.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create catalogs of vocal signals — catalog","text":"functions aims simplify visual exploration multiple vocalizations. function plots  matrix spectrograms selection table. Spectrograms can labeled color tagged facilitate   exploring variation related parameter interest (e.g. location, song type). legend added    help match colors tag levels (legend > 0). Different color palettes can   used tag. Numeric tags split intervals (number intervals can    controlled break argument). width height can also adjusted fit column /rows.   files can put together single pdf file catalog2pdf.   recommend using low resolution (~60-100) smaller dimensions (width & height < 10)   aiming generate pdfs (otherwise pdfs pretty big).","code":""},{"path":"https://marce10.github.io/warbleR/reference/catalog.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create catalogs of vocal signals — catalog","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/catalog.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create catalogs of vocal signals — catalog","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/catalog2pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine catalog images into pdfs — catalog2pdf","title":"Combine catalog images into pdfs — catalog2pdf","text":"catalog2pdf combines catalog jpeg images pdfs","code":""},{"path":"https://marce10.github.io/warbleR/reference/catalog2pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine catalog images into pdfs — catalog2pdf","text":"","code":"catalog2pdf(keep.img = TRUE, overwrite = FALSE, parallel = 1, path = NULL, pb = TRUE, by.img.suffix = FALSE, ...)"},{"path":"https://marce10.github.io/warbleR/reference/catalog2pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine catalog images into pdfs — catalog2pdf","text":"keep.img Logical argument. Indicates whether jpeg files kept (default) remove. overwrite Logical argument. TRUE jpeg pdf produced code rerun. FALSE ones missing produced. Default FALSE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). path Character string containing directory path catalog image files located. NULL (default) current working directory used. pb Logical argument control progress bar. Default TRUE. .img.suffix Logical. TRUE catalogs image suffix put together single pdf (one pdf per image suffix catalog images). Default FALSE (.e. suffix). ... Additional arguments passed internal pdf creating function pdf customizing output.","code":""},{"path":"https://marce10.github.io/warbleR/reference/catalog2pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine catalog images into pdfs — catalog2pdf","text":"Image files pdf format spectrogram catalogs working directory.","code":""},{"path":"https://marce10.github.io/warbleR/reference/catalog2pdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine catalog images into pdfs — catalog2pdf","text":"function combines catalog images .jpeg format catalog function pdfs. Images must saved .jpeg format. Note using lower resolution smaller dimension (width height) creating catalogs substantially decrease size pdf files (pretty big).","code":""},{"path":"https://marce10.github.io/warbleR/reference/catalog2pdf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Combine catalog images into pdfs — catalog2pdf","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/catalog2pdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine catalog images into pdfs — catalog2pdf","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/catalog2pdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine catalog images into pdfs — catalog2pdf","text":"","code":"if (FALSE) { # save sound file examples data(list = c(\"Phae.long1\", \"Phae.long2\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))  catalog(X = lbh_selec_table, nrow = 2, ncol = 4)  # now create single pdf removing jpeg catalog2pdf(keep.img = FALSE, path = tempdir())  # check this floder tempdir() }"},{"path":"https://marce10.github.io/warbleR/reference/check_sels.html","id":null,"dir":"Reference","previous_headings":"","what":"Check selection data frames — check_sels","title":"Check selection data frames — check_sels","text":"check_sels checks whether selections can read subsequent functions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/check_sels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check selection data frames — check_sels","text":"","code":"check_sels(X, parallel = 1, path = NULL, check.header = FALSE, pb = TRUE, wav.size = FALSE, verbose = TRUE, fix.selec = FALSE)"},{"path":"https://marce10.github.io/warbleR/reference/check_sels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check selection data frames — check_sels","text":"X 'selection_table' object data frame following columns: 1) \"sound.files\": name .wav files, 2) \"sel\": number selections, 3) \"start\": start time selections, 4) \"end\": end time selections. Alternatively, 'selection_table' class object can input double check selections. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). path Character string containing directory path sound files located. NULL (default) current working directory used. check.header Logical. Controls whether sound file headers correspond actual file properties (.e. corrupted). significantly affect performance function (much slower) particularly long sound files. pb Logical argument control progress bar. Default TRUE. wav.size Logical argument control size wave object selection imported R (using readWave calculated added column. Size return MB. Default FALSE. verbose Logical control whether summary messages printed console. Defaut TRUE. fix.selec Logical control labels 'selec' column fixed. column duplicated within sound file. happens fix.selec = TRUE duplicated labels changed. Default FALSE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/check_sels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check selection data frames — check_sels","text":"data frame including columns input data frame (X) following additional columns: check.res: diagnose selection duration: duration selection seconds min.n.samples number samples selection. Note number samples available selection limits minimum window length (wl argument functions) can used batch analyses. sample.rate: sampling rate kHz channels: number channels bits: bit depth sound.file.samples: number samples sound file","code":""},{"path":"https://marce10.github.io/warbleR/reference/check_sels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check selection data frames — check_sels","text":"function checks information selection data frame selection table (.e. data frame annotations sound files) avoid problems warbleR analysis downstream. specifically checks : 'X' object class 'data.frame' 'selection_table' (see selection_table) contains    required columns used warbleR function ('sound.files', 'selec', 'start', 'end', returns error) 'sound.files' 'X' correspond sound files working directory provided 'path'     (file found returns error, files found returns error info ouput data frame) time ('start', 'end') frequency ('bottom.freq', 'top.freq', provided) limit parameters numeric    contain NAs (returns error) duplicated selection labels ('selec') within sound file (returns error) sound files can read (error info ouput data frame) start end time selections found within duration sound files (error info ouput data frame) sound files can read (error info ouput data frame) sound files header corrupted (header = TRUE, error info ouput data frame) selection time position (start end) exceeds sound file length (error info ouput data frame) 'top.freq' lower half sample rate (nyquist frequency, error info ouput data frame) negative values found time frequency limit parameters (error info ouput data frame) 'start' higher 'end' 'bottom.freq' higher 'top.freq' (error info ouput data frame) 'channel' value higher number channels sound files (error info ouput data frame) function returns data frame includes information 'X' plus additional columns format sound files (see 'Value') well result checks ('check.res' column, value 'OK' everything fine). Sound files working directory (directory provided 'path'). Corrupt files can fixed using fix_wavs.","code":""},{"path":"https://marce10.github.io/warbleR/reference/check_sels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check selection data frames — check_sels","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/check_sels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check selection data frames — check_sels","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/check_sels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check selection data frames — check_sels","text":"","code":"{ # save wav file examples data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))  check_sels(X = lbh_selec_table, path = tempdir()) } #> all selections are OK  #>"},{"path":"https://marce10.github.io/warbleR/reference/check_sound_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Check sound files — check_sound_files","title":"Check sound files — check_sound_files","text":"check_sound_files checks whether sound files can read subsequent functions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/check_sound_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check sound files — check_sound_files","text":"","code":"check_sound_files(X = NULL, path = NULL)"},{"path":"https://marce10.github.io/warbleR/reference/check_sound_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check sound files — check_sound_files","text":"X Optional. 'selection_table' object data frame following columns: 1) \"sound.files\": name sound files, 2) \"sel\": number selections, 3) \"start\": start time selections, 4) \"end\": end time selections. provided function also returns smallest number samples listed selections, limits minimum window length (wl argument functions) can used batch analyses. useful avoiding errors downstream functions (e.g. spectro_analysis). path Character string containing directory path sound files located. NULL (default) current working directory used.","code":""},{"path":"https://marce10.github.io/warbleR/reference/check_sound_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check sound files — check_sound_files","text":"sound files ok, returns message \"files can read\".   Otherwise returns names corrupted sound files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/check_sound_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check sound files — check_sound_files","text":"function checks sound files working directory can read. Users must set working directory wish check sound files beforehand. X provided also returns smallest number samples selections listed X (files can read). Note corrupt files can fixed using fix_wavs) ('sox' must installed able run function). function intended \"quick dirty\" check sound files selections data  frame. thorough analysis see check_sels.","code":""},{"path":"https://marce10.github.io/warbleR/reference/check_sound_files.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check sound files — check_sound_files","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/check_sound_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check sound files — check_sound_files","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/check_sound_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check sound files — check_sound_files","text":"","code":"{ # save wav file examples data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))  # without selection data frame check_sound_files(path = tempdir())  # with selection data frame check_sound_files(X = lbh_selec_table, path = tempdir()) } #> All files can be read #>  #> All files can be read #>  #> smallest number of samples: 2838 (sound file:Phae.long2.wav; selection label: 2) #>"},{"path":"https://marce10.github.io/warbleR/reference/check_wavs.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for check_sound_files — check_wavs","title":"alternative name for check_sound_files — check_wavs","text":"alternative name check_sound_files","code":""},{"path":"https://marce10.github.io/warbleR/reference/check_wavs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for check_sound_files — check_wavs","text":"","code":"check_wavs(X = NULL, path = NULL)"},{"path":"https://marce10.github.io/warbleR/reference/check_wavs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for check_sound_files — check_wavs","text":"see check_sound_files documentation. check_wavs deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/checksels.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for check_sels — checksels","title":"alternative name for check_sels — checksels","text":"alternative name check_sels","code":""},{"path":"https://marce10.github.io/warbleR/reference/checksels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for check_sels — checksels","text":"","code":"checksels(   X = NULL,   parallel = 1,   path = NULL,   check.header = FALSE,   pb = TRUE,   wav.size = FALSE,   verbose = TRUE,   fix.selec = FALSE )"},{"path":"https://marce10.github.io/warbleR/reference/checksels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for check_sels — checksels","text":"see check_sels documentation. checksels deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/color.spectro.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for color_spectro — color.spectro","title":"alternative name for color_spectro — color.spectro","text":"alternative name color_spectro","code":""},{"path":"https://marce10.github.io/warbleR/reference/color.spectro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for color_spectro — color.spectro","text":"","code":"color.spectro(   wave,   wl = 512,   wn = \"hanning\",   ovlp = 70,   dB = \"max0\",   collevels = NULL,   selec.col = \"red2\",   col.clm = NULL,   base.col = \"black\",   bg.col = \"white\",   strength = 1,   cexlab = 1,   cexaxis = 1,   tlab = \"Time (s)\",   flab = \"Frequency (kHz)\",   title = NULL,   axisX = TRUE,   axisY = TRUE,   flim = NULL,   rm.zero = FALSE,   X = NULL,   fast.spec = FALSE,   t.mar = NULL,   f.mar = NULL,   interactive = NULL,   add = FALSE )"},{"path":"https://marce10.github.io/warbleR/reference/color.spectro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for color_spectro — color.spectro","text":"see color_spectro documentation. color.spectro deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/color_spectro.html","id":null,"dir":"Reference","previous_headings":"","what":"Highlight spectrogram regions — color_spectro","title":"Highlight spectrogram regions — color_spectro","text":"color_spectro highlights spectrogram regions specified users","code":""},{"path":"https://marce10.github.io/warbleR/reference/color_spectro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Highlight spectrogram regions — color_spectro","text":"","code":"color_spectro(wave, wl = 512, wn = \"hanning\", ovlp = 70, dB = \"max0\", collevels = NULL, selec.col = \"red2\", col.clm = NULL, base.col = \"black\", bg.col = \"white\", strength = 1, cexlab = 1, cexaxis = 1, tlab = \"Time (s)\", flab = \"Frequency (kHz)\", title = NULL, axisX = TRUE, axisY = TRUE, flim = NULL, rm.zero = FALSE, X = NULL, fast.spec = FALSE, t.mar = NULL, f.mar = NULL, interactive = NULL, add = FALSE)"},{"path":"https://marce10.github.io/warbleR/reference/color_spectro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Highlight spectrogram regions — color_spectro","text":"wave 'wave' object produced  readWave similar functions. wl numeric vector length 1 specifying window length spectrogram. Default 512. wn Character vector length 1 specifying window name. Default \"hanning\". See function ftwindow options. ovlp Numeric vector length 1 specifying percent overlap two consecutive windows, spectro. Default 70. dB Character vector length 1 controlling amplitude weights spectro. Default 'max0'. collevels Numeric. Levels used partition amplitude range spectro. Default NULL. selec.col Character vector length 1 specifying color used highlight selection. See 'col.clm' specifying unique colors selection. Default 'red2'. Ignored 'col.cm' 'X' provided. col.clm Character vector length 1 indicating name column 'X' contains color names selection. Ignored X == NULL interactive != NULL. Default NULL. base.col Character vector length 1 specifying color background spectrogram. Default 'black'. bg.col Character vector length 1 specifying background color base highlighted spectrograms. Default 'white'. strength Numeric vector length 1 controlling strength highlighting color (actually many times repeated internal color palette). Must positive integer. Default 1. cexlab Numeric vector length 1 specifying relative size axis labels. See spectro. Default 1. cexaxis Numeric vector length 1 specifying relative size axis. See spectro. Default 1. tlab Character vector length 1 specifying label time axis. flab Character vector length 1 specifying label frequency axis. title Logical argument add title individual spectrograms. Default TRUE. axisX Logical control whether time axis plotted. Default TRUE. axisY Logical control whether frequency axis plotted. Default TRUE. flim numeric vector length 2 frequency limit (kHz) spectrogram, spectro. Default NULL. rm.zero Logical indicated 0 start time axis removed. Default FALSE. X Optional. Data frame containing columns start end time signals ('start' 'end') low high frequency ('bottom.freq' 'top.freq'). fast.spec Logical. TRUE image function used internally create spectrograms, substantially increases performance (much faster), although options become unavailable, collevels, sc (amplitude scale). option indicated signals high background noise levels. Palette colors gray.1, gray.2, gray.3, topo.1 rainbow.1 (imported package monitoR) seem work better 'fast' spectrograms. Palette colors gray.1, gray.2, gray.3 offer decreasing darkness levels. t.mar Numeric vector length 1. Specifies margins adjacent start end points added highlighting selection. Default NULL. f.mar Numeric vector length 1. Specifies margins adjacent low high frequencies added highlighting selection. Default NULL. interactive Numeric. Allow user interactively select signals highlighted clicking graphic device. Users must select opposite corners square delimiting spectrogram region highlighted. Controls number signals users able select (2 clicks per signal). add Logical. TRUE new highlighting can applied current plot (means function add = FALSE run first). Default FALSE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/color_spectro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Highlight spectrogram regions — color_spectro","text":"plot produced graphic device.","code":""},{"path":"https://marce10.github.io/warbleR/reference/color_spectro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Highlight spectrogram regions — color_spectro","text":"function highlights regions spectrogram different colors. regions highlighted can provided selection table (example data 'lbh_selec_table') interactively ('interactive' argument).","code":""},{"path":"https://marce10.github.io/warbleR/reference/color_spectro.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Highlight spectrogram regions — color_spectro","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/color_spectro.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Highlight spectrogram regions — color_spectro","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr) Grace Smith Vidaurre","code":""},{"path":"https://marce10.github.io/warbleR/reference/color_spectro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Highlight spectrogram regions — color_spectro","text":"","code":"if (FALSE) { data(list = c(\"Phae.long1\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) # save sound files  # subset selection table st <- lbh_selec_table[lbh_selec_table$sound.files == \"Phae.long1.wav\", ]  # read wave file as an R object sgnl <- tuneR::readWave(file.path(tempdir(), st$sound.files[1]))  # create color column st$colors <- c(\"red2\", \"blue\", \"green\")  # highlight selections color_spectro(   wave = sgnl, wl = 300, ovlp = 90, flim = c(1, 8.6), collevels = seq(-40, 0, 5),   dB = \"B\", X = st, col.clm = \"colors\", base.col = \"skyblue\", t.mar = 0.07, f.mar = 0.1,   interactive = NULL )  # interactive (selected manually: you have to select them by clicking on the spectrogram) color_spectro(   wave = sgnl, wl = 300, ovlp = 90, flim = c(1, 8.6), collevels = seq(-40, 0, 5),   dB = \"B\", col.clm = \"colors\", t.mar = 0.07, f.mar = 1, interactive = 2 ) }"},{"path":"https://marce10.github.io/warbleR/reference/comp_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Example matrix listing selections to be compared by cross_correlation — comp_matrix","title":"Example matrix listing selections to be compared by cross_correlation — comp_matrix","text":"comp_matrix character matrix 2 columns indicating selections compared (column 1 vs column 2) cross_correlation.","code":""},{"path":"https://marce10.github.io/warbleR/reference/comp_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example matrix listing selections to be compared by cross_correlation — comp_matrix","text":"","code":"data(comp_matrix)"},{"path":"https://marce10.github.io/warbleR/reference/comp_matrix.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example matrix listing selections to be compared by cross_correlation — comp_matrix","text":"data frame 11 rows 6 variables: sound.files recording names channel channel signal found selec selection numbers within recording start start times selected signal end end times selected signal bottom.freq lower limit frequency range top.freq upper limit frequency range","code":""},{"path":"https://marce10.github.io/warbleR/reference/comp_matrix.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example matrix listing selections to be compared by cross_correlation — comp_matrix","text":"Marcelo Araya Salas, warbleR","code":""},{"path":"https://marce10.github.io/warbleR/reference/comp_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example matrix listing selections to be compared by cross_correlation — comp_matrix","text":"character matrix 2 columns indicating selections compared (column 1 vs column 2) cross_correlation. first column contain ID selection, given combining 'sound.files' 'selec' columns 'X', separated '-' (.e. paste(X$sound.files, X$selec, sep = \"-\")). selection id's refer example data \"lbh_selec_table\". second column refers sound files search templates.","code":""},{"path":"https://marce10.github.io/warbleR/reference/compare_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Assessing the performance of acoustic distance measurements — compare_methods","title":"Assessing the performance of acoustic distance measurements — compare_methods","text":"compare_methods creates graphs visually assess performance acoustic distance measurements","code":""},{"path":"https://marce10.github.io/warbleR/reference/compare_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assessing the performance of acoustic distance measurements — compare_methods","text":"","code":"compare_methods(X = NULL, flim = NULL, bp = NULL, mar = 0.1, wl = 512, ovlp = 90, res = 150, n = 10, length.out = 30, methods = NULL, it = \"jpeg\", parallel = 1, path = NULL, sp = NULL, custom1 = NULL, custom2 = NULL, pb = TRUE, grid = TRUE,  clip.edges = TRUE, threshold = 15, na.rm = FALSE, scale = FALSE, pal = reverse.gray.colors.2, img = TRUE, ...)"},{"path":"https://marce10.github.io/warbleR/reference/compare_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assessing the performance of acoustic distance measurements — compare_methods","text":"X 'selection_table' object data frame results auto_detec function, data frame columns sound file name (sound.files), selection number (selec), start end time signal (start end). Default NULL. flim numeric vector length 2 frequency limit kHz spectrogram, spectro. Default NULL. bp numeric vector length 2 giving lower upper limits frequency bandpass filter (kHz) used acoustic distance methods. Default NULL. mar Numeric vector length 1. Specifies plot margins around selection seconds. Default 0.1. wl numeric vector length 1 specifying window length spectrogram cross-correlation, default 512. ovlp Numeric vector length 1 specifying percent overlap two consecutive windows, spectro. Default 90. res Numeric argument length 1. Controls image resolution. Default 150. n Numeric argument length 1. Defines number plots produce. Default 10. length.character vector length 1 giving number measurements fundamental dominant frequency desired (length time series). Default 30. methods character vector length 2 giving names acoustic distance methods compared. methods available : XCORR: cross-correlation (cross_correlation function) dfDTW: dynamic time warping dominant frequency contours (freq_DTW function) ffDTW: dynamic time warping fundamental frequency contours (freq_DTW function) SP: spectral parameters (spectro_analysis function) SPharm: spectral parameters (spectro_analysis function argument harmonicity  = TRUE) MFCC: statistical descriptors Mel frequency cepstral coefficients (mfcc_stats function) Default NULL. character vector length 1 giving image type used. Currently \"tiff\" \"jpeg\" admitted. Default \"jpeg\". parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). path Character string containing directory path sound files located. NULL (default) current working directory used. sp DEPRECATED. custom1 Data frame containing user parameters. data frame must 4 columns: first 2 columns 'sound.files' \"selec' columns 'X', 2 (columns 3 4) 2 numeric columns used 2 parameters representing custom measurements. data 2 parameters try using PCA (.e. prcomp function)summarize 2 dimensions using input. Default NULL. custom2 Data frame containing user parameters format 'custom1'. 'custom1' must provided first. Default NULL. pb Logical argument control progress bar. Default TRUE. grid Logical argument control presence grid spectrograms (default TRUE). clip.edges Logical argument control whether edges (start end signal) amplitude values threshold detected removed using dfDTW ffDTW methods. TRUE edges excluded signal contour calculated remaining values. Default TRUE. threshold amplitude threshold (%) dominant /fundamental frequency detection using dfDTW, ffDTW SP methods. Default 15. na.rm Logical. TRUE NAs produced pairwise cross-correlations failed removed results. means selections least 1 cross-correlation failed excluded methods comparison. apply XCORR one methods compared. scale Logical. TRUE dominant /fundamental frequency values z-transformed using scale function, \"ignores\" differences absolute frequencies signals order focus comparison frequency contour, regardless pitch signals. Default TRUE. pal color palette function used assign colors spectrograms, spectro. Default reverse.gray.colors.2. img logical argument specifying whether image files produced. Default TRUE. ... Additional arguments passed modified version spectro customizing graphical output. includes fast.spec, argument speeds plotting spectrograms (see description spectrograms).","code":""},{"path":"https://marce10.github.io/warbleR/reference/compare_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assessing the performance of acoustic distance measurements — compare_methods","text":"Image files 4 spectrograms selection compared scatterplots acoustic space signals input data frame 'X'.","code":""},{"path":"https://marce10.github.io/warbleR/reference/compare_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assessing the performance of acoustic distance measurements — compare_methods","text":"function produces graphs spectrograms 4 signals provided data frame allow visual inspection performance acoustic distance methods comparing signals. signals randomly picked provided data frame (X argument).spectrograms plotted frequency time scales. function compares 2 methods time. methods available : cross-correlation (XCORR, cross_correlation), dynamic time warping dominant frequency time series (dfDTW, dtw applied freq_ts output), dynamic time warping dominant frequency time series (ffDTW, dtw applied freq_ts output), spectral parameters (SP, spectro_analysis). graph also contains 2 scatterplots (1 method) acoustic space signals input data frame 'X', including centroid black dot. compared selections randomly picked pool selections input data frame. argument 'n' defines number comparisons (.e. graphs) produced. acoustic pairwise distance signals shown next arrows linking . font color distance value correspond font color method generated , shown scatterplots. Distances standardized, 0 distance signal 1 farthest pairwise distance pool signals. Principal Component Analysis (prcomp) applied calculate distances using spectral parameters (SP) descriptors cepstral coefficients (MFCC). cases first 2 PC's used. Classical Multidimensional Scalling (also known Principal Coordinates Analysis, (cmdscale)) used cross-correlation (XCORR) dynamic time warping method. graphs return image files working directory. file name contains methods compared row number selections. function uses internally modified version spectro function seewave package create spectrograms. Custom data can also compared available methods () using arguments 'custom1' 'custom2'.","code":""},{"path":"https://marce10.github.io/warbleR/reference/compare_methods.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Assessing the performance of acoustic distance measurements — compare_methods","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/compare_methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assessing the performance of acoustic distance measurements — compare_methods","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr). uses internally modified version spectro function seewave package create spectrograms.","code":""},{"path":"https://marce10.github.io/warbleR/reference/compare_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assessing the performance of acoustic distance measurements — compare_methods","text":"","code":"if (FALSE) { # Save to temporary working directory data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))  compare_methods(   X = lbh_selec_table, flim = c(0, 10), bp = c(0, 10), mar = 0.1, wl = 300,   ovlp = 90, res = 200, n = 10, length.out = 30,   methods = c(\"XCORR\", \"dfDTW\"), parallel = 1, it = \"jpeg\", path = tempdir() )  # remove progress bar compare_methods(   X = lbh_selec_table, flim = c(0, 10), bp = c(0, 10), mar = 0.1, wl = 300,   ovlp = 90, res = 200, n = 10, length.out = 30,   methods = c(\"XCORR\", \"dfDTW\"), parallel = 1, it = \"jpeg\", pb = FALSE, path = tempdir() )  # check this folder! getwd()   # compare SP and XCORR compare_methods(   X = lbh_selec_table, flim = c(0, 10), bp = c(0, 10), mar = 0.1, wl = 300,   ovlp = 90, res = 200, n = 10, length.out = 30,   methods = c(\"XCORR\", \"SP\"), parallel = 1, it = \"jpeg\", path = tempdir() )  # compare SP method against dfDTW compare_methods(   X = lbh_selec_table, flim = c(0, 10), bp = c(0, 10), mar = 0.1, wl = 300,   ovlp = 90, res = 200, n = 10, length.out = 30,   methods = c(\"dfDTW\", \"SP\"), parallel = 1, it = \"jpeg\",   path = tempdir() )  # alternatively we can provide our own SP matrix Y <- spectro_analysis(lbh_selec_table, path = tempdir())  # selec a subset of variables Y <- Y[, 1:7]  # PCA Y <- prcomp(Y[, 3:ncol(Y)])$x  # add sound files and selec columns Y <- data.frame(lbh_selec_table[, c(1, 3)], Y[, 1:2])  compare_methods(   X = lbh_selec_table, methods = c(\"dfDTW\"), custom1 = Y,   path = tempdir() ) }"},{"path":"https://marce10.github.io/warbleR/reference/consolidate.html","id":null,"dir":"Reference","previous_headings":"","what":"Consolidate (sound) files into a single directory — consolidate","title":"Consolidate (sound) files into a single directory — consolidate","text":"consolidate copies (sound) files scattered several directories single one.","code":""},{"path":"https://marce10.github.io/warbleR/reference/consolidate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consolidate (sound) files into a single directory — consolidate","text":"","code":"consolidate(files = NULL, path = NULL, dest.path = NULL, pb = TRUE, file.ext = \".wav$\", parallel = 1, save.csv = TRUE, ...)"},{"path":"https://marce10.github.io/warbleR/reference/consolidate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consolidate (sound) files into a single directory — consolidate","text":"files character vector indicating subset files consolidated. Files names include full file path. Optional. path Character string containing directory path sound files located. 'wav.path' set warbleR_options ignored. NULL (default) current working directory used. dest.path Character string containing directory path sound files saved. NULL (default) current working directory used. pb Logical argument control progress bar. Default TRUE. file.ext Character string defining file extension (.e. format) files consolidated. Default '.wav$' ignoring case. Several formats can used: \"\\.wav$|\\.wac$|\\.mp3$|\\.flac$\". parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). save.csv Logical. Controls whether data frame containing sound file information saved new directory. Default TRUE. ... Additional arguments passed internal file.copy function customizing file copying.","code":""},{"path":"https://marce10.github.io/warbleR/reference/consolidate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Consolidate (sound) files into a single directory — consolidate","text":"(sound) files consolidated (copied) single directory (\"consolidated_files\"). function returns data frame files copied row following information: original_dir path original file old_name name original file new_name name new file. 'old_name' name duplicated (.e. files directories name). file_size_bytes size file bytes. duplicate indicates whether file likely duplicated (.e. files name found directories). labeled 'possible.dupl', otherwise contain NAs. csv = TRUE (default) 'file_names_info.csv' file information output data frame also saved consolidated directory.","code":""},{"path":"https://marce10.github.io/warbleR/reference/consolidate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Consolidate (sound) files into a single directory — consolidate","text":"function allows users put files scattered several directories single one. default works sound files '.wav' format can work type files (instance '.txt' selection files).","code":""},{"path":"https://marce10.github.io/warbleR/reference/consolidate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Consolidate (sound) files into a single directory — consolidate","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/consolidate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Consolidate (sound) files into a single directory — consolidate","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/consolidate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Consolidate (sound) files into a single directory — consolidate","text":"","code":"{ # save wav file examples data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\"))  # create first folder with 2 sound files dir.create(file.path(tempdir(), \"folder1\")) writeWave(Phae.long1, file.path(tempdir(), \"folder1\", \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"folder1\", \"Phae.long2.wav\"))  # create second folder with 2 sound files dir.create(file.path(tempdir(), \"folder2\")) writeWave(Phae.long3, file.path(tempdir(), \"folder2\", \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"folder2\", \"Phae.long4.wav\"))  # consolidate in a single folder # consolidate(path = tempdir(), dest.path = tempdir())  # check this folder tempdir() } #> [1] \"/tmp/RtmpV1BiAC\""},{"path":"https://marce10.github.io/warbleR/reference/coor.graph.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for plot_coordination — coor.graph","title":"alternative name for plot_coordination — coor.graph","text":"alternative name plot_coordination","code":""},{"path":"https://marce10.github.io/warbleR/reference/coor.graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for plot_coordination — coor.graph","text":"","code":"coor.graph(   X = NULL,   only.coor = FALSE,   ovlp = TRUE,   xl = 1,   res = 80,   it = \"jpeg\",   img = TRUE,   tlim = NULL,   pb = TRUE )"},{"path":"https://marce10.github.io/warbleR/reference/coor.graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for plot_coordination — coor.graph","text":"see plot_coordination documentation. coor.graph deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/coor.test.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for test_coordination — coor.test","title":"alternative name for test_coordination — coor.test","text":"alternative name test_coordination","code":""},{"path":"https://marce10.github.io/warbleR/reference/coor.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for test_coordination — coor.test","text":"","code":"coor.test(   X = NULL,   iterations = 1000,   ovlp.method = \"count\",   randomization = \"keep.gaps\",   less.than.chance = TRUE,   parallel = 1,   pb = TRUE,   rm.incomp = FALSE,   cutoff = 2,   rm.solo = FALSE )"},{"path":"https://marce10.github.io/warbleR/reference/coor.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for test_coordination — coor.test","text":"see test_coordination documentation. coor.test deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/cross_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Time-frequency cross-correlation — cross_correlation","title":"Time-frequency cross-correlation — cross_correlation","text":"cross_correlation estimates similarity two sound waves means time-frequency cross-correlation","code":""},{"path":"https://marce10.github.io/warbleR/reference/cross_correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time-frequency cross-correlation — cross_correlation","text":"","code":"cross_correlation(X, wl = 512, bp = \"pairwise.freq.range\", ovlp = 70, dens = NULL, wn = 'hanning', cor.method = \"pearson\", parallel = 1, path = NULL, pb = TRUE, na.rm = FALSE, cor.mat = NULL, output = \"cor.mat\", templates = NULL, surveys = NULL, compare.matrix = NULL, type = \"fourier\",  nbands = 40, method = 1)"},{"path":"https://marce10.github.io/warbleR/reference/cross_correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time-frequency cross-correlation — cross_correlation","text":"X 'selection_table', 'extended_selection_table' data frame containing columns sound files (sound.files), selection number (selec), start end time signal (start end). selections must sampling rate. wl numeric vector length 1 specifying window length spectrogram, default 512. bp numeric vector length 2 lower upper limits frequency bandpass filter (kHz). columns bottom top frequency ('bottom.freq' 'top.freq') supplied \"pairwise.freq.range\" ca used (default). , lowest values 'bottom.freq' highest values 'top.freq' selections involved pairwise comparison used bandpass limits. ovlp Numeric vector length 1 specifying % overlap two consecutive windows, spectro. Default 70. High values ovlp slow function produce accurate results. dens DEPRECATED. wn character vector length 1 specifying window name ftwindow. cor.method character vector length 1 specifying correlation method cor. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). path Character string containing directory path sound files located. NULL (default) current working directory used. pb Logical argument control progress bar. Default TRUE. na.rm Logical. TRUE NAs produced pairwise cross-correlations failed removed results. means selections least 1 cross-correlation failed excluded. cor.mat DEPRECATED. Use 'compare.matrix' instead. output Character vector length 1 determine correlation matrix returned ('cor.mat', default) list ('list') containing 1) correlation matrix 2) data frame correlation values sliding step comparison. list, also class 'xcorr.output', can used find detection peaks find_peaks graphically explore detections using lspec. templates Character vector selections 'X' used templates cross-correlation detection. refer specific selections 'X' user must use format \"sound.file-selec\" (e.g. \"file1.wav-1\"). sound file name included entire sound file used template. surveys Character vector selections 'X' used surveys cross-correlation detection. refer specific selections 'X' user must use format \"sound.file-selec\" (e.g. \"file1.wav-1\"). sound file name included entire sound file used survey. compare.matrix character matrix 2 columns indicating selections compared (column 1 vs column 2). columns must contained ID selection, given combining 'sound.files' 'selec' columns 'X',  separated '-' (.e. paste(X$sound.files, X$selec, sep = \"-\")). Default NULL. 'selec' ID supplied entire sound file used instead. 'compare.matrix' supplied comparisons calculated (opposed pairwise comparisons default behavior) output data frame composed supplied matrix correspondent cross-correlation values. Note 'method' automatically set 2 (create spectrograms fly) 'compare.matrix' supplied can set back 1. supplied 'output' forced 'list'. Note use function signal detection ('compare.matrix') deprecated future warbleR versions. Look ohun package automatic signal detection functions. type character vector length 1 specifying type cross-correlation; either \"fourier\" (.e. spectrographic cross-correlation using Fourier transform; internally using spectro; default) \"mfcc\" (Mel cepstral coefficient spectrogram cross-correlation; internally using melfcc). nbands Numeric vector length 1 controlling number warped spectral bands calculate using type = \"mfcc\" (see melfcc). Default 40. method Numeric vector length 1 control method used create spectrogram matrices. Two option available: 1:  matrices created first (keeping internally list) cross-correlation calculated second step. Note method may require lots memory selection sound files large. 2: matrices created \"fly\" (.e. time cross-correlation calculated). memory efficient may require extracting matrix several times, affect performance. Note using method function check sound files sampling rate , may produce error.","code":""},{"path":"https://marce10.github.io/warbleR/reference/cross_correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time-frequency cross-correlation — cross_correlation","text":"output = \"cor.mat\" function returns matrix maximum (peak) correlation pairwise comparison ('compare.matrix' supplied) peak correlation comparison supplied 'compare.matrix'. Otherwise return list includes 1) matrix maximum correlation pairwise comparison ('max.xcorr.matrix') 2) data frame correlation statistic \"sliding\" step ('scores').","code":""},{"path":"https://marce10.github.io/warbleR/reference/cross_correlation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time-frequency cross-correlation — cross_correlation","text":"function calculates pairwise similarity multiple signals means time-frequency cross-correlation. Fourier Mel frequency ceptral coefficients spectrograms can used time-frequency representations sound. method \"slides\" spectrogram shortest selection longest one calculating correlation amplitude values step. function runs pairwise cross-correlations several signals returns list including correlation statistic \"sliding\" step well maximum (peak) correlation pairwise comparison. correlation matrix NA's pairwise correlation work (common sound files modified band-pass filters). Make sure sound files sampling rate (can checked check_sels check_sound_files).","code":""},{"path":"https://marce10.github.io/warbleR/reference/cross_correlation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Time-frequency cross-correlation — cross_correlation","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.H. Khanna, S.L.L. Gaunt & D.. McCallum (1997). Digital spectrographic cross-correlation: tests sensitivity. Bioacoustics 7(3): 209-234Lyon, R. H., & Ordubadi, . (1982). Use cepstra acoustical signal analysis. Journal Mechanical Design, 104(2), 303-306.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/cross_correlation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Time-frequency cross-correlation — cross_correlation","text":"Marcelo Araya-Salas marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/cross_correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time-frequency cross-correlation — cross_correlation","text":"","code":"{   # load data   data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\"))    # save sound files   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"))   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))   writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))   writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))    # run cross correlation on spectrograms (SPCC)   xcor <- cross_correlation(X = lbh_selec_table, wl = 300, ovlp = 90, path = tempdir())    # run cross correlation on Mel cepstral coefficients (mfccs)   xcor <- cross_correlation(X = lbh_selec_table, wl = 300, ovlp = 90, path = tempdir(),    type = \"mfcc\")    # using the 'compare.matrix' argument to specify pairwise comparisons   # create matrix with ID of signals to compare   cmp.mt <- cbind(     paste(lbh_selec_table$sound.files[1:10], lbh_selec_table$selec[1:10], sep = \"-\"),     paste(lbh_selec_table$sound.files[2:11], lbh_selec_table$selec[2:11], sep = \"-\")   )    # run cross-correlation on the selected pairwise comparisongs   xcor <- cross_correlation(     X = lbh_selec_table, compare.matrix = cmp.mt,     wl = 300, ovlp = 90, path = tempdir()   ) } #> creating spectrogram matrices (step 1 of 2): #> running cross-correlation (step 2 of 2): #> creating spectrogram matrices (step 1 of 2): #> running cross-correlation (step 2 of 2): #> Warning: The use of this function for signal detection (with 'compare.matrix') will be deprecated in future warbleR versions, please look at the ohun package for automatic signal detection functions (https://marce10.github.io/ohun/index.html) #> running cross-correlation (step 1 of 1):"},{"path":"https://marce10.github.io/warbleR/reference/cut_sels.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut selections into individual sound files — cut_sels","title":"Cut selections into individual sound files — cut_sels","text":"cut_sels cuts selections selection table individual sound files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/cut_sels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut selections into individual sound files — cut_sels","text":"","code":"cut_sels(X, mar = 0.05, parallel = 1, path = NULL, dest.path = NULL, pb = TRUE, labels = c(\"sound.files\", \"selec\"), overwrite = FALSE, norm = FALSE, keep.stereo = FALSE, ...)  cut_sels(   X,   mar = 0.05,   parallel = 1,   path = NULL,   dest.path = NULL,   pb = TRUE,   labels = c(\"sound.files\", \"selec\"),   overwrite = FALSE,   norm = FALSE,   keep.stereo = FALSE,   ... )"},{"path":"https://marce10.github.io/warbleR/reference/cut_sels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut selections into individual sound files — cut_sels","text":"X object class 'selection_table', 'extended_selection_table' data frame containing columns sound file name (sound.files), selection number (selec), start end time signals (start end). mar Numeric vector length 1. Specifies margins adjacent start end points selections, delineating spectrogram limits. Default 0.05. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). path Character string containing directory path sound files located. NULL (default) current working directory used. dest.path Character string containing directory path cut sound files saved. NULL (default) directory containing sound files used instead. pb Logical argument control progress bar. Default TRUE. labels String vector. Provides column names used labels create sound file names. Note provide unique names (otherwise sound files overwritten). Default c(\"sound.files\", \"selec\"). overwrite Logical. TRUE sound files name overwritten. Default FALSE. norm Logical indicating whether wave objects must normalized first using function normalize. Additional arguments can passed normalize using `...`.` Default FALSE. See normalize available options. keep.stereo Logical. TRUE channels kept clips, oterwise keep channel referenced channel column (supplied) first channel 'channel' column found 'X'. applies stereo (2-channel) files. ... Additional arguments passed internal normalize function customizing sound file output. Ignored  norm = FALSE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/cut_sels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut selections into individual sound files — cut_sels","text":"Sound files signals listed input data frame.","code":""},{"path":"https://marce10.github.io/warbleR/reference/cut_sels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cut selections into individual sound files — cut_sels","text":"function allow users produce individual sound files selections listed selection table lbh_selec_table. Note wave objects bit depth 32 might readable programs exporting. case \"normalized\" (argument 'norm\") lower bit depth. function keeps original number channels output clips 1- 2-channel files. see cut_sels documentation. cut_sels deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/cut_sels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cut selections into individual sound files — cut_sels","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/cut_sels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cut selections into individual sound files — cut_sels","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr) Grace Smith Vidaurre","code":""},{"path":"https://marce10.github.io/warbleR/reference/cut_sels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut selections into individual sound files — cut_sels","text":"","code":"{ # save wav file examples data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))  # cut selections cut_sels(lbh_selec_table, path = tempdir())  #check this folder!! tempdir() } #> [1] \"/tmp/RtmpV1BiAC\""},{"path":"https://marce10.github.io/warbleR/reference/dfDTW.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for freq_DTW — dfDTW","title":"alternative name for freq_DTW — dfDTW","text":"alternative name freq_DTW","code":""},{"path":"https://marce10.github.io/warbleR/reference/dfDTW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for freq_DTW — dfDTW","text":"","code":"dfDTW(   X = NULL,   type = \"dominant\",   wl = 512,   wl.freq = 512,   length.out = 20,   wn = \"hanning\",   ovlp = 70,   bp = NULL,   threshold = 15,   threshold.time = NULL,   threshold.freq = NULL,   img = TRUE,   parallel = 1,   path = NULL,   ts.df = NULL,   img.suffix = \"dfDTW\",   pb = TRUE,   clip.edges = TRUE,   window.type = \"none\",   open.end = FALSE,   scale = FALSE,   frange.detec = FALSE,   fsmooth = 0.1,   adjust.wl = TRUE,   ... )"},{"path":"https://marce10.github.io/warbleR/reference/dfDTW.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for freq_DTW — dfDTW","text":"see freq_DTW documentation. dfDTW deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/df_DTW.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for freq_DTW — df_DTW","title":"alternative name for freq_DTW — df_DTW","text":"alternative name freq_DTW","code":""},{"path":"https://marce10.github.io/warbleR/reference/df_DTW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for freq_DTW — df_DTW","text":"","code":"df_DTW(   X = NULL,   type = \"dominant\",   wl = 512,   wl.freq = 512,   length.out = 20,   wn = \"hanning\",   ovlp = 70,   bp = NULL,   threshold = 15,   threshold.time = NULL,   threshold.freq = NULL,   img = TRUE,   parallel = 1,   path = NULL,   ts.df = NULL,   img.suffix = \"dfDTW\",   pb = TRUE,   clip.edges = TRUE,   window.type = \"none\",   open.end = FALSE,   scale = FALSE,   frange.detec = FALSE,   fsmooth = 0.1,   adjust.wl = TRUE,   ... )"},{"path":"https://marce10.github.io/warbleR/reference/df_DTW.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for freq_DTW — df_DTW","text":"see freq_DTW documentation. freq_DTW deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/duration_sound_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure the duration of sound files — duration_sound_files","title":"Measure the duration of sound files — duration_sound_files","text":"duration_sound_files measures duration sound files","code":""},{"path":"https://marce10.github.io/warbleR/reference/duration_sound_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure the duration of sound files — duration_sound_files","text":"","code":"duration_sound_files(files = NULL, path = NULL, skip.error = FALSE, file.format = \"\\\\.wav$|\\\\.wac$|\\\\.mp3$|\\\\.flac$\")"},{"path":"https://marce10.github.io/warbleR/reference/duration_sound_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure the duration of sound files — duration_sound_files","text":"files Character vector names sound files measured. sound files working directory directory provided 'path'. path Character string containing directory path sound files located. skip.error Logical control errors omitted. , files read return NA 'duration' column. Default FALSE, return error files problematic. NULL (default) current working directory used. file.format Character string format sound files. default sound file formats supported warbleR included (\"\\.wav$|\\.wac$|\\.mp3$|\\.flac$\"). Note several formats can included using regular expression syntax grep. instance \"\\.wav$|\\.mp3$\" include .wav .mp3 files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/duration_sound_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure the duration of sound files — duration_sound_files","text":"data frame duration (seconds) sound files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/duration_sound_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Measure the duration of sound files — duration_sound_files","text":"function returns duration (seconds) sound files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/duration_sound_files.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Measure the duration of sound files — duration_sound_files","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/reference/duration_sound_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Measure the duration of sound files — duration_sound_files","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/duration_sound_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure the duration of sound files — duration_sound_files","text":"","code":"{   data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\"))   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"))   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))   writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))    duration_sound_files(path = tempdir()) } #>         sound.files  duration #> 1  Phae.long1-1.wav 0.2730667 #> 2  Phae.long1-2.wav 0.2630667 #> 3  Phae.long1-3.wav 0.2749333 #> 4    Phae.long1.wav 2.5000444 #> 5  Phae.long2-1.wav 0.2325778 #> 6  Phae.long2-2.wav 0.2261333 #> 7    Phae.long2.wav 1.7000444 #> 8  Phae.long3-1.wav 0.2312444 #> 9  Phae.long3-2.wav 0.2301778 #> 10 Phae.long3-3.wav 0.2312000 #> 11   Phae.long3.wav 2.2000000 #> 12 Phae.long4-1.wav 0.2454222 #> 13 Phae.long4-2.wav 0.2441778 #> 14 Phae.long4-3.wav 0.2451111 #> 15   Phae.long4.wav 3.2000000"},{"path":"https://marce10.github.io/warbleR/reference/duration_wavs.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for duration_sound_files — duration_wavs","title":"alternative name for duration_sound_files — duration_wavs","text":"alternative name duration_sound_files","code":""},{"path":"https://marce10.github.io/warbleR/reference/duration_wavs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for duration_sound_files — duration_wavs","text":"","code":"duration_wavs(   files = NULL,   path = NULL,   skip.error = FALSE,   file.format = \"\\\\.wav$|\\\\.wac$|\\\\.mp3$|\\\\.flac$\" )"},{"path":"https://marce10.github.io/warbleR/reference/duration_wavs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for duration_sound_files — duration_wavs","text":"see duration_sound_files documentation. duration_wavs deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/envelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the absolute amplitude envelope — envelope","title":"Calculates the absolute amplitude envelope — envelope","text":"Calculates absolute amplitude envelope","code":""},{"path":"https://marce10.github.io/warbleR/reference/envelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the absolute amplitude envelope — envelope","text":"","code":"envelope(x, ssmooth = 0)"},{"path":"https://marce10.github.io/warbleR/reference/envelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the absolute amplitude envelope — envelope","text":"x Numeric vector amplitude values. Required. ssmooth Numeric vector length 1 indicating size sliding window use smooth envelopes. Default 0 (smoothing).","code":""},{"path":"https://marce10.github.io/warbleR/reference/envelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the absolute amplitude envelope — envelope","text":"amplitude envelope.","code":""},{"path":"https://marce10.github.io/warbleR/reference/envelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the absolute amplitude envelope — envelope","text":"function calculates absolute amplitude envelope amplitude vector using compiled C code usually several times faster.","code":""},{"path":"https://marce10.github.io/warbleR/reference/envelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates the absolute amplitude envelope — envelope","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/envelope.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculates the absolute amplitude envelope — envelope","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr) & Paula Monge","code":""},{"path":"https://marce10.github.io/warbleR/reference/envelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the absolute amplitude envelope — envelope","text":"","code":"{ data(tico)  amp_env <- envelope(tico@left, ssmooth = 100) }"},{"path":"https://marce10.github.io/warbleR/reference/ffDTW.html","id":null,"dir":"Reference","previous_headings":"","what":"deprecated functions and function names — ffDTW","title":"deprecated functions and function names — ffDTW","text":"deprecated functions function names","code":""},{"path":"https://marce10.github.io/warbleR/reference/ffDTW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deprecated functions and function names — ffDTW","text":"","code":"ffDTW(...)"},{"path":"https://marce10.github.io/warbleR/reference/ffDTW.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"deprecated functions and function names — ffDTW","text":"functions deprecated moved packages.","code":""},{"path":"https://marce10.github.io/warbleR/reference/filter_sels.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset selection data frames based on manually filtered image files — filter_sels","title":"Subset selection data frames based on manually filtered image files — filter_sels","text":"filter_sels subsets selection data frames based image files manually filtered.","code":""},{"path":"https://marce10.github.io/warbleR/reference/filter_sels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset selection data frames based on manually filtered image files — filter_sels","text":"","code":"filter_sels(X, path = NULL, lspec = FALSE, img.suffix = NULL, it = \"jpeg\",  incl.wav = TRUE, missing = FALSE, index = FALSE)"},{"path":"https://marce10.github.io/warbleR/reference/filter_sels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset selection data frames based on manually filtered image files — filter_sels","text":"X object class 'selection_table', 'extended_selection_table' data frame following columns: 1) \"sound.files\": name .wav files, 2) \"sel\": number selections. path Character string containing directory path image files located. NULL (default) current working directory used. warbleR_options 'wav.path' argument apply. lspec logical argument indicating image files use filtering produced function full_spectrograms. image files correspond sound file must deleted order filtered . img.suffix character vector length 1 suffix (label) end names image files. Default NULL (.e. suffix images produced spectrograms). Ignored lspec = TRUE. character vector length 1 giving image type (\"tiff\", \"jpeg\" \"pdf\") Default \"jpeg\". Note pdf files can generated lspec2pdf. incl.wav Logical. indicate sound files extensions included ( TRUE, default) image file names. missing Logical. Controls whether output data frame (row index index = TRUE) contains selections images working directory (Default, missing = FALSE) ones image. index Logical. TRUE missing = FALSE row index selections images working directory returned. missing = TRUE) row index ones image returned instead. Default FALSE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/filter_sels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset selection data frames based on manually filtered image files — filter_sels","text":"sound files ok, returns message \"files ok!\".   Otherwise returns \"file(s) read\" message names   corrupted sound files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/filter_sels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset selection data frames based on manually filtered image files — filter_sels","text":"function subsets selections (sound files lspec TRUE) listed data frame  based image files spectrogram-creating functions (e.g. spectrograms)  working directory. selections/sound files image working directory remain.  useful excluding selections undesired signals. Note  image files working directory (directory provided 'path').","code":""},{"path":"https://marce10.github.io/warbleR/reference/filter_sels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Subset selection data frames based on manually filtered image files — filter_sels","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/reference/filter_sels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Subset selection data frames based on manually filtered image files — filter_sels","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/filter_sels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset selection data frames based on manually filtered image files — filter_sels","text":"","code":"if (FALSE) { # save wav file examples data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))  spectrograms(lbh_selec_table, flim = c(0, 11), inner.mar = c(4,4.5,2,1), outer.mar = c(4,2,2,1), picsize = 2, res = 300, cexlab = 2, mar = 0.05, wl = 300, path = tempdir())  #go to the working directory (tempdir()) and delete some images  #filter selection data frame fmloc <- filter_sels(X = lbh_selec_table, path = tempdir())  #this data frame does not have the selections corresponding to the images that were deleted fmloc  #now using lspec images full_spectrograms(sxrow = 2, rows = 8, pal = reverse.heat.colors, wl = 300, ovlp = 10, path = tempdir())  # go to the working directory (tempdir()) and delete lspec # images (the ones with several rows of spectrograms)  #filter selection data frame fmloc2 <- filter_sels(X = lbh_selec_table, lspec = TRUE, path = tempdir())  }"},{"path":"https://marce10.github.io/warbleR/reference/filtersels.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for filter_sels — filtersels","title":"alternative name for filter_sels — filtersels","text":"alternative name filter_sels","code":""},{"path":"https://marce10.github.io/warbleR/reference/filtersels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for filter_sels — filtersels","text":"","code":"filtersels(   X,   path = NULL,   lspec = FALSE,   img.suffix = NULL,   it = \"jpeg\",   incl.wav = TRUE,   missing = FALSE,   index = FALSE )"},{"path":"https://marce10.github.io/warbleR/reference/filtersels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for filter_sels — filtersels","text":"see filter_sels documentation. filtersels deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/find_clipping.html","id":null,"dir":"Reference","previous_headings":"","what":"Find clipped selections — find_clipping","title":"Find clipped selections — find_clipping","text":"find_clipping gets proportion samples clipped.","code":""},{"path":"https://marce10.github.io/warbleR/reference/find_clipping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find clipped selections — find_clipping","text":"","code":"find_clipping(X, path = NULL, parallel = 1, pb = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/find_clipping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find clipped selections — find_clipping","text":"X 'selection_table', 'extended_selection_table' data frame following columns: 1) \"sound.files\": name sound files, 2) \"selec\": number selections, 3) \"start\": start time selections, 4) \"end\": end time selections. path Character string containing directory path sound files located. NULL (default) current working directory used. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar messages. Default TRUE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/find_clipping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find clipped selections — find_clipping","text":"data frame 'sound.files' 'selec' columns X plus additional column ('prop.clipped') indicating proportion clipped samples row. sound files stereo average proportion two channels returned.","code":""},{"path":"https://marce10.github.io/warbleR/reference/find_clipping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find clipped selections — find_clipping","text":"Clipping (.e. saturation) occurs audio signal amplified maximum limit recorder. leads distortion lowering audio quality. stereo mean proportion channels returned. function assumes specific range values different bit depths detailed normalize.","code":""},{"path":"https://marce10.github.io/warbleR/reference/find_clipping.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find clipped selections — find_clipping","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/find_clipping.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find clipped selections — find_clipping","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/find_clipping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find clipped selections — find_clipping","text":"","code":"{   # load data   data(list = c(\"Phae.long1\", \"Phae.long2\", \"lbh_selec_table\"))   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) # save sound files   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))    find_clipping(X = lbh_selec_table[1:5, ], path = tempdir()) } #>      sound.files selec prop.clipped #> 1 Phae.long1.wav     1 0.0000000000 #> 2 Phae.long1.wav     2 0.0005451077 #> 3 Phae.long1.wav     3 0.0000000000 #> 4 Phae.long2.wav     1 0.0000000000 #> 5 Phae.long2.wav     2 0.0000000000"},{"path":"https://marce10.github.io/warbleR/reference/find_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Find cross-correlation peaks — find_peaks","title":"Find cross-correlation peaks — find_peaks","text":"find_peaks find peaks cross-correlation scores cross_correlation","code":""},{"path":"https://marce10.github.io/warbleR/reference/find_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find cross-correlation peaks — find_peaks","text":"","code":"find_peaks(xc.output, parallel = 1, cutoff = 0.4, path = NULL, pb = TRUE, max.peak = FALSE, output = \"data.frame\")"},{"path":"https://marce10.github.io/warbleR/reference/find_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find cross-correlation peaks — find_peaks","text":"xc.output output cross_correlation setting output = \"list\". parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). cutoff Numeric vector length 1 value 0 1 specifying correlation cutoff detecting peaks. Default 0.4. path Character string containing directory path sound files located. NULL (default) current working directory used. pb Logical argument control progress bar. Default TRUE. max.peak Logical argument control whether peak highest correlation value returned (TRUE; cutoff ignored). Default FALSE. output Character vector length 1 determine detected peaks returned ('cormat') list ('list') containing 1) peaks  2) data frame correlation values sliding step comparison. list, also class 'peaks.output', can used graphically explore detections using full_spectrograms.","code":""},{"path":"https://marce10.github.io/warbleR/reference/find_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find cross-correlation peaks — find_peaks","text":"function returns data frame time correlation score detected peaks.","code":""},{"path":"https://marce10.github.io/warbleR/reference/find_peaks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find cross-correlation peaks — find_peaks","text":"function finds cross-correlation peaks along signals (analogous findPeaks).","code":""},{"path":"https://marce10.github.io/warbleR/reference/find_peaks.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find cross-correlation peaks — find_peaks","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.H. Khanna, S.L.L. Gaunt & D.. McCallum (1997). Digital spectrographic cross-correlation: tests sensitivity. Bioacoustics 7(3): 209-234","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/find_peaks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find cross-correlation peaks — find_peaks","text":"Marcelo Araya-Salas marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/find_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find cross-correlation peaks — find_peaks","text":"","code":"{   # load data   data(list = c(\"Phae.long4\", \"Phae.long2\", \"lbh_selec_table2\", \"comp_matrix\"))    # save sound files   writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))    # run cross-correlation   xc.output <- cross_correlation(     X = lbh_selec_table2, output = \"list\",     compare.matrix = comp_matrix, path = tempdir()   )    # find peaks   pks <- find_peaks(xc.output = xc.output, path = tempdir()) } #> Warning: The use of this function for signal detection (with 'compare.matrix') will be deprecated in future warbleR versions, please look at the ohun package for automatic signal detection functions (https://marce10.github.io/ohun/index.html) #> running cross-correlation (step 1 of 1): #> Warning: This function will be deprecated in future warbleR versions, please look at the ohun package for automatic signal detection functions (https://marce10.github.io/ohun/index.html)"},{"path":"https://marce10.github.io/warbleR/reference/fix_extended_selection_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix extended selection tables — fix_extended_selection_table","title":"Fix extended selection tables — fix_extended_selection_table","text":"fix_extended_selection_table fixes extended selection tables lost attributes","code":""},{"path":"https://marce10.github.io/warbleR/reference/fix_extended_selection_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix extended selection tables — fix_extended_selection_table","text":"","code":"fix_extended_selection_table(X, Y, to.by.song = FALSE)"},{"path":"https://marce10.github.io/warbleR/reference/fix_extended_selection_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix extended selection tables — fix_extended_selection_table","text":"X object class 'selection_table' data frame contains columns sound file name (sound.files), selection number (selec), start end time signal (start end). Y object class 'extended_selection_table' ..song Logical argument control attributes formatted match '.song' extended selection table. required 'X' created collapsing Y song (see '.song' argument selection_table). Mostly needed internally warbleR functions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/fix_extended_selection_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix extended selection tables — fix_extended_selection_table","text":"extended selection table.","code":""},{"path":"https://marce10.github.io/warbleR/reference/fix_extended_selection_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fix extended selection tables — fix_extended_selection_table","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/fix_extended_selection_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix extended selection tables — fix_extended_selection_table","text":"","code":"{ data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\"))  writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))  # create extended selection table ext_st <- selection_table(lbh_selec_table, extended = TRUE, confirm.extended = FALSE, path = tempdir())  # remove attributes st <- as.data.frame(ext_st)  # check class class(st)  # fix selection table st <- fix_extended_selection_table(X = st, Y = ext_st)  # check class class(st) } #> checking selections (step 1 of 2): #> saving wave objects into extended selection table (step 2 of 2): #> [1] \"extended_selection_table\" \"data.frame\""},{"path":"https://marce10.github.io/warbleR/reference/fix_wavs.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix .wav files to allow importing them into R — fix_wavs","title":"Fix .wav files to allow importing them into R — fix_wavs","text":"fix_wavs fixes sound files .wav format can imported R.","code":""},{"path":"https://marce10.github.io/warbleR/reference/fix_wavs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix .wav files to allow importing them into R — fix_wavs","text":"","code":"fix_wavs(checksels = NULL, files = NULL, samp.rate = NULL, bit.depth = NULL,  path = NULL, mono = FALSE)"},{"path":"https://marce10.github.io/warbleR/reference/fix_wavs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix .wav files to allow importing them into R — fix_wavs","text":"checksels Data frame results check_sels. Default NULL.  'checksels' 'files' NULL files 'path' converted. Note fixes/convert sound files .wav format. files Character vector names .wav files fix. Default NULL.  'checksels' 'files'  NULL files 'path' converted. samp.rate Numeric vector length 1 sampling rate (kHz) output files. Default NULL. (remain unchanged). bit.depth Numeric vector length 1 dynamic interval (.e. bit depth) output files. Default NULL (remain unchanged). path Character string containing directory path sound files located. NULL (default) current working directory used. mono Logical indicating stereo (2 channel) files converted mono (1 channel). Default NULL (remain unchanged).","code":""},{"path":"https://marce10.github.io/warbleR/reference/fix_wavs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix .wav files to allow importing them into R — fix_wavs","text":"folder inside working directory (path provided) 'converted_sound_files', containing sound files format can imported R.","code":""},{"path":"https://marce10.github.io/warbleR/reference/fix_wavs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fix .wav files to allow importing them into R — fix_wavs","text":"function aims simplify process converting sound files imported R /homogenizing sound files. Problematic files can determined using check_wavs check_sels. check_sels output can directly input using argument 'checksels'. Alternatively vector file names \"fixed\" can provided (argument 'files'). neither 2 provided function convert .wav sound files working directory specified sample rate/bit depth. Files saved new directory ('converted_sound_files'). Internally function calls SOX ('sox = TRUE', SOX must installed).  'checksels' 'files' NULL files 'path' converted. Note fixes/convert sound files .wav format.","code":""},{"path":"https://marce10.github.io/warbleR/reference/fix_wavs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fix .wav files to allow importing them into R — fix_wavs","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/reference/fix_wavs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fix .wav files to allow importing them into R — fix_wavs","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/fix_wavs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix .wav files to allow importing them into R — fix_wavs","text":"","code":"if (FALSE) { # Load example files and save to temporary working directory #  # check this folder tempdir() }"},{"path":"https://marce10.github.io/warbleR/reference/fixwavs.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for fix_wavs — fixwavs","title":"alternative name for fix_wavs — fixwavs","text":"alternative name fix_wavs","code":""},{"path":"https://marce10.github.io/warbleR/reference/fixwavs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for fix_wavs — fixwavs","text":"","code":"fixwavs(   checksels = NULL,   files = NULL,   samp.rate = NULL,   bit.depth = NULL,   path = NULL,   mono = FALSE )"},{"path":"https://marce10.github.io/warbleR/reference/fixwavs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for fix_wavs — fixwavs","text":"see fix_wavs documentation. fixwavs deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/frange.detec.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for freq_range_detec — frange.detec","title":"alternative name for freq_range_detec — frange.detec","text":"alternative name freq_range_detec","code":""},{"path":"https://marce10.github.io/warbleR/reference/frange.detec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for freq_range_detec — frange.detec","text":"","code":"frange.detec(   wave,   wl = 512,   fsmooth = 0.1,   threshold = 10,   dB.threshold = NULL,   wn = \"hanning\",   flim = NULL,   bp = NULL,   fast.spec = FALSE,   ovlp = 50,   pal = reverse.gray.colors.2,   widths = c(2, 1),   main = NULL,   plot = TRUE,   all.detec = FALSE )"},{"path":"https://marce10.github.io/warbleR/reference/frange.detec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for freq_range_detec — frange.detec","text":"see freq_range_detec documentation. frange.detec deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/frange.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for freq_range — frange","title":"alternative name for freq_range — frange","text":"alternative name freq_range","code":""},{"path":"https://marce10.github.io/warbleR/reference/frange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for freq_range — frange","text":"","code":"frange(   X,   wl = 512,   it = \"jpeg\",   line = TRUE,   fsmooth = 0.1,   threshold = 10,   dB.threshold = NULL,   wn = \"hanning\",   flim = NULL,   bp = NULL,   propwidth = FALSE,   xl = 1,   picsize = 1,   res = 100,   fast.spec = FALSE,   ovlp = 50,   pal = reverse.gray.colors.2,   parallel = 1,   widths = c(2, 1),   main = NULL,   img = TRUE,   mar = 0.05,   path = NULL,   pb = TRUE,   impute = FALSE )"},{"path":"https://marce10.github.io/warbleR/reference/frange.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for freq_range — frange","text":"see freq_range documentation. frange deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_DTW.html","id":null,"dir":"Reference","previous_headings":"","what":"Acoustic dissimilarity using dynamic time warping on dominant frequency contours — freq_DTW","title":"Acoustic dissimilarity using dynamic time warping on dominant frequency contours — freq_DTW","text":"freq_DTW calculates acoustic dissimilarity frequency contours using dynamic time warping. Internally applies dtwDist function dtw package.","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_DTW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acoustic dissimilarity using dynamic time warping on dominant frequency contours — freq_DTW","text":"","code":"freq_DTW(X = NULL, type = \"dominant\", wl = 512, wl.freq = 512, length.out = 20, wn = \"hanning\", ovlp = 70, bp = NULL, threshold = 15, threshold.time = NULL, threshold.freq = NULL, img = TRUE, parallel = 1, path = NULL, ts.df = NULL, img.suffix = \"dfDTW\", pb = TRUE, clip.edges = TRUE, window.type = \"none\", open.end = FALSE, scale = FALSE, frange.detec = FALSE,  fsmooth = 0.1, adjust.wl = TRUE, ...)"},{"path":"https://marce10.github.io/warbleR/reference/freq_DTW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acoustic dissimilarity using dynamic time warping on dominant frequency contours — freq_DTW","text":"X object class 'selection_table', 'extended_selection_table' data frame containing columns sound file name (sound.files), selection number (selec), start end time signal (start end). output auto_detec can used input data frame. type Character string determine type contour detected. Three options available, \"dominant\" (default), \"fundamental\" \"entropy\". wl numeric vector length 1 specifying window length spectrogram, default 512. wl.freq numeric vector length 1 specifying window length spectrogram measurements frequency spectrum. Default 512. Higher values provide accurate measurements. length.numeric vector length 1 giving number measurements frequency desired (length time series). wn Character vector length 1 specifying window name. Default \"hanning\". See function ftwindow options. ovlp Numeric vector length 1 specifying % overlap two consecutive windows, spectro. Default 70. bp numeric vector length 2 lower upper limits frequency bandpass filter (kHz). Default NULL. threshold amplitude threshold (%) frequency detection. Default 15. threshold.time amplitude threshold (%) time domain. Use frequency detection. NULL (default) 'threshold' value used. threshold.freq amplitude threshold (%) frequency domain. Use frequency range detection spectrum (see 'frange.detec'). NULL (default) 'threshold' value used. img Logical argument. FALSE, image files produced. Default TRUE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). path Character string containing directory path sound files located. NULL (default) current working directory used. ts.df Optional. Data frame frequency contour time series signals compared. provided \"X\" ignored. img.suffix character vector length 1 suffix (label) add end names image files. Default NULL. pb Logical argument control progress bar. Default TRUE. clip.edges Logical argument control whether edges (start end signal) amplitude values threshold detected removed. TRUE (default) edges excluded contours calculated remaining values. Note DTW applied missing values (e.. amplitude detected). window.type dtw windowing control parameter. Character: \"none\", \"itakura\", function (see dtw). open.end dtw control parameter. Performs open-ended alignments (see dtw). scale Logical. TRUE frequency values z-transformed using scale function, \"ignores\" differences absolute frequencies signals order focus comparison frequency contour, regardless pitch signals. Default TRUE. frange.detec DEPRECATED. fsmooth numeric vector length 1 smooth frequency spectrum mean sliding window (kHz) used frequency range detection (frange.detec = TRUE). help average amplitude \"hills\" minimize effect amplitude modulation. Default 0.1. adjust.wl Logical. TRUE 'wl' (window length) reset lower number samples selection number samples less 'wl'. Default TRUE. ... Additional arguments passed track_freq_contour customizing graphical output.","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_DTW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Acoustic dissimilarity using dynamic time warping on dominant frequency contours — freq_DTW","text":"matrix pairwise dissimilarity values. img FALSE also produces image files spectrograms signals listed input data frame showing location dominant frequencies.","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_DTW.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Acoustic dissimilarity using dynamic time warping on dominant frequency contours — freq_DTW","text":"function extracts dominant frequency values time series  calculates pairwise acoustic dissimilarity using dynamic time warping. function uses approx function interpolate values dominant  frequency  measures. 'img'  TRUE function also produces image files  spectrograms signals listed input data frame showing  location dominant frequencies.","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_DTW.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Acoustic dissimilarity using dynamic time warping on dominant frequency contours — freq_DTW","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/freq_DTW.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Acoustic dissimilarity using dynamic time warping on dominant frequency contours — freq_DTW","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_DTW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Acoustic dissimilarity using dynamic time warping on dominant frequency contours — freq_DTW","text":"","code":"{   # load data   data(list = c(\"Phae.long1\", \"Phae.long2\", \"lbh_selec_table\"))   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) # save sound files   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"))    # dominant frequency   freq_DTW(lbh_selec_table,     length.out = 30, flim = c(1, 12), bp = c(2, 9),     wl = 300, path = tempdir()   )    # fundamental frequency   freq_DTW(lbh_selec_table,     type = \"fundamental\", length.out = 30, flim = c(1, 12),     bp = c(2, 9), wl = 300, path = tempdir()   ) } #> measuring dominant frequency contours (step 1 of 2):  #>  #> Creating spectrograms overlaid with fundamental frequency measurements: #> calculating DTW distances (step 2 of 2, no progress bar): #> measuring dominant frequency contours (step 1 of 2):  #>  #> Creating spectrograms overlaid with fundamental frequency measurements: #> calculating DTW distances (step 2 of 2, no progress bar): #>                  Phae.long1.wav-1 Phae.long1.wav-2 Phae.long1.wav-3 #> Phae.long1.wav-1           0.0000           7.2749          11.4076 #> Phae.long1.wav-2           7.2749           0.0000          11.7859 #> Phae.long1.wav-3          11.4076          11.7859           0.0000 #> Phae.long2.wav-1          26.3797          29.0818          26.0659 #> Phae.long2.wav-2          29.8524          35.8034          28.6269 #> Phae.long3.wav-1          16.5051          16.5851          17.3272 #> Phae.long3.wav-2          15.9548          18.1529          17.8992 #> Phae.long3.wav-3          29.0127          30.7961          28.6865 #> Phae.long4.wav-1          39.5088          36.7239          41.3167 #> Phae.long4.wav-2          33.2126          32.4385          32.3663 #> Phae.long4.wav-3          30.8871          31.4867          31.1611 #>                  Phae.long2.wav-1 Phae.long2.wav-2 Phae.long3.wav-1 #> Phae.long1.wav-1          26.3797          29.8524          16.5051 #> Phae.long1.wav-2          29.0818          35.8034          16.5851 #> Phae.long1.wav-3          26.0659          28.6269          17.3272 #> Phae.long2.wav-1           0.0000          13.8155          14.6221 #> Phae.long2.wav-2          13.8155           0.0000          14.9198 #> Phae.long3.wav-1          14.6221          14.9198           0.0000 #> Phae.long3.wav-2          13.4849          12.4499           7.5000 #> Phae.long3.wav-3          13.7044          11.2937          10.9500 #> Phae.long4.wav-1          21.6722          28.5053          34.8696 #> Phae.long4.wav-2          24.2322          30.8459          32.4130 #> Phae.long4.wav-3          22.7040          32.1019          29.3637 #>                  Phae.long3.wav-2 Phae.long3.wav-3 Phae.long4.wav-1 #> Phae.long1.wav-1          15.9548          29.0127          39.5088 #> Phae.long1.wav-2          18.1529          30.7961          36.7239 #> Phae.long1.wav-3          17.8992          28.6865          41.3167 #> Phae.long2.wav-1          13.4849          13.7044          21.6722 #> Phae.long2.wav-2          12.4499          11.2937          28.5053 #> Phae.long3.wav-1           7.5000          10.9500          34.8696 #> Phae.long3.wav-2           0.0000          10.5750          29.0201 #> Phae.long3.wav-3          10.5750           0.0000          24.2434 #> Phae.long4.wav-1          29.0201          24.2434           0.0000 #> Phae.long4.wav-2          28.5852          25.4327           9.6464 #> Phae.long4.wav-3          25.8487          26.6069          15.3288 #>                  Phae.long4.wav-2 Phae.long4.wav-3 #> Phae.long1.wav-1          33.2126          30.8871 #> Phae.long1.wav-2          32.4385          31.4867 #> Phae.long1.wav-3          32.3663          31.1611 #> Phae.long2.wav-1          24.2322          22.7040 #> Phae.long2.wav-2          30.8459          32.1019 #> Phae.long3.wav-1          32.4130          29.3637 #> Phae.long3.wav-2          28.5852          25.8487 #> Phae.long3.wav-3          25.4327          26.6069 #> Phae.long4.wav-1           9.6464          15.3288 #> Phae.long4.wav-2           0.0000           8.3745 #> Phae.long4.wav-3           8.3745           0.0000"},{"path":"https://marce10.github.io/warbleR/reference/freq_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect frequency range iteratively — freq_range","title":"Detect frequency range iteratively — freq_range","text":"freq_range detect frequency range iteratively signals selection table.","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect frequency range iteratively — freq_range","text":"","code":"freq_range(X, wl = 512, it = \"jpeg\", line = TRUE, fsmooth = 0.1, threshold = 10, dB.threshold = NULL, wn = \"hanning\", flim = NULL, bp = NULL, propwidth = FALSE, xl = 1, picsize = 1, res = 100, fast.spec = FALSE, ovlp = 50, pal = reverse.gray.colors.2, parallel = 1, widths = c(2, 1), main = NULL, img = TRUE, mar = 0.05, path = NULL, pb = TRUE, impute = FALSE)"},{"path":"https://marce10.github.io/warbleR/reference/freq_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect frequency range iteratively — freq_range","text":"X object class 'selection_table', 'extended_selection_table' data frame following columns: 1) \"sound.files\": name sound files, 2) \"sel\": number selections, 3) \"start\": start time selections, 4) \"end\": end time selections. output auto_detec can also used input data frame. wl numeric vector length 1 specifying window length spectrogram, default 512. used calculating frequency spectrum (using meanspec) producing spectrogram (using spectro, img = TRUE). character vector length 1 giving image type used. Currently \"tiff\" \"jpeg\" admitted. Default \"jpeg\". line Logical argument add red lines (box bottom.freq top.freq columns provided) start end times selection. Default TRUE. fsmooth numeric vector length 1 smooth frequency spectrum mean sliding window kHz. help average amplitude \"hills\" minimize effect amplitude modulation. Default 0.1. threshold Amplitude threshold (%) frequency range detection. frequency range (cumulative amplitude) represented percentage (100% = highest amplitude). Default 10. Ignored 'dB.threshold' supplied. dB.threshold Amplitude threshold frequency range detection (dB). value indicates decrease dB relation highest amplitude (e.g. peak frequency) range detected. instance dB.threshold = 20 means amplitude threshold 20 dB highest amplitude. provided 'threshold' ignored. Default NULL. Note power spectrum normalized using dB scale, looks different one produced dB scale used (e.g. using 'threshold' argument). wn Character vector length 1 specifying window name. Default \"hanning\". See function ftwindow options. used calculating frequency spectrum (using meanspec) producing spectrogram (using spectro, img = TRUE). flim numeric vector length 2 frequency limit spectrogram (kHz), spectro. Default NULL. bp numeric vector length 2 lower upper limits frequency bandpass filter (kHz) \"frange\" indicate values 'bottom.freq' 'top.freq' columns used bandpass limits. Default c(0, 22). propwidth Logical argument scale width spectrogram proportionally duration selected call. Default FALSE. xl Numeric vector length 1. constant scale spectrogram width. Default 1. picsize Numeric argument length 1. Controls relative size spectrogram. Default 1. res Numeric argument length 1. Controls image resolution. Default 100 (faster) although 300 - 400 recommended publication/ presentation quality. fast.spec Logical. TRUE image function used internally create spectrograms, substantially increases performance (much faster), although options become unavailable, collevels, sc (amplitude scale). option indicated signals high background noise levels. Palette colors gray.1, gray.2, gray.3, topo.1 rainbow.1 (imported package monitoR) seem work better 'fast.spec' spectrograms. Palette colors gray.1, gray.2, gray.3 offer decreasing darkness levels. ovlp Numeric vector length 1 specifying % overlap two consecutive windows, spectro. Default 50. used calculating frequency spectrum (using meanspec) producing spectrogram (using spectro, img = TRUE). pal Color palette function spectrogram. Default reverse.gray.colors.2. See spectro palettes. Palettes gray.2 may work better fast.spec = TRUE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). widths Numeric vector length 2 control relative widths spectro (first element) spectrum (second element). main Character vector length 1 specifying img title. Default NULL. img Logical. Controls whether plot produced. Default TRUE. mar Numeric vector length 1. Specifies margins adjacent selections set spectrogram limits. Default 0.05. path Character string containing directory path sound files located. NULL (default) current working directory used. pb Logical argument control progress bar messages. Default TRUE. impute Logical. TRUE missing range values imputed corresponding bandpass value (hence ignored bp = NULL). Default FALSE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect frequency range iteratively — freq_range","text":"original data frame additional 2 columns low high frequency values. plot produced working directory img = TRUE (see details).","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_range.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect frequency range iteratively — freq_range","text":"functions aims automatize detection frequency ranges. frequency range calculated follows: bottom.freq = start frequency amplitude 'hill' containing highest amplitude given threshold. top.freq = end frequency amplitude 'hill' containing highest amplitude given threshold. img = TRUE graph including spectrogram frequency spectrum   generated selection (saved image file working directory). graph include gray areas frequency ranges excluded bandpass ('bp' argument), dotted lines highlighting detected range. function freq_range_detec used internally.","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_range.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect frequency range iteratively — freq_range","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/freq_range.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect frequency range iteratively — freq_range","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect frequency range iteratively — freq_range","text":"","code":"{   data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\"))   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"))   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))   writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))   writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))    freq_range(     X = lbh_selec_table, wl = 112, fsmooth = 1, threshold = 13, widths = c(4, 1),     img = TRUE, pb = TRUE, it = \"tiff\", line = TRUE, mar = 0.1, bp = c(1, 10.5),     flim = c(0, 11), path = tempdir()   ) } #>       sound.files channel selec     start       end bottom.freq  top.freq #> 1  Phae.long1.wav       1     1 1.1693549 1.3423884    3.149291  8.782169 #> 2  Phae.long1.wav       1     2 2.1584085 2.3214565    3.149291  8.782169 #> 3  Phae.long1.wav       1     3 0.3433366 0.5182553    2.932642  8.998818 #> 4  Phae.long2.wav       1     1 0.1595983 0.2921692    3.365940 10.298713 #> 5  Phae.long2.wav       1     2 1.4570585 1.5832087    4.015888  8.998818 #> 6  Phae.long3.wav       1     1 0.6265520 0.7577715    4.882484  9.215467 #> 7  Phae.long3.wav       1     2 1.9742132 2.1043921    4.665835  8.998818 #> 8  Phae.long3.wav       1     3 0.1233643 0.2545812    4.665835  9.215467 #> 9  Phae.long4.wav       1     1 1.5168116 1.6622365    2.715993  8.998818 #> 10 Phae.long4.wav       1     2 2.9326920 3.0768784    2.715993  9.432117 #> 11 Phae.long4.wav       1     3 0.1453977 0.2904966    2.499343  8.998818"},{"path":"https://marce10.github.io/warbleR/reference/freq_range_detec.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect frequency range on wave objects — freq_range_detec","title":"Detect frequency range on wave objects — freq_range_detec","text":"freq_range_detec detects frequency range acoustic signals wave objects.","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_range_detec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect frequency range on wave objects — freq_range_detec","text":"","code":"freq_range_detec(wave, wl = 512, fsmooth = 0.1, threshold = 10, dB.threshold = NULL, wn = \"hanning\", flim = NULL, bp = NULL, fast.spec = FALSE, ovlp = 50, pal = reverse.gray.colors.2,  widths = c(2, 1), main = NULL, plot = TRUE, all.detec = FALSE)"},{"path":"https://marce10.github.io/warbleR/reference/freq_range_detec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect frequency range on wave objects — freq_range_detec","text":"wave 'wave' object produced  readWave similar functions. wl numeric vector length 1 specifying window length spectrogram, default 512. used calculating frequency spectrum (using meanspec) producing spectrogram (using spectro, plot = TRUE). fsmooth numeric vector length 1 smooth frequency spectrum mean sliding window kHz. help average amplitude \"hills\" minimize effect amplitude modulation. Default 0.1. threshold Amplitude threshold (%) frequency range detection. frequency range (cumulative amplitude) represented percentage (100% = highest amplitude). Default 10. Ignored 'dB.threshold' supplied. dB.threshold Amplitude threshold frequency range detection (dB). value indicates decrease dB relation highest amplitude (e.g. peak frequency) range detected. instance dB.threshold = 20 means amplitude threshold 20 dB highest amplitude. provided 'threshold' ignored. Default NULL. Note power spectrum normalized using dB scale, looks different one produced dB scale used (e.g. using 'threshold' argument). wn Character vector length 1 specifying window name. Default \"hanning\". See function ftwindow options. used calculating frequency spectrum (using meanspec) producing spectrogram (using spectro, plot = TRUE). flim numeric vector length 2 frequency limit spectrogram (kHz), spectro. Default NULL. bp numeric vector length 2 lower upper limits frequency bandpass filter (kHz) \"frange\" indicate values 'bottom.freq' 'top.freq' columns used bandpass limits. Default NULL. fast.spec Logical. TRUE image function used internally create spectrograms, substantially increases performance (much faster), although options become unavailable, collevels, sc (amplitude scale). option indicated signals high background noise levels. Palette colors gray.1, gray.2, gray.3, topo.1 rainbow.1 (imported package monitoR) seem work better 'fast.spec' spectrograms. Palette colors gray.1, gray.2, gray.3 offer decreasing darkness levels. ovlp Numeric vector length 1 specifying % overlap two consecutive windows, spectro. Default 50. used calculating frequency spectrum (using meanspec) producing spectrogram (using spectro, plot = TRUE). pal Color palette function spectrogram. Default reverse.gray.colors.2. See spectro palettes. Palettes gray.2 may work better fast.spec = TRUE. widths Numeric vector length 2 control relative widths spectro (first element) spectrum (second element). main Character vector length 1 specifying plot title. Default NULL. plot Logical. Controls whether image file produced selection (working directory). Default TRUE. .detec Logical. TRUE returns start end detected amplitude \"hills\". Otherwise range returned. Default FALSE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_range_detec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect frequency range on wave objects — freq_range_detec","text":"data frame 2 columns low high frequency values. plot produced (graphic device) plot = TRUE (see details).","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_range_detec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect frequency range on wave objects — freq_range_detec","text":"functions aims automatize detection frequency ranges. frequency range calculated follows: bottom.freq = start frequency amplitude 'hill' containing highest amplitude given threshold. top.freq = end frequency amplitude 'hill' containing highest amplitude given threshold. plot = TRUE graph including spectrogram frequency spectrum   produced graphic device. graph include gray areas frequency ranges excluded bandpass ('bp' argument), dotted lines highlighting detected range.","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_range_detec.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect frequency range on wave objects — freq_range_detec","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/freq_range_detec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect frequency range on wave objects — freq_range_detec","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_range_detec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect frequency range on wave objects — freq_range_detec","text":"","code":"{   data(tico)   freq_range_detec(     wave = tico, wl = 512, fsmooth = 0.01, threshold = 1, bp = c(2, 8),     widths = c(4, 2)   )    data(sheep)   freq_range_detec(     wave = sheep, wl = 512, fsmooth = 0.2, threshold = 50, bp = c(0.3, 1),     flim = c(0, 1.5), pal = reverse.heat.colors, main = \"sheep\"   ) }   #>   bottom.freq  top.freq #> 1    0.467689 0.6808449"},{"path":"https://marce10.github.io/warbleR/reference/freq_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract frequency contours as time series — freq_ts","title":"Extract frequency contours as time series — freq_ts","text":"freq_ts extracts fundamental frequency values time series.","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract frequency contours as time series — freq_ts","text":"","code":"freq_ts(X, type = \"dominant\", wl = 512, length.out = 20, wn = \"hanning\", ovlp = 70, bp = NULL, threshold = 15, img = TRUE, parallel = 1, path = NULL, img.suffix = \"frequency.ts\", pb = TRUE, clip.edges = FALSE, leglab = \"frequency.ts\", track.harm = FALSE, raw.contour = FALSE, adjust.wl = TRUE, ff.method = \"seewave\", entropy.range = c(2, 10), ...)"},{"path":"https://marce10.github.io/warbleR/reference/freq_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract frequency contours as time series — freq_ts","text":"X object class 'selection_table', 'extended_selection_table' data frame containing columns sound file name (sound.files), selection number (selec), start end time signal (start end). type Character string determine type contour detected. Three options available, \"dominant\" (default), \"fundamental\" \"entropy\". wl numeric vector length 1 specifying window length spectrogram, default 512. length.numeric vector length 1 giving number measurements fundamental frequency desired (length time series). wn Character vector length 1 specifying window name. Default \"hanning\". See function ftwindow options. ovlp Numeric vector length 1 specifying % overlap two consecutive windows, spectro. Default 70. bp numeric vector length 2 lower upper limits frequency bandpass filter (kHz). Default NULL. threshold amplitude threshold (%) fundamental frequency detection. Default 15. img Logical argument. FALSE, image files produced. Default TRUE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). path Character string containing directory path sound files located. NULL (default) current working directory used. img.suffix character vector length 1 suffix (label) add end names image files. pb Logical argument control progress bar. Default TRUE. clip.edges Logical argument control whether edges (start end signal) amplitude values threshold detected removed. TRUE edges excluded signal contour calculated remaining values. Default FALSE. #' @param leglab character vector length 1 2 containing label(s) frequency contour legend output image. leglab character vector length 1 2 containing label(s) frequency contour legend output image. track.harm Logical. TRUE warbleR's track_harmonic function used track dominant frequency contours. Otherwise seewave's dfreq used default. Default FALSE. raw.contour Logical. TRUE list original contours (.e. without interpolating values make contours equal length) returned (images produced). adjust.wl Logical. TRUE 'wl' (window length) reset lower number samples selection number samples less 'wl'. Default TRUE. Used dominant frequency detection. ff.method Character. Selects method used detect fundamental frequency contours. Either 'tuneR' (using FF) 'seewave' (using fund). Default 'seewave'. 'tuneR' performs faster (seems accurate) 'seewave'. entropy.range Numeric vector length 2. Range frequency display entropy values spectrogram (img = TRUE). Default c(2, 10). Negative values can used order stretch range. ... Additional arguments passed track_freq_contour. customizing graphical output.","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract frequency contours as time series — freq_ts","text":"data frame fundamental frequency values measured across signals. img TRUE also produces image files spectrograms signals listed input data frame showing location fundamental frequencies (see track_freq_contour description details).","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_ts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract frequency contours as time series — freq_ts","text":"function extracts dominant frequency, fundamental frequency spectral entropy contours time series. function uses approx function interpolate values frequency measures. frequencies amplitude threshold (dominant fundamental) beginning end  signals NAs generated. hand, frequencies  amplitude theshold signal segments amplitude  detected values adjacent segments interpolated  fill missing values (e.g. NAs detected amplitude segments).","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/freq_ts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract frequency contours as time series — freq_ts","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/freq_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract frequency contours as time series — freq_ts","text":"","code":"{ #load data data(list = c(\"Phae.long1\", \"Phae.long2\",\"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) #save sound files writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) #save sound files  # run function with dominant frequency freq_ts(X = lbh_selec_table, length.out = 30, flim = c(1, 12), bp = c(2, 9), wl = 300, pb = FALSE, path = tempdir())  # note a NA in the row 4 column 3 (dfreq-1) # this can be removed by clipping edges (removing NAs at the start and/or end # when no freq was detected)  freq_ts(X = lbh_selec_table, length.out = 30, flim = c(1, 12), bp = c(2, 9), wl = 300, pb = FALSE, clip.edges = TRUE, path = tempdir())  # run function with fundamental frequency freq_ts(lbh_selec_table, type = \"fundamental\", length.out = 50, flim = c(1, 12),  bp = c(2, 9), wl = 300, path = tempdir())  # run function with spectral entropy # without clip edges freq_ts(X = lbh_selec_table, type = \"entropy\", threshold = 10, clip.edges = FALSE, length.out = 10, sp.en.range = c(-25, 10), path = tempdir(),  img = FALSE)  # with clip edges and length.out 10 freq_ts(X = lbh_selec_table, type = \"entropy\", threshold = 10, bp = c(2, 12), clip.edges = TRUE, length.out = 10, path = tempdir(), img = FALSE) } #> Creating spectrograms overlaid with fundamental frequency measurements: #> Measuring fundamental frequency: #> Measuring fundamental frequency: #>       sound.files selec ffreq-1 ffreq-2 ffreq-3 ffreq-4 ffreq-5 ffreq-6 ffreq-7 #> 1  Phae.long1.wav     1  0.8954  0.8428  0.8594  0.8910  0.8402  0.8801  0.8608 #> 2  Phae.long1.wav     2  0.9015  0.8020  0.8867  0.9032  0.8525  0.8418  0.9016 #> 3  Phae.long1.wav     3  0.9453  0.8812  0.8756  0.9307  0.8591  0.8781  0.9305 #> 4  Phae.long2.wav     1  0.9292  0.8915  0.9211  0.9203  0.8966  0.8790  0.8832 #> 5  Phae.long2.wav     2  0.9200  0.9000  0.9225  0.9245  0.8980  0.8786  0.8748 #> 6  Phae.long3.wav     1  0.9317  0.9047  0.8522  0.8797  0.8587  0.8638  0.8494 #> 7  Phae.long3.wav     2  0.9325  0.9040  0.8836  0.8730  0.8540  0.8670  0.8633 #> 8  Phae.long3.wav     3  0.9161  0.9012  0.8321  0.8720  0.8539  0.8622  0.8657 #> 9  Phae.long4.wav     1  0.9245  0.8420  0.8154  0.8248  0.8346  0.8837  0.8812 #> 10 Phae.long4.wav     2  0.9309  0.8351  0.8344  0.8342  0.8491  0.9000  0.8446 #> 11 Phae.long4.wav     3  0.9489  0.8281  0.8178  0.8389  0.8546  0.8864  0.8680 #>    ffreq-8 ffreq-9 ffreq-10 #> 1   0.7787  0.8262   0.9335 #> 2   0.7977  0.8135   0.9227 #> 3   0.7821  0.8256   0.8622 #> 4   0.8718  0.8937   0.9275 #> 5   0.8774  0.8726   0.9095 #> 6   0.8543  0.8618   0.9335 #> 7   0.8450  0.8472   0.8607 #> 8   0.8406  0.8502   0.8941 #> 9   0.7762  0.8041   0.9012 #> 10  0.7699  0.8185   0.9032 #> 11  0.8041  0.8307   0.9120"},{"path":"https://marce10.github.io/warbleR/reference/full_spectrogram2pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"full_spectrogram2pdf combines full_spectrograms images in .jpeg format to a single pdf file. — full_spectrogram2pdf","title":"full_spectrogram2pdf combines full_spectrograms images in .jpeg format to a single pdf file. — full_spectrogram2pdf","text":"full_spectrogram2pdf combines full_spectrograms images .jpeg format single pdf file.","code":""},{"path":"https://marce10.github.io/warbleR/reference/full_spectrogram2pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"full_spectrogram2pdf combines full_spectrograms images in .jpeg format to a single pdf file. — full_spectrogram2pdf","text":"","code":"full_spectrogram2pdf(keep.img = TRUE, overwrite = FALSE, parallel = 1, path = NULL, pb = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/full_spectrogram2pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"full_spectrogram2pdf combines full_spectrograms images in .jpeg format to a single pdf file. — full_spectrogram2pdf","text":"keep.img Logical argument. Indicates whether jpeg files kept (default) remove. (including sound file page number) magnified. Default 1. overwrite Logical argument. TRUE jpeg pdf produced code rerun. FALSE ones missing produced. Default FALSE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). path Character string containing directory path sound files located. NULL (default) current working directory used. pb Logical argument control progress bar. Default TRUE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/full_spectrogram2pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"full_spectrogram2pdf combines full_spectrograms images in .jpeg format to a single pdf file. — full_spectrogram2pdf","text":"Image files pdf format spectrograms entire sound files working directory.","code":""},{"path":"https://marce10.github.io/warbleR/reference/full_spectrogram2pdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"full_spectrogram2pdf combines full_spectrograms images in .jpeg format to a single pdf file. — full_spectrogram2pdf","text":"function combines  spectrograms complete sound files full_spectrograms function single pdf (sound file).","code":""},{"path":"https://marce10.github.io/warbleR/reference/full_spectrogram2pdf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"full_spectrogram2pdf combines full_spectrograms images in .jpeg format to a single pdf file. — full_spectrogram2pdf","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/full_spectrogram2pdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"full_spectrogram2pdf combines full_spectrograms images in .jpeg format to a single pdf file. — full_spectrogram2pdf","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/full_spectrogram2pdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"full_spectrogram2pdf combines full_spectrograms images in .jpeg format to a single pdf file. — full_spectrogram2pdf","text":"","code":"if (FALSE) { # save sound file examples data(list = c(\"Phae.long1\", \"Phae.long2\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))  full_spectrograms(   sxrow = 2, rows = 8, pal = reverse.heat.colors, wl = 300,   it = \"jpeg\", path = tempdir() )  # now create single pdf removing jpeg full_spectrogram2pdf(keep.img = FALSE, path = tempdir())  # check this floder tempdir() }"},{"path":"https://marce10.github.io/warbleR/reference/full_spectrograms.html","id":null,"dir":"Reference","previous_headings":"","what":"Create long spectrograms of entire sound files — full_spectrograms","title":"Create long spectrograms of entire sound files — full_spectrograms","text":"full_spectrograms produces image files spectrograms entire sound files split multiple   rows.","code":""},{"path":"https://marce10.github.io/warbleR/reference/full_spectrograms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create long spectrograms of entire sound files — full_spectrograms","text":"","code":"full_spectrograms(X = NULL, flim = NULL, sxrow = 5, rows = 10, collevels = seq(-40, 0, 1), ovlp = 50, parallel = 1, wl = 512, gr = FALSE, pal = reverse.gray.colors.2, cex = 1, it = \"jpeg\", flist = NULL, overwrite = TRUE, path = NULL, pb = TRUE, fast.spec = FALSE, labels = \"selec\",  horizontal = FALSE, song = NULL, suffix = NULL, dest.path = NULL, ...)"},{"path":"https://marce10.github.io/warbleR/reference/full_spectrograms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create long spectrograms of entire sound files — full_spectrograms","text":"X 'selection_table' object data frame columns sound file name (sound.files), selection number (selec), start end time signal (start end). given, transparent box  plotted around selection selections labeled selection number (selection comment, available). Default NULL. Alternatively, can also take output cross_correlation auto_detec ('output' 'list', see cross_correlation auto_detec). supplied secondary row displayed spectrogram showing detection (either cross-correlation scores wave envelopes) values across time. flim numeric vector length 2 indicating highest lowest frequency limits (kHz) spectrogram, spectro. Default NULL. Alternatively, character vector similar c(\"-1\", \"1\") first number value added minimum bottom frequency 'X' second value added maximum top frequency 'X'. computed independently sound file frequency limit better fits frequency range annotated signals. useful plotting annotated spectrograms marked differences frequency range annotations among sond files. Note top frequency adjustment ignored 'song' labels included (argument 'song'). sxrow numeric vector length 1. Specifies seconds spectrogram per row. Default 5. rows numeric vector length 1. Specifies number rows per image file. Default 10. collevels numeric vector length 3. Specifies levels partition amplitude range spectrogram (dB). levels higher resolution spectrogram. Default seq(-40, 0, 1). ovlp Numeric vector length 1 specifying % overlap two consecutive windows, spectro. Default 50. High values ovlp slow function produce accurate selection limits (X provided). parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). wl numeric vector length 1 specifying window length spectrogram, default 512. gr Logical argument add grid spectrogram. Default FALSE. pal Color palette function spectrogram. Default reverse.gray.colors.2. See spectro palettes. cex numeric vector length 1 giving amount text (including sound file page number) magnified. Default 1. character vector length 1 giving image type used. Currently \"tiff\" \"jpeg\" admitted. Default \"jpeg\". flist character vector factor indicating subset files analyzed. Ignored X provided. overwrite Logical argument. TRUE selections analyzed code rerun. FALSE selections image file working directory analyzed. Default FALSE. path Character string containing directory path sound files located. NULL (default) current working directory used. pb Logical argument control progress bar. Default TRUE. fast.spec Logical. TRUE image function used internally create spectrograms, substantially increases performance (much faster), although options become unavailable, collevels, sc (amplitude scale). option indicated signals high background noise levels. Palette colors gray.1, gray.2, gray.3, topo.1 rainbow.1 (imported package monitoR) seem work better 'fast' spectrograms. Palette colors gray.1, gray.2, gray.3 offer decreasing darkness levels. labels Character string name column(s) selection labeling. Default 'selec'. Set NULL remove labels. horizontal Logical. Controls images produced horizontal vertical pages. Default FALSE. song Character string name column used label higher organization level song (similar 'song_colm' song_analysis). supplied lines selections belonging 'song' plotted. Ignored 'X' provided. suffix Character vector length 1. Suffix output image file (added end default file name). Default NULL. dest.path Character string containing directory path image files saved. NULL (default) folder containing sound files used instead. ... Additional arguments image formatting. accepts 'width', 'height' (overwrite 'horizontal') 'res' png.","code":""},{"path":"https://marce10.github.io/warbleR/reference/full_spectrograms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create long spectrograms of entire sound files — full_spectrograms","text":"image files spectrograms entire sound files working directory. Multiple pages can returned, depending length sound file.","code":""},{"path":"https://marce10.github.io/warbleR/reference/full_spectrograms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create long spectrograms of entire sound files — full_spectrograms","text":"function creates spectrograms complete sound files, printing   name sound files \"page\" number (p1-p2...) upper   right corner image files. 'X'   supplied, function delimits labels selections.   function aims facilitate visual inspection multiple files well visual classification   vocalization units analysis animal vocal sequences.","code":""},{"path":"https://marce10.github.io/warbleR/reference/full_spectrograms.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create long spectrograms of entire sound files — full_spectrograms","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/full_spectrograms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create long spectrograms of entire sound files — full_spectrograms","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/full_spectrograms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create long spectrograms of entire sound files — full_spectrograms","text":"","code":"if (FALSE) { # save sound file examples to temporary working directory data(list = c(\"Phae.long1\", \"Phae.long2\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))  full_spectrograms(   sxrow = 2, rows = 8, pal = reverse.heat.colors, wl = 300,   path = tempdir() )  # including selections full_spectrograms(   sxrow = 2, rows = 8, X = lbh_selec_table,   pal = reverse.heat.colors, overwrite = TRUE, wl = 300, path = tempdir() )  # check this floder # tempdir() }"},{"path":"https://marce10.github.io/warbleR/reference/gaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Gap duration — gaps","title":"Gap duration — gaps","text":"gaps measures gap duration","code":""},{"path":"https://marce10.github.io/warbleR/reference/gaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gap duration — gaps","text":"","code":"gaps(X = NULL, by = \"sound.files\", parallel = 1, pb = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/gaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gap duration — gaps","text":"X 'selection_table', 'extended_selection_table' (created '.song') data frame following columns: 1) \"sound.files\": name sound files, 2) \"selec\": number selections, 3) \"start\": start time selections, 4) \"end\": end time selections. Character vector column names. Controls levels gaps measured. \"sound.files\" must always included. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar messages. Default TRUE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/gaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gap duration — gaps","text":"data frame identical supplied 'X', additional column ('gaps') duration time interval selections.","code":""},{"path":"https://marce10.github.io/warbleR/reference/gaps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gap duration — gaps","text":"function measures time intervals (.e. gaps) selections.  gap given selection calculated time interval selection immediately . Hence, gap last selection sound file (level determined '' argument). Note sound files required.","code":""},{"path":"https://marce10.github.io/warbleR/reference/gaps.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gap duration — gaps","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/gaps.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gap duration — gaps","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/gaps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gap duration — gaps","text":"","code":"{ # get warbleR sound file examples data(list = \"lbh_selec_table\")  # get gaps gaps(X = lbh_selec_table) } #>       sound.files channel selec     start       end bottom.freq  top.freq #> 1  Phae.long1.wav       1     1 1.1693549 1.3423884    2.220105  8.604378 #> 2  Phae.long1.wav       1     2 2.1584085 2.3214565    2.169437  8.807053 #> 3  Phae.long1.wav       1     3 0.3433366 0.5182553    2.218294  8.756604 #> 4  Phae.long2.wav       1     1 0.1595983 0.2921692    2.316862  8.822316 #> 5  Phae.long2.wav       1     2 1.4570585 1.5832087    2.284006  8.888027 #> 6  Phae.long3.wav       1     1 0.6265520 0.7577715    3.006834  8.822316 #> 7  Phae.long3.wav       1     2 1.9742132 2.1043921    2.776843  8.888027 #> 8  Phae.long3.wav       1     3 0.1233643 0.2545812    2.316862  9.315153 #> 9  Phae.long4.wav       1     1 1.5168116 1.6622365    2.513997  9.216586 #> 10 Phae.long4.wav       1     2 2.9326920 3.0768784    2.579708 10.235116 #> 11 Phae.long4.wav       1     3 0.1453977 0.2904966    2.579708  9.742279 #>         gaps #> 1  1.1521016 #> 2         NA #> 3  0.9990518 #> 4  1.4236104 #> 5         NA #> 6  1.4778402 #> 7         NA #> 8  0.6344072 #> 9  1.5600668 #> 10        NA #> 11 1.5168388"},{"path":"https://marce10.github.io/warbleR/reference/image_to_wave.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert images into wave objects — image_to_wave","title":"Convert images into wave objects — image_to_wave","text":"image_to_wave converts images 'png' format wave objects using inverse Fourier transformation","code":""},{"path":"https://marce10.github.io/warbleR/reference/image_to_wave.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert images into wave objects — image_to_wave","text":"","code":"image_to_wave(file, duration = 1, samp.rate = 44.1, bit.depth = 16, flim = c(0, samp.rate / 2), plot = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/image_to_wave.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert images into wave objects — image_to_wave","text":"file Character name image file converted. File must 'png' format. duration duration output wave object (s). samp.rate Numeric vector length 1 indicating sampling rate output wave object (kHz). Default 44.1. bit.depth Numeric vector length 1 dynamic interval (.e. bit depth) output files. Default 16. flim Numeric vector length 2 indicating highest lowest frequency limits (kHz) image located. Default c(0, samp.rate / 2). plot Logical argument control image plotted imported R.","code":""},{"path":"https://marce10.github.io/warbleR/reference/image_to_wave.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert images into wave objects — image_to_wave","text":"single wave object.","code":""},{"path":"https://marce10.github.io/warbleR/reference/image_to_wave.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert images into wave objects — image_to_wave","text":"function converts images 'png' format wave objects using inverse Fourier transformation.","code":""},{"path":"https://marce10.github.io/warbleR/reference/image_to_wave.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert images into wave objects — image_to_wave","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/reference/image_to_wave.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert images into wave objects — image_to_wave","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/image_to_wave.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert images into wave objects — image_to_wave","text":"","code":"# \\donttest{ ### create image with text to use in the spectrogram # remove margins of plot par(mar = rep(0, 4))  # empty plot plot(0, type = \"n\", axes = FALSE, ann = FALSE, xlim = c(0, 1), ylim = c(0, 1))  # text to include text <- \" warbleR \"  # add text text(x = 0.5, y = 0.5, labels = text, cex = 11, font = 1)   # save image in temporary directory dev2bitmap(file.path(tempdir(), \"temp-img.png\"), type = \"pngmono\", res = 30)  # read it wv <- image_to_wave(file = file.path(tempdir(), \"temp-img.png\"), plot = TRUE, flim = c(1, 12))   # output wave object # wv  ## plot it # reset margins par(mar = c(5, 4, 4, 2) + 0.1)  # plot spectrogram # spectro(wave = wv, scale = FALSE, collevels = seq(-30, 0, 5), # palette = reverse.terrain.colors, ovlp = 90, grid = FALSE, flim = c(2, 11)) # }"},{"path":"https://marce10.github.io/warbleR/reference/inflections.html","id":null,"dir":"Reference","previous_headings":"","what":"Count number of inflections in a frequency contour — inflections","title":"Count number of inflections in a frequency contour — inflections","text":"inflections counts number inflections frequency contour (time series)","code":""},{"path":"https://marce10.github.io/warbleR/reference/inflections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count number of inflections in a frequency contour — inflections","text":"","code":"inflections(X = NULL, parallel = 1, pb = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/inflections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count number of inflections in a frequency contour — inflections","text":"X data frame columns \"sound.files\" (sound file name), \"selec\" (unique identifier selection) columns frequency values contours. columns included. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar messages. Default TRUE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/inflections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count number of inflections in a frequency contour — inflections","text":"data frame 3 columns: \"sound.files\", \"selec\" \"infls\" (number inflections).","code":""},{"path":"https://marce10.github.io/warbleR/reference/inflections.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count number of inflections in a frequency contour — inflections","text":"function counts number inflections frequency contour.","code":""},{"path":"https://marce10.github.io/warbleR/reference/inflections.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Count number of inflections in a frequency contour — inflections","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/inflections.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Count number of inflections in a frequency contour — inflections","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/inflections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count number of inflections in a frequency contour — inflections","text":"","code":"{ # get warbleR sound file examples data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))  # measure frequency contours dom.freq.ts <- freq_ts(X = lbh_selec_table, path = tempdir())  # get number of inflections inflections(X = dom.freq.ts) } #> Creating spectrograms overlaid with fundamental frequency measurements: #>       sound.files selec inflections #> 1  Phae.long1.wav     1           6 #> 2  Phae.long1.wav     2           7 #> 3  Phae.long1.wav     3           7 #> 4  Phae.long2.wav     1           9 #> 5  Phae.long2.wav     2           6 #> 6  Phae.long3.wav     1           9 #> 7  Phae.long3.wav     2           5 #> 8  Phae.long3.wav     3           6 #> 9  Phae.long4.wav     1           3 #> 10 Phae.long4.wav     2           3 #> 11 Phae.long4.wav     3           3"},{"path":"https://marce10.github.io/warbleR/reference/info_sound_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sound file parameter information — info_sound_files","title":"Get sound file parameter information — info_sound_files","text":"info_sound_files wrapper selection_table returns sound file information","code":""},{"path":"https://marce10.github.io/warbleR/reference/info_sound_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sound file parameter information — info_sound_files","text":"","code":"info_sound_files(path = NULL, parallel = 1, pb = TRUE, skip.error = FALSE, file.format = \"\\\\.wav$|\\\\.wac$|\\\\.mp3$|\\\\.flac$\")"},{"path":"https://marce10.github.io/warbleR/reference/info_sound_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sound file parameter information — info_sound_files","text":"path Character string containing directory path sound files located. NULL (default) current working directory used. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar messages. Default TRUE. skip.error Logical control errors omitted. , files read excluded name printed console. Default FALSE, return error files problematic. file.format Character string format sound files. default sound file formats supported warbleR included (\"\\\\.wav$|\\\\.wac$|\\\\.mp3$|\\\\.flac$\"). Note several formats can included using regular expression syntax grep. instance \"\\\\.wav$|\\\\.mp3$\" include .wav .mp3 files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/info_sound_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sound file parameter information — info_sound_files","text":"data frame descriptive information sound files working directory ('path'). See \"details\".","code":""},{"path":"https://marce10.github.io/warbleR/reference/info_sound_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get sound file parameter information — info_sound_files","text":"function wrapper selection_table returns data frame following descriptive parameters sound file working directory ('path'): duration: duration selection seconds sample.rate: sampling rate kHz channels: number channels bits: bit depth wav.size: sound file size MB samples: number samples sound file","code":""},{"path":"https://marce10.github.io/warbleR/reference/info_sound_files.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get sound file parameter information — info_sound_files","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/info_sound_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get sound file parameter information — info_sound_files","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/info_sound_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sound file parameter information — info_sound_files","text":"","code":"{ data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))  #get info info_sound_files(path = tempdir()) } #>         sound.files  duration sample.rate channels bits wav.size samples #> 1  Phae.long1-1.wav 0.2730667        22.5        1   16 0.012332    6144 #> 2  Phae.long1-2.wav 0.2630667        22.5        1   16 0.011882    5919 #> 3  Phae.long1-3.wav 0.2749333        22.5        1   16 0.012416    6186 #> 4    Phae.long1.wav 2.5000444        22.5        1   16 0.112582   56251 #> 5  Phae.long2-1.wav 0.2325778        22.5        1   16 0.010510    5233 #> 6  Phae.long2-2.wav 0.2261333        22.5        1   16 0.010220    5088 #> 7    Phae.long2.wav 1.7000444        22.5        1   16 0.076582   38251 #> 8  Phae.long3-1.wav 0.2312444        22.5        1   16 0.010450    5203 #> 9  Phae.long3-2.wav 0.2301778        22.5        1   16 0.010402    5179 #> 10 Phae.long3-3.wav 0.2312000        22.5        1   16 0.010448    5202 #> 11   Phae.long3.wav 2.2000000        22.5        1   16 0.099080   49500 #> 12 Phae.long4-1.wav 0.2454222        22.5        1   16 0.011088    5522 #> 13 Phae.long4-2.wav 0.2441778        22.5        1   16 0.011032    5494 #> 14 Phae.long4-3.wav 0.2451111        22.5        1   16 0.011074    5515 #> 15   Phae.long4.wav 3.2000000        22.5        1   16 0.144080   72000"},{"path":"https://marce10.github.io/warbleR/reference/info_wavs.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for info_sound_files — info_wavs","title":"alternative name for info_sound_files — info_wavs","text":"alternative name info_sound_files","code":""},{"path":"https://marce10.github.io/warbleR/reference/info_wavs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for info_sound_files — info_wavs","text":"","code":"info_wavs(   path = NULL,   parallel = 1,   pb = TRUE,   skip.error = FALSE,   file.format = \"\\\\.wav$|\\\\.wac$|\\\\.mp3$|\\\\.flac$\" )"},{"path":"https://marce10.github.io/warbleR/reference/info_wavs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for info_sound_files — info_wavs","text":"see info_sound_files documentation. info_wavs deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/internals.html","id":null,"dir":"Reference","previous_headings":"","what":"warbleR Internal Functions — warbleR-internals","title":"warbleR Internal Functions — warbleR-internals","text":"functions used functions warbleR package, intended called users. 2 functions modified versions spectro. functions : spectro.rectw.INTFUN.2 spectro.rectw.INTFUN 2 functions modified versions seewave's filled.contour.modif2(). spectro. functions : filled.contour.color.INTFUN filled.contour.INTFUN boxw.INTFUN create boxes around spectrograms catalog rectw modified version rect add density (cross-hatching lines) 2 functions used frequency range detection: frd.INTFUN frd.plot.INTFUN","code":""},{"path":"https://marce10.github.io/warbleR/reference/internals.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"warbleR Internal Functions — warbleR-internals","text":"functions called user.","code":""},{"path":"https://marce10.github.io/warbleR/reference/is_extended_selection_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Class 'extended_selection_table': selection table containing wave objects — is_extended_selection_table","title":"Class 'extended_selection_table': selection table containing wave objects — is_extended_selection_table","text":"Class selections signals sound files corresponding wave objects","code":""},{"path":"https://marce10.github.io/warbleR/reference/is_extended_selection_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class 'extended_selection_table': selection table containing wave objects — is_extended_selection_table","text":"","code":"is_extended_selection_table(x)"},{"path":"https://marce10.github.io/warbleR/reference/is_extended_selection_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class 'extended_selection_table': selection table containing wave objects — is_extended_selection_table","text":"x R object","code":""},{"path":"https://marce10.github.io/warbleR/reference/is_extended_selection_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class 'extended_selection_table': selection table containing wave objects — is_extended_selection_table","text":"logical argument indicating whether object class 'extended_selection_table'","code":""},{"path":"https://marce10.github.io/warbleR/reference/is_extended_selection_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class 'extended_selection_table': selection table containing wave objects — is_extended_selection_table","text":"object class extended_selection_table created selection_table list following elements: selections: data frame containing frequency/time coordinates selections, sound file names,  additional information check.resutls: results checks data consistency using check_sels wave.objects: list wave objects corresponding selection .song: list 1) logical argument defining 'extended_selection_table' created 'song'  2) name song column (see selection_table)","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/is_extended_selection_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class 'extended_selection_table': selection table containing wave objects — is_extended_selection_table","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/is_extended_selection_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class 'extended_selection_table': selection table containing wave objects — is_extended_selection_table","text":"","code":"{   data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\"))    is_extended_selection_table(lbh_selec_table)    writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"))   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))   writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))   writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))    st <- selection_table(lbh_selec_table, extended = TRUE, confirm.extended = FALSE,    path = tempdir())    is_extended_selection_table(st)    class(st) } #> checking selections (step 1 of 2): #> saving wave objects into extended selection table (step 2 of 2): #> [1] \"extended_selection_table\" \"data.frame\""},{"path":"https://marce10.github.io/warbleR/reference/is_selection_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Class 'selection_table': double-checked frequency/time coordinates of selections — is_selection_table","title":"Class 'selection_table': double-checked frequency/time coordinates of selections — is_selection_table","text":"Class selections signals sound files","code":""},{"path":"https://marce10.github.io/warbleR/reference/is_selection_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class 'selection_table': double-checked frequency/time coordinates of selections — is_selection_table","text":"","code":"is_selection_table(x)"},{"path":"https://marce10.github.io/warbleR/reference/is_selection_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class 'selection_table': double-checked frequency/time coordinates of selections — is_selection_table","text":"x R object.","code":""},{"path":"https://marce10.github.io/warbleR/reference/is_selection_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class 'selection_table': double-checked frequency/time coordinates of selections — is_selection_table","text":"logical argument indicating whether object class 'selection_table'","code":""},{"path":"https://marce10.github.io/warbleR/reference/is_selection_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class 'selection_table': double-checked frequency/time coordinates of selections — is_selection_table","text":"object class selection_table created selection_table list following elements: selections: data frame containing frequency/time coordinates selections, sound file names,  additional information check.resutls: results checks data consistency using check_sels","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/is_selection_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class 'selection_table': double-checked frequency/time coordinates of selections — is_selection_table","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/is_selection_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class 'selection_table': double-checked frequency/time coordinates of selections — is_selection_table","text":"","code":"{   # load data   data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\"))    is_selection_table(lbh_selec_table)    # save wave files in temporary directory   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"))   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))   writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))   writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))    st <- selection_table(lbh_selec_table, path = tempdir())    is_selection_table(st)    class(st) } #> checking selections (step 1 of 2): #> [1] \"selection_table\" \"data.frame\""},{"path":"https://marce10.github.io/warbleR/reference/lbh_selec_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data frame of selections (i.e. selection table). — lbh_selec_table","title":"Example data frame of selections (i.e. selection table). — lbh_selec_table","text":"lbh_selec_table alternative name selec.table. selec.table deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/lbh_selec_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data frame of selections (i.e. selection table). — lbh_selec_table","text":"","code":"data(lbh_selec_table)"},{"path":"https://marce10.github.io/warbleR/reference/lbh_selec_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data frame of selections (i.e. selection table). — lbh_selec_table","text":"data frame 11 rows 7 variables: sound.files recording names channel channel signal found selec selection numbers within recording start start times selected signal end end times selected signal bottom.freq lower limit frequency range top.freq upper limit frequency range","code":""},{"path":"https://marce10.github.io/warbleR/reference/lbh_selec_table.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example data frame of selections (i.e. selection table). — lbh_selec_table","text":"Marcelo Araya-Salas, warbleR","code":""},{"path":"https://marce10.github.io/warbleR/reference/lbh_selec_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example data frame of selections (i.e. selection table). — lbh_selec_table","text":"data frame containing start, end, low high frequency Phaethornis longirostris (Long-billed Hermit) songs example sound files included package. data 'selec_table'. 'selec_table' removed future package version.","code":""},{"path":"https://marce10.github.io/warbleR/reference/lbh_selec_table2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data frame of selections (i.e. selection table). — lbh_selec_table2","title":"Example data frame of selections (i.e. selection table). — lbh_selec_table2","text":"lbh_selec_table2 data frame containing start, end, low high frequency 2 selections. Mostly used example  find_peaks.","code":""},{"path":"https://marce10.github.io/warbleR/reference/lbh_selec_table2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data frame of selections (i.e. selection table). — lbh_selec_table2","text":"","code":"data(lbh_selec_table2)"},{"path":"https://marce10.github.io/warbleR/reference/lbh_selec_table2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data frame of selections (i.e. selection table). — lbh_selec_table2","text":"data frame 2 rows 7 variables: sound.files recording names channel channel signal found selec selection numbers within recording start start times selected signal end end times selected signal bottom.freq lower limit frequency range top.freq upper limit frequency range","code":""},{"path":"https://marce10.github.io/warbleR/reference/lbh_selec_table2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example data frame of selections (i.e. selection table). — lbh_selec_table2","text":"Marcelo Araya-Salas, warbleR","code":""},{"path":"https://marce10.github.io/warbleR/reference/lbh_selec_table2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example data frame of selections (i.e. selection table). — lbh_selec_table2","text":"data frame containing start, end, low high frequency Phaethornis longirostris (Long-billed Hermit) songs example sound files included package. Similar 'lbh_selec_table'. contains 2 selections.","code":""},{"path":"https://marce10.github.io/warbleR/reference/lspec.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for full_spectrograms — lspec","title":"alternative name for full_spectrograms — lspec","text":"alternative name full_spectrograms","code":""},{"path":"https://marce10.github.io/warbleR/reference/lspec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for full_spectrograms — lspec","text":"","code":"lspec(   X = NULL,   flim = NULL,   sxrow = 5,   rows = 10,   collevels = seq(-40, 0, 1),   ovlp = 50,   parallel = 1,   wl = 512,   gr = FALSE,   pal = reverse.gray.colors.2,   cex = 1,   it = \"jpeg\",   flist = NULL,   overwrite = TRUE,   path = NULL,   pb = TRUE,   fast.spec = FALSE,   labels = \"selec\",   horizontal = FALSE,   song = NULL,   suffix = NULL,   dest.path = NULL,   ... )"},{"path":"https://marce10.github.io/warbleR/reference/lspec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for full_spectrograms — lspec","text":"see full_spectrograms documentation. lspec deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/lspec2pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for full_spectrogram2pdf — lspec2pdf","title":"alternative name for full_spectrogram2pdf — lspec2pdf","text":"alternative name full_spectrogram2pdf","code":""},{"path":"https://marce10.github.io/warbleR/reference/lspec2pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for full_spectrogram2pdf — lspec2pdf","text":"","code":"lspec2pdf(   keep.img = TRUE,   overwrite = FALSE,   parallel = 1,   path = NULL,   pb = TRUE )"},{"path":"https://marce10.github.io/warbleR/reference/lspec2pdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for full_spectrogram2pdf — lspec2pdf","text":"see full_spectrogram2pdf documentation","code":""},{"path":"https://marce10.github.io/warbleR/reference/make.selection.table.html","id":null,"dir":"Reference","previous_headings":"","what":"Old name for selection_table — make.selection.table","title":"Old name for selection_table — make.selection.table","text":"Old name selection_table","code":""},{"path":"https://marce10.github.io/warbleR/reference/make.selection.table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Old name for selection_table — make.selection.table","text":"","code":"make.selection.table(   X,   max.dur = 10,   path = NULL,   whole.recs = FALSE,   extended = FALSE,   confirm.extended = TRUE,   mar = 0.1,   by.song = NULL,   pb = TRUE,   parallel = 1,   verbose = TRUE,   skip.error = FALSE,   file.format = \"\\\\.wav$|\\\\.wac$|\\\\.mp3$|\\\\.flac$\",   ... )"},{"path":"https://marce10.github.io/warbleR/reference/make.selection.table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Old name for selection_table — make.selection.table","text":"see selection_table documentation","code":""},{"path":"https://marce10.github.io/warbleR/reference/map_xc.html","id":null,"dir":"Reference","previous_headings":"","what":"Maps of 'Xeno-Canto' recordings by species — map_xc","title":"Maps of 'Xeno-Canto' recordings by species — map_xc","text":"map_xc creates maps visualize geographic spread 'Xeno-Canto'   recordings.","code":""},{"path":"https://marce10.github.io/warbleR/reference/map_xc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maps of 'Xeno-Canto' recordings by species — map_xc","text":"","code":"map_xc(X, img = TRUE, it = \"jpeg\", res = 100, labels = FALSE,  path = NULL, leaflet.map = FALSE,  leaflet.cluster = FALSE)"},{"path":"https://marce10.github.io/warbleR/reference/map_xc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maps of 'Xeno-Canto' recordings by species — map_xc","text":"X Data frame output query_xc. img logical argument specifying whether image file species map returned, default TRUE. character vector length 1 giving image type used. Currently \"tiff\" \"jpeg\" admitted. Default \"jpeg\". res Numeric argument length 1. Controls image resolution. Default 100 (faster) although 300 - 400 recommended publication/ presentation quality. labels logical argument defining whether dots depicting recording locations labeled. TRUE Recording_ID used label. path Character string directory path image files saved. NULL (default) current working directory used. Ignored img = FALSE. leaflet.map Logical control whether package 'leaflet' used displaying maps. 'leaflet' maps interactive display information recordings links Xeno-Canto website. TRUE single map displayed regardless number species image related arguments ignored. Default FALSE. hovering label shows species scientific name (subspecies 1 species present 'X'). Note colors recycled 18 species (subspecies). leaflet.cluster Logical control icons clustered locality (Xeno-Canto maps). Default FALSE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/map_xc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maps of 'Xeno-Canto' recordings by species — map_xc","text":"map 'Xeno-Canto' recordings per species (image file), faceted   plot species map(s) active graphic device.","code":""},{"path":"https://marce10.github.io/warbleR/reference/map_xc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maps of 'Xeno-Canto' recordings by species — map_xc","text":"function creates maps visualizing geographic spread recordings open-access online repository Xeno-Canto. function takes output query_xc input. Maps can displayed graphic device (Viewer 'leaflet.map = TRUE') saved images working directory. Note recordings geographic coordinates displayed.","code":""},{"path":"https://marce10.github.io/warbleR/reference/map_xc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Maps of 'Xeno-Canto' recordings by species — map_xc","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/reference/map_xc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Maps of 'Xeno-Canto' recordings by species — map_xc","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr) Grace Smith Vidaurre","code":""},{"path":"https://marce10.github.io/warbleR/reference/map_xc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maps of 'Xeno-Canto' recordings by species — map_xc","text":"","code":"if (FALSE) { # search in xeno-canto X <- query_xc(\"Phaethornis anthophilus\", download = FALSE)  # create image in R graphic device map_xc(X, img = FALSE)  # create leaflet map map_xc(X, leaflet.map = TRUE) }"},{"path":"https://marce10.github.io/warbleR/reference/mfcc_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate descriptive statistics on Mel-frequency cepstral coefficients — mfcc_stats","title":"Calculate descriptive statistics on Mel-frequency cepstral coefficients — mfcc_stats","text":"mfcc_stats calculates descriptive statistics Mel-frequency cepstral coefficients derivatives.","code":""},{"path":"https://marce10.github.io/warbleR/reference/mfcc_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate descriptive statistics on Mel-frequency cepstral coefficients — mfcc_stats","text":"","code":"mfcc_stats(X, ovlp = 50, wl = 512, bp = 'frange', path = NULL, numcep = 25, nbands = 40, parallel = 1, pb = TRUE, ...)"},{"path":"https://marce10.github.io/warbleR/reference/mfcc_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate descriptive statistics on Mel-frequency cepstral coefficients — mfcc_stats","text":"X 'selection_table', 'extended_selection_table' data frame following columns: 1) \"sound.files\": name sound files, 2) \"sel\": number selections, 3) \"start\": start time selections, 4) \"end\": end time selections. output auto_detec can used input data frame. ovlp Numeric vector length 1 specifying % overlap two consecutive windows. Internally used set 'hoptime' argument melfcc. Default 50. wl numeric vector length 1 specifying spectrogram window length. Default 512. See 'wl.freq' setting windows length independently frequency domain. bp numeric vector length 2 lower upper limits frequency bandpass filter (kHz) \"frange\" (default) indicate values minimum 'bottom.freq' maximum 'top.freq' columns used bandpass limits. path Character string containing directory path sound files located. numcep Numeric vector length 1 controlling number cepstra return (see melfcc). nbands Numeric vector length 1 controlling number warped spectral bands use (see melfcc). Default 40. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar messages. Default TRUE. ... Additional parameters passed melfcc.","code":""},{"path":"https://marce10.github.io/warbleR/reference/mfcc_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate descriptive statistics on Mel-frequency cepstral coefficients — mfcc_stats","text":"data frame containing descriptive statistics Mel-frequency cepstral coefficients (set 'numcep' argument). See details.","code":""},{"path":"https://marce10.github.io/warbleR/reference/mfcc_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate descriptive statistics on Mel-frequency cepstral coefficients — mfcc_stats","text":"function calculates descriptive statistics Mel-frequency cepstral coefficients (MFCCs) signals (rows) selection data frame. descriptive statistics : minimum, maximum, mean, median, skewness, kurtosis variance. also returns mean variance first second derivatives coefficients. parameters commonly used acoustic signal processing detection (e.g. Salamon et al 2014).","code":""},{"path":"https://marce10.github.io/warbleR/reference/mfcc_stats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate descriptive statistics on Mel-frequency cepstral coefficients — mfcc_stats","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.Lyon, R. H., & Ordubadi, . (1982). Use cepstra acoustical signal analysis. Journal Mechanical Design, 104(2), 303-306.Salamon, J., Jacoby, C., & Bello, J. P. (2014). dataset taxonomy urban sound research. Proceedings 22nd ACM international conference Multimedia. 1041-1044.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/mfcc_stats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate descriptive statistics on Mel-frequency cepstral coefficients — mfcc_stats","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/mfcc_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate descriptive statistics on Mel-frequency cepstral coefficients — mfcc_stats","text":"","code":"{ data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))  # run function mel_st <- mfcc_stats(X = lbh_selec_table, pb = FALSE, path = tempdir())  head(mel_st)  # measure 12 coefficients mel_st12 <- mfcc_stats(X = lbh_selec_table, numcep = 12, pb = FALSE, path = tempdir())   head(mel_st) } #>      sound.files selec   min.cc1    min.cc2   min.cc3    min.cc4    min.cc5 #> 1 Phae.long1.wav     1  97.41710  -9.741738 -11.32636 -2.4775313 -16.442584 #> 2 Phae.long1.wav     2 103.66298 -11.204330 -13.11395 -5.1566762 -16.876461 #> 3 Phae.long1.wav     3 101.56633 -10.796311 -12.12637 -3.9241991 -15.481162 #> 4 Phae.long2.wav     1  90.35586 -17.738353 -15.98023 -0.3796791  -9.827981 #> 5 Phae.long2.wav     2  94.59037 -15.337203 -15.04966 -0.8982095 -11.579024 #> 6 Phae.long3.wav     1  83.58712 -16.166409 -11.60570  1.7900544 -13.428846 #>      min.cc6   min.cc7    min.cc8     min.cc9  min.cc10   min.cc11   min.cc12 #> 1 -12.669396 -25.51122 -16.122035 -21.1652585 -26.85733  -8.311928 -11.161755 #> 2 -17.495990 -25.70540 -14.485720 -14.9742115 -30.10690  -7.252546 -13.750444 #> 3 -12.494062 -25.11734 -15.979317 -14.6357577 -34.17262 -10.433532  -6.513314 #> 4 -12.748253 -15.83535  -5.149791  -6.2990882 -13.84780  -7.544004  -4.810362 #> 5 -10.828286 -16.90564  -3.682015  -4.8593790 -16.72003  -8.594043  -5.992594 #> 6  -1.788067 -10.02436  -4.227750   0.7438716 -14.48855  -6.704159  -5.681910 #>     min.cc13  min.cc14   min.cc15   min.cc16   min.cc17   min.cc18   min.cc19 #> 1 -10.893999 -6.548138  -6.228469 -12.351283 -10.011899 -14.210023 -10.674114 #> 2  -7.469322 -7.517244 -15.924519  -7.058725 -12.643605 -10.448158  -5.083385 #> 3 -10.428165 -2.100663 -10.343367 -16.166685 -12.808690 -10.431413  -2.289366 #> 4  -5.963805 -6.319496  -8.933051  -6.763212  -1.182565  -6.149335  -9.457490 #> 5 -12.106991 -6.543729  -4.679565  -3.715462  -8.811456  -6.970448  -4.089950 #> 6  -9.431567 -9.134731  -5.153216  -4.322798  -4.878103  -5.830261 -20.224515 #>     min.cc20   min.cc21  min.cc22   min.cc23   min.cc24   min.cc25  max.cc1 #> 1 -14.936022 -14.660531 -1.831284  -7.074403 -10.602284 -15.498981 123.8829 #> 2 -14.862029 -10.599017 -4.799863 -15.609107 -11.213116 -13.257737 121.7936 #> 3  -8.575396  -6.649396 -5.371442 -11.981505  -5.868671 -13.167830 115.8979 #> 4  -5.379245  -3.139821 -6.112165  -1.469666  -4.517338  -8.295976 106.4477 #> 5  -6.062614  -7.508700 -7.220562  -8.242488  -6.971534  -3.505703 110.4075 #> 6  -4.753631  -6.782422 -6.012380 -12.781620  -8.859711 -14.718285 101.1518 #>      max.cc2   max.cc3   max.cc4  max.cc5   max.cc6   max.cc7   max.cc8 #> 1  -5.471136  1.604269 13.207769 3.765825 18.400812 14.693230 13.396234 #> 2  -5.916305  0.798860 12.415208 7.577028 19.227664 13.613360 10.935493 #> 3  -5.011725  1.503675  9.933779 7.834471 21.543872 14.126354 13.235474 #> 4  -7.399087 -3.281254 12.512596 1.169290 11.551683  7.105545  7.710989 #> 5  -5.262125 -4.712893 11.423114 3.675929  9.407848  6.781409  4.386000 #> 6 -10.734089  2.179903 11.501854 0.127160 11.620112  7.747183  2.748573 #>     max.cc9  max.cc10  max.cc11  max.cc12  max.cc13  max.cc14  max.cc15 #> 1 11.950669  4.715892 18.462866  6.651267  7.989516 13.994428  9.666043 #> 2 11.703480 18.517115 13.460480  7.254551  5.505258  9.559330  7.031169 #> 3  7.225735 11.434075 18.722485 10.857621 13.911743 14.360009 12.381654 #> 4  5.166011  6.555404 11.793875  4.035566  5.455683  4.812108  7.472272 #> 5  9.138265  6.959043  3.078486  2.770936  3.262478  6.498858 10.700772 #> 6  9.273600  2.210349  3.499552  5.036030  2.578108  3.846708  4.236219 #>    max.cc16 max.cc17  max.cc18  max.cc19  max.cc20   max.cc21 max.cc22 #> 1 23.755963 6.789029 18.622725 22.773468 10.710674  8.4029593 6.373672 #> 2 27.728741 6.262405 21.131985 22.298373 12.723599  9.5721075 3.267168 #> 3 16.908047 7.459304 11.839398 16.756546 12.316496  8.3001695 6.204872 #> 4  8.823517 6.556143  7.342826  4.316081  9.776778  6.2031408 4.659367 #> 5 20.876774 4.853740  4.382839  8.979047  8.117146  0.6202709 3.662607 #> 6  3.270320 3.448574  4.240012  5.379075  9.291310 12.5054848 5.635668 #>    max.cc23  max.cc24  max.cc25 median.cc1 median.cc2 median.cc3 median.cc4 #> 1  9.994031 15.818974  8.657913  113.83520  -8.026102  -2.871619   4.353283 #> 2 15.562221  7.111506 15.096408  116.79498  -8.194719  -3.999071   5.900533 #> 3 13.429872 11.125478  5.702094  110.89634  -9.080785  -3.257558   3.805035 #> 4  8.461919  7.603726  2.517150  101.95072 -14.106201  -7.147220   6.413854 #> 5  2.531392  6.657956 10.659771  105.14495 -12.931932  -7.666588   5.337361 #> 6  3.025244 15.909787  4.676275   95.20185 -14.939280  -2.391788   7.996481 #>   median.cc5 median.cc6 median.cc7 median.cc8 median.cc9 median.cc10 #> 1  -3.633554   2.589859  2.4490654 -8.2694605 -1.2132464  -13.542157 #> 2  -6.285458  -1.638995  2.3521451 -5.9505438  1.5506542  -11.107731 #> 3  -5.598541   1.339909  2.3398548 -4.7241597 -2.5715766  -12.488231 #> 4  -7.359406   1.599963 -0.6494207  0.5066077 -0.8671164   -1.217075 #> 5  -8.101284   4.025589  3.0080046  1.8971890  2.1193144   -4.734557 #> 6 -10.984953   4.393810 -0.8535795 -1.4618650  2.6501936   -2.338702 #>   median.cc11 median.cc12 median.cc13 median.cc14 median.cc15 median.cc16 #> 1  3.15206419   1.3145897  -1.1204982   3.8116687   1.0065652  -5.5729624 #> 2 -0.83345023  -2.9185975   1.3527322   2.2873534  -3.0080424  -2.1224897 #> 3  2.55973554   1.6729575   0.5938637   3.2630734   0.8256174  -4.6850967 #> 4  1.62536392  -0.5555682   1.3737687  -0.8332135   0.8025779   2.8640700 #> 5 -2.52952403  -2.6837353  -4.0811671  -0.4724871   2.1186627   0.6013044 #> 6 -0.09845667  -0.8647434   1.0296915  -0.6900702   2.0542665   0.2010110 #>   median.cc17 median.cc18 median.cc19 median.cc20 median.cc21 median.cc22 #> 1  2.50503890 -1.11639762   5.7759344  2.32512516  -0.8540258   1.4935067 #> 2 -2.84357434 -1.37221173   3.2727356 -4.39882963   0.4547581   0.5207376 #> 3 -0.07064844 -0.02392908   2.9201578  2.67885817  -2.0384039   0.9258723 #> 4  1.50004136 -1.77393307  -0.9454727  0.88169224   1.3835542   0.5904333 #> 5  0.44249953 -2.00572468   1.1993185  0.26393591  -2.0949872  -1.0577768 #> 6 -1.22595819 -1.55498880  -2.0707686 -0.08681687  -1.7115016   0.1864383 #>   median.cc23 median.cc24 median.cc25  mean.cc1   mean.cc2  mean.cc3 mean.cc4 #> 1  -0.4861154  2.04273279  -0.9122798 113.19955  -7.939177 -3.199266 4.120387 #> 2   0.5404949 -0.05337164  -1.3325321 114.89566  -8.219827 -3.959138 4.681245 #> 3   2.0664991  3.67950393  -3.2870709 110.12377  -8.559412 -3.285924 2.786486 #> 4   2.1191358  0.34554833  -3.2740412 101.39783 -12.761469 -8.295904 5.481266 #> 5  -2.3613264 -4.73813610   1.0474525 104.62673 -10.888433 -9.114482 5.601466 #> 6  -0.6542713 -0.49587190  -1.1304126  94.15262 -14.153380 -3.537447 7.814291 #>     mean.cc5 mean.cc6   mean.cc7   mean.cc8   mean.cc9  mean.cc10  mean.cc11 #> 1  -4.726259 4.207452 -0.8553604 -4.7982098 -2.3751679 -11.264607  3.0985564 #> 2  -5.155946 2.289969 -3.0194127 -2.2512726  0.2386140  -6.722905  2.6382179 #> 3  -4.341298 5.013151 -1.9808976 -3.3131405 -2.4616726 -10.705971  2.8894462 #> 4  -6.176140 1.670929 -1.1332517  0.8320822 -0.6255065  -1.968889  1.9550448 #> 5  -6.799643 1.911823  0.8254871  1.6543395  2.2464023  -4.618549 -2.8079092 #> 6 -10.258582 4.532534 -0.9876238 -1.2827938  3.2104720  -3.048860 -0.6069294 #>    mean.cc12  mean.cc13   mean.cc14   mean.cc15  mean.cc16  mean.cc17 #> 1 -0.4467126 -0.7657920  4.60452555  0.94235472 -2.3514493  0.2318763 #> 2 -1.8833857 -0.3242044  2.00343329 -3.18169905  1.8427058 -1.6761584 #> 3  0.9581023  0.3452297  4.57264959  0.60290513 -3.1267562 -0.5234875 #> 4 -0.4003499  0.1558010 -0.96642218 -0.01982832  2.4284422  2.2653495 #> 5 -2.4730017 -3.9486621  0.09665821  2.75462837  3.4770352 -0.8511870 #> 6 -0.8157985 -0.4197169 -0.76869945  1.48406544 -0.3714472 -1.0090512 #>    mean.cc18 mean.cc19    mean.cc20  mean.cc21  mean.cc22  mean.cc23  mean.cc24 #> 1 -0.6671743  7.997967  0.668789607 -0.6415378  2.0087210  0.3851994  3.9315266 #> 2  1.1926889  5.273383 -3.197205485  0.2261854  0.1752804  0.4480020  0.8498350 #> 3  0.1628125  4.781565  1.451355441 -0.6183360  0.3812597  1.8577396  2.7927463 #> 4 -0.3583433 -2.195724  0.626388383  1.6219077 -0.4445460  2.1273127  0.7963044 #> 5 -1.6113646  1.505541  0.355868834 -2.5401335 -1.4527925 -2.0170651 -3.1495878 #> 6 -1.3598896 -2.367155 -0.007740216 -0.4077784  0.3242966 -1.7722795  0.2038126 #>   mean.cc25  var.cc1   var.cc2  var.cc3   var.cc4  var.cc5   var.cc6   var.cc7 #> 1 -2.438220 39.21008  2.070953 10.07102 25.004330 41.41051 134.29757 228.44671 #> 2 -1.543861 23.34247  2.294833 12.78865 25.558422 56.85797 163.65316 179.51730 #> 3 -3.060039 20.81667  3.115623 13.07580 19.582237 49.02256 140.81817 167.74917 #> 4 -3.234697 21.60639 13.116291 16.49137 22.494334 12.94459  52.92598  42.63822 #> 5  1.726908 23.09798 15.123558 17.46103 12.056544 20.28798  49.01745  52.35854 #> 6 -1.149354 27.49950  3.309704 20.90734  7.756721 16.30287  27.77845  29.34361 #>     var.cc8   var.cc9  var.cc10 var.cc11  var.cc12 var.cc13 var.cc14  var.cc15 #> 1 94.908434 76.386035 138.39633 83.03398 29.876386 21.57676 39.05402 30.056266 #> 2 82.123954 61.240740 181.52430 58.16833 29.658785 21.57489 28.80127 42.164783 #> 3 80.701395 32.189461 205.12173 65.05734 25.149615 37.30307 24.73257 37.962457 #> 4 11.675368 16.238239  32.51568 43.10345 11.828904 15.75580 14.39072 24.312511 #> 5  4.775292 17.076494  36.21512 13.79523  9.208385 19.95035 15.69836 26.747861 #> 6  4.570056  7.128759  19.23308 10.14763 10.452876 14.51532 19.90096  7.978399 #>    var.cc16  var.cc17  var.cc18 var.cc19 var.cc20  var.cc21  var.cc22  var.cc23 #> 1 119.35358 31.505159 69.265636 98.45217 50.92907 36.102691  7.272967 29.096157 #> 2 102.13704 34.910110 78.128544 95.17125 68.79282 33.957072  5.785868 72.260874 #> 3  97.00508 23.139221 45.457159 33.21711 37.26710 20.750502 10.269237 41.433950 #> 4  18.70611  8.501661 17.012997 22.01938 20.98573 12.098514 11.289852  7.982322 #> 5  52.64480 19.099041  9.395019 22.89027 21.27622  7.577858 11.118885  9.185258 #> 6   7.88226  7.199381 12.645376 48.63872 15.44240 35.126401  8.665264 20.369185 #>   var.cc24 var.cc25   skew.cc1   skew.cc2   skew.cc3    skew.cc4   skew.cc5 #> 1 62.46642 47.20023 -0.7388222  0.1819517 -0.8424626  0.23234270 -0.4087082 #> 2 30.86495 59.57412 -0.7535361 -0.3274096 -0.9442204 -0.38514803  0.2554274 #> 3 22.56075 26.77044 -0.6225267  0.6398787 -0.7071045 -0.14396567  0.3246500 #> 4 12.78288 11.84562 -1.1335045  0.2978414 -0.5034189  0.07279951  0.8441109 #> 5 14.86880 18.09226 -0.6548490  0.3913148 -0.3977141 -0.09548085  1.0793999 #> 6 40.01337 30.04012 -0.7358763  0.7887711 -0.3331404 -0.69191425  1.6002095 #>      skew.cc6    skew.cc7   skew.cc8    skew.cc9   skew.cc10   skew.cc11 #> 1 -0.01866101 -0.48835920  0.5570190 -0.63056303  0.11565166  0.38681448 #> 2  0.06672828 -0.41338496  0.1241709 -0.20821166  0.13807461  0.14431112 #> 3  0.23289147 -0.44606038  0.5302892 -0.19724554 -0.12690372  0.20297102 #> 4 -0.48436397 -0.84477731  0.2954321  0.08363398 -0.47475280 -0.07805675 #> 5 -0.44185547 -1.45338601 -1.1802099 -0.02441273 -0.09122774  0.01841604 #> 6  0.05700990 -0.04840729  0.3166589  1.06892450 -1.57191096 -0.34711631 #>    skew.cc12  skew.cc13    skew.cc14   skew.cc15  skew.cc16   skew.cc17 #> 1 -0.6142467 -0.1484506 -0.106445587  0.12486365  1.3666383 -0.50660097 #> 2 -0.3259585 -0.2312339 -0.164461259 -0.40171343  1.4062080 -0.14329520 #> 3  0.1414025  0.3704042  0.365027997  0.05501897  0.7874996 -0.83632345 #> 4 -0.1383504 -0.4263072 -0.054756497 -0.27919823 -0.6084099  0.25334818 #> 5  0.2636373 -0.1238036  0.007103377  0.13446054  1.2686720 -0.46283989 #> 6  0.2547037 -1.2169558 -0.397347656 -1.14544704 -0.4091171  0.05847849 #>    skew.cc18   skew.cc19  skew.cc20   skew.cc21  skew.cc22  skew.cc23 #> 1  0.5491275 -0.03979579 -1.0299131 -0.52011909  0.3048525  0.3693062 #> 2  0.7547712  0.36759686  0.2689195 -0.10428438 -0.8072175 -0.2294949 #> 3 -0.1299190  0.55031159 -0.2687133  0.63878056 -0.2950719 -0.4327213 #> 4  0.4633078 -0.38943000  0.4711683  0.04842276 -0.3781934  0.8276710 #> 5  0.2083102  0.26525228  0.1881902 -0.48154680 -0.2072295 -0.4325777 #> 6  0.4068986 -1.46726807  1.0378404  0.86600536 -0.3745826 -1.2351570 #>     skew.cc24  skew.cc25 kurt.cc1 kurt.cc2 kurt.cc3 kurt.cc4 kurt.cc5 kurt.cc6 #> 1  0.07460141 -0.5224114 3.692373 1.438470 3.685870 1.542584 2.026494 1.267189 #> 2 -0.48588119  0.3592784 2.807812 2.035873 3.785911 2.017039 1.748489 1.326794 #> 3 -0.32218991 -0.3133332 1.982351 1.938390 3.061307 1.581973 1.774037 1.374422 #> 4  0.39146058  0.1716544 3.444364 1.373735 1.833495 1.266572 2.189092 2.126287 #> 5  1.49431039  0.7216276 2.319423 1.228036 1.258907 2.209629 3.188262 1.574108 #> 6  1.20879138 -1.2868775 2.330985 2.014690 1.543509 2.685203 4.488608 1.207101 #>   kurt.cc7 kurt.cc8 kurt.cc9 kurt.cc10 kurt.cc11 kurt.cc12 kurt.cc13 kurt.cc14 #> 1 1.575220 1.693552 2.661247  1.220348  1.759860  2.075862  2.770308  1.749640 #> 2 1.566243 1.346922 1.940861  1.948459  1.161452  2.587980  1.400122  1.721571 #> 3 1.719963 2.034883 2.672801  1.588426  1.982298  2.009586  2.899741  1.784707 #> 4 2.962703 2.676028 1.299919  2.651348  1.538738  1.274102  1.499599  1.413677 #> 5 3.813506 3.867286 1.843679  3.033589  1.684377  1.484912  2.036914  1.822548 #> 6 1.770796 1.924167 2.951370  4.853628  1.966645  1.841446  3.301255  1.720128 #>   kurt.cc15 kurt.cc16 kurt.cc17 kurt.cc18 kurt.cc19 kurt.cc20 kurt.cc21 #> 1  1.291308  3.581792  1.795662  3.011537  1.783469  3.140739  2.786548 #> 2  2.342942  3.744191  1.669686  2.695255  1.504540  1.806701  1.935296 #> 3  2.125656  2.501337  3.783112  1.992832  1.983839  1.977878  2.070000 #> 4  1.912687  2.662871  1.319669  1.885780  1.523207  2.189645  1.437228 #> 5  1.473286  3.516086  1.753017  2.490501  1.545868  1.560605  1.676822 #> 6  3.296963  1.413143  1.830883  1.621089  4.502698  3.455573  2.576168 #>   kurt.cc22 kurt.cc23 kurt.cc24 kurt.cc25 mean.d1.cc var.d1.cc mean.d2.cc #> 1  1.698707  1.750416  1.860362  2.185622  -180.0812  149674.3   2575.527 #> 2  2.680944  2.145128  2.265519  2.407302  -182.5251  155809.8   2665.290 #> 3  2.403744  2.704935  2.349213  2.172382  -175.9519  140683.8   2501.807 #> 4  1.830708  2.934473  2.107674  1.589294  -160.5609  118844.1   2321.431 #> 5  1.761313  2.417847  4.319930  2.391357  -160.9951  127833.3   2566.415 #> 6  3.241118  3.767870  4.239549  3.974242  -148.0187  102672.1   2228.953 #>   var.d2.cc #> 1  17080568 #> 2  17909354 #> 3  16438780 #> 4  14648211 #> 5  14220803 #> 6  12182912"},{"path":"https://marce10.github.io/warbleR/reference/move_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Move/copy image files between directories — move_images","title":"Move/copy image files between directories — move_images","text":"move_images moves/copies image files created warbleR directories (folders).","code":""},{"path":"https://marce10.github.io/warbleR/reference/move_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move/copy image files between directories — move_images","text":"","code":"move_images(from = NULL, to = NULL, it = \"all\", cut = TRUE, overwrite = FALSE, create.folder = TRUE, folder.name = \"image_files\", parallel = 1, pb = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/move_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move/copy image files between directories — move_images","text":"Directory path image files copied found. NULL (default) current working directory used. Directory path image files copied . character vector length 1 giving image type used. \"\", \"tiff\", \"jpeg\" \"pdf\" admitted (\"\" includes rest). Default \"\". cut Logical. Determines files removed original location copied (cut) (just copied). Default TRUE. overwrite Logical. Determines files already exist destination directory overwritten. Default FALSE. create.folder Logical. Determines files moved new folder (named \"folder.name\" argument). Ignored '' provided. Default TRUE. folder.name Character string name new folder files copied . Ignored '' provided. Default \"image_files\". parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar. Default TRUE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/move_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move/copy image files between directories — move_images","text":"Image files moved user-defined folders.","code":""},{"path":"https://marce10.github.io/warbleR/reference/move_images.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Move/copy image files between directories — move_images","text":"function aims simplify manipulation image files generated many warbleR function. copies/cuts files directories.","code":""},{"path":"https://marce10.github.io/warbleR/reference/move_images.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Move/copy image files between directories — move_images","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/move_images.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Move/copy image files between directories — move_images","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/move_images.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move/copy image files between directories — move_images","text":"","code":"{ # load data data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))   # create spectrograms  spectrograms(lbh_selec_table[1:5, ], path = tempdir(), pb = FALSE)      # create folder to move image files   dir.create(file.path(tempdir(), \"imgs\"))    # copy files   move_images(cut = FALSE, from = tempdir(), to = file.path(tempdir(), \"imgs\"))    # cut files   move_images(     cut = TRUE, from = tempdir(),     to = file.path(tempdir(), \"imgs\"), overwrite = TRUE   )    # Check this folder   file.path(tempdir(), \"imgs\") } #> [1] \"/tmp/RtmpV1BiAC/imgs\""},{"path":"https://marce10.github.io/warbleR/reference/move_imgs.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for move_images — move_imgs","title":"alternative name for move_images — move_imgs","text":"alternative name move_images","code":""},{"path":"https://marce10.github.io/warbleR/reference/move_imgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for move_images — move_imgs","text":"","code":"move_imgs(   from = NULL,   to = NULL,   it = \"all\",   cut = TRUE,   overwrite = FALSE,   create.folder = TRUE,   folder.name = \"image_files\",   parallel = 1,   pb = TRUE )"},{"path":"https://marce10.github.io/warbleR/reference/move_imgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for move_images — move_imgs","text":"see move_images documentation. move_imgs deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/mp32wav.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert .mp3 files to .wav — mp32wav","title":"Convert .mp3 files to .wav — mp32wav","text":"mp32wav converts several .mp3 files working directory .wav format","code":""},{"path":"https://marce10.github.io/warbleR/reference/mp32wav.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert .mp3 files to .wav — mp32wav","text":"","code":"mp32wav(samp.rate = NULL, parallel = 1, path = NULL,  dest.path = NULL, bit.depth = 16, pb = TRUE, overwrite = FALSE)"},{"path":"https://marce10.github.io/warbleR/reference/mp32wav.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert .mp3 files to .wav — mp32wav","text":"samp.rate Sampling rate kHz .wav files written. provided sample rate original .mp3 file used. FEATURE CURRENTLY AVAILABLE. However, downsampling can done .mp3's converted using fix_wavs function (uses SOX instead). Default NULL (e.g. keep original sampling rate). parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). path Character string containing directory path .mp3 files located. NULL (default) current working directory used. dest.path Character string containing directory path .wav files saved. NULL (default) folder containing sound files used. bit.depth Character string containing units used amplitude normalization. Check normalize details. Default 16. pb Logical argument control progress bar. Default TRUE. overwrite Logical. Control whether .wav sound file already working directory overwritten.","code":""},{"path":"https://marce10.github.io/warbleR/reference/mp32wav.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert .mp3 files to .wav — mp32wav","text":".wav files saved working directory name original mp3 files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/mp32wav.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert .mp3 files to .wav — mp32wav","text":"function convert mp3 files  working directory 'path' supplied wav format. bioacoustics package must installed changing sampling rates (.e. 'samp.rate' supplied). Note sound files normalized using normalize can written writeWave. convert .mp3 files working directory .wav format. Function used internally read .mp3 files (readMP3) sometimes crashes.","code":""},{"path":"https://marce10.github.io/warbleR/reference/mp32wav.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert .mp3 files to .wav — mp32wav","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/reference/mp32wav.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert .mp3 files to .wav — mp32wav","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr) Grace Smith Vidaurre","code":""},{"path":"https://marce10.github.io/warbleR/reference/mp32wav.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert .mp3 files to .wav — mp32wav","text":"","code":"if (FALSE) { # download mp3 files from xeno-canto query_xc(qword = \"Phaethornis aethopygus\", download = TRUE, path = tempdir())  # Convert all files to .wav format mp32wav(path = tempdir(), dest.path = tempdir())  # check this folder!! tempdir() }"},{"path":"https://marce10.github.io/warbleR/reference/mp3_2_wav.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for mp32wav — mp3_2_wav","title":"alternative name for mp32wav — mp3_2_wav","text":"alternative name mp32wav","code":""},{"path":"https://marce10.github.io/warbleR/reference/mp3_2_wav.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for mp32wav — mp3_2_wav","text":"","code":"mp3_2_wav(   samp.rate = NULL,   parallel = 1,   path = NULL,   dest.path = NULL,   bit.depth = 16,   pb = TRUE,   overwrite = FALSE )"},{"path":"https://marce10.github.io/warbleR/reference/mp3_2_wav.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for mp32wav — mp3_2_wav","text":"see mp32wav documentation. mp32wav deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/multi_DTW.html","id":null,"dir":"Reference","previous_headings":"","what":"A wrapper on dtwDist for comparing multivariate contours — multi_DTW","title":"A wrapper on dtwDist for comparing multivariate contours — multi_DTW","text":"multi_DTW wrapper dtwDist simplify applying dynamic time warping multivariate contours.","code":""},{"path":"https://marce10.github.io/warbleR/reference/multi_DTW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper on dtwDist for comparing multivariate contours — multi_DTW","text":"","code":"multi_DTW(ts.df1 = NULL, ts.df2 = NULL, pb = TRUE,  parallel = 1, window.type = \"none\", open.end = FALSE, scale = FALSE, dist.mat = TRUE, ...)"},{"path":"https://marce10.github.io/warbleR/reference/multi_DTW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper on dtwDist for comparing multivariate contours — multi_DTW","text":"ts.df1 Optional. Data frame frequency contour time series signals compared. ts.df2 Optional. Data frame frequency contour time series signals compared. pb Logical argument control progress bar. Default TRUE. Note progress bar used parallel = 1. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). available Windows OS. window.type dtw windowing control parameter. Character: \"none\", \"itakura\", function (see dtw). open.end dtw control parameter. Performs open-ended alignments (see dtw). scale Logical. TRUE dominant frequency values z-transformed using scale function, \"ignores\" differences absolute frequencies signals order focus comparison frequency contour, regardless pitch signals. Default TRUE. dist.mat Logical controlling whether distance matrix (TRUE, default) tabular data frame (FALSE) returned. ... Additional arguments passed track_freq_contour customizing graphical output.","code":""},{"path":"https://marce10.github.io/warbleR/reference/multi_DTW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A wrapper on dtwDist for comparing multivariate contours — multi_DTW","text":"matrix pairwise dissimilarity values. img FALSE also produces image files spectrograms signals listed input data frame showing location dominant frequencies.","code":""},{"path":"https://marce10.github.io/warbleR/reference/multi_DTW.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A wrapper on dtwDist for comparing multivariate contours — multi_DTW","text":"function extracts dominant frequency values time series  calculates pairwise acoustic dissimilarity using dynamic time warping. function uses approx function interpolate values dominant  frequency  measures. 'img'  TRUE function also produces image files  spectrograms signals listed input data frame showing  location dominant frequencies.","code":""},{"path":"https://marce10.github.io/warbleR/reference/multi_DTW.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A wrapper on dtwDist for comparing multivariate contours — multi_DTW","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/multi_DTW.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A wrapper on dtwDist for comparing multivariate contours — multi_DTW","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/multi_DTW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A wrapper on dtwDist for comparing multivariate contours — multi_DTW","text":"","code":"if (FALSE) { # load data data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\"))  writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) # save sound files writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))  # measure df <- freq_ts(X = lbh_selec_table, threshold = 10, img = FALSE, path = tempdir()) se <- freq_ts(X = lbh_selec_table, threshold = 10, img = FALSE, path = tempdir(), type = \"entropy\")  # run function multi_DTW(df, se) }"},{"path":"https://marce10.github.io/warbleR/reference/new_function_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame detailing function name changes — new_function_names","title":"Data frame detailing function name changes — new_function_names","text":"data frame containing old new names warbleR functions","code":""},{"path":"https://marce10.github.io/warbleR/reference/new_function_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame detailing function name changes — new_function_names","text":"","code":"data(new_function_names)"},{"path":"https://marce10.github.io/warbleR/reference/new_function_names.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data frame detailing function name changes — new_function_names","text":"object class data.frame 34 rows 2 columns.","code":""},{"path":"https://marce10.github.io/warbleR/reference/new_function_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data frame detailing function name changes — new_function_names","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/open_wd.html","id":null,"dir":"Reference","previous_headings":"","what":"Open working directory — open_wd","title":"Open working directory — open_wd","text":"open_wd opens working directory default file browser.","code":""},{"path":"https://marce10.github.io/warbleR/reference/open_wd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open working directory — open_wd","text":"","code":"open_wd(path = getwd(), verbose = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/open_wd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open working directory — open_wd","text":"path Directory path opened. default working directory.  'wav.path' set warbleR_options ignored case. verbose Logical control whether 'path' printed console. Defaut TRUE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/open_wd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open working directory — open_wd","text":"Opens working directory using default file browser.","code":""},{"path":"https://marce10.github.io/warbleR/reference/open_wd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Open working directory — open_wd","text":"function opens working directory using default file browser  prints working directory R console. function aims simplify manipulation sound files files produced many warbleR function.","code":""},{"path":"https://marce10.github.io/warbleR/reference/open_wd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Open working directory — open_wd","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/open_wd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Open working directory — open_wd","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/open_wd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open working directory — open_wd","text":"","code":"{ open_wd() } #> [1] \"/home/runner/work/warbleR/warbleR/docs/reference opened in file browser\""},{"path":"https://marce10.github.io/warbleR/reference/overlapping_sels.html","id":null,"dir":"Reference","previous_headings":"","what":"Find overlapping selections — overlapping_sels","title":"Find overlapping selections — overlapping_sels","text":"overlapping_sels finds selections overlap time within given sound file.","code":""},{"path":"https://marce10.github.io/warbleR/reference/overlapping_sels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find overlapping selections — overlapping_sels","text":"","code":"overlapping_sels(X, index = FALSE, pb = TRUE, max.ovlp = 0, relabel = FALSE, drop = FALSE, priority = NULL, priority.col = NULL, unique.labs = NULL, indx.row = FALSE, parallel = 1, verbose = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/overlapping_sels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find overlapping selections — overlapping_sels","text":"X 'selection_table' object data frame following columns: 1) \"sound.files\": name sound files, 2) \"selec\": number selections, 3) \"start\": start time selections, 4) \"end\": end time selections. index Logical. Indicates index overlapping selections returned. Default FALSE. pb Logical argument control progress bar messages. Default TRUE. max.ovlp Numeric vector length 1 specifying maximum overlap allowed (seconds) . Default 0. relabel Logical. TRUE selection names ('selec' column) reset within sound files. Default FALSE. drop Logical. TRUE, 2 selections overlap function remove one overlapping selection. Default FALSE. priority Character vector. Controls priority criteria used removing overlapped selections. must list levels column used determine priority (argument priority.col) desired priority order. Default NULL. priority.col Character vector length 1 name column use determine priority overlapped selections. Default NULL. unique.labs DEPRECATED. indx.row Logical. TRUE character column indices selections overlapped selection added ouput data frame (index = TRUE). instance, selections rows 1,2 3 overlapped , 'indx.row' value \"1/2/3\" . However, selection 3 overlaps  2 1, returns, \"1/2\" row 1, \"1/2/3\" row 2, \"2/3\" row 3. Default FALSE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). verbose Logical control messages printed console.","code":""},{"path":"https://marce10.github.io/warbleR/reference/overlapping_sels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find overlapping selections — overlapping_sels","text":"data frame columns X plus additional column ('ovlp.sels') indicating selections overlap. instance, selections rows 1,2  overlap 2 3 also overlap, 'ovlp.sels' label 3 selections. drop = TRUE non-overlapping selections returned.2 selections overlap first one kept. arguments 'priority' 'priority.col' can used modified criterium droping overlapping selections.","code":""},{"path":"https://marce10.github.io/warbleR/reference/overlapping_sels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find overlapping selections — overlapping_sels","text":"function detects selections within selection table overlap time. Selections must listed data frame similar lbh_selec_table. Note row names set 1:nrow(X).","code":""},{"path":"https://marce10.github.io/warbleR/reference/overlapping_sels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find overlapping selections — overlapping_sels","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/overlapping_sels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find overlapping selections — overlapping_sels","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/overlapping_sels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find overlapping selections — overlapping_sels","text":"","code":"{   # no overlap   overlapping_sels(X = lbh_selec_table)    # modified lbh_selec_table to make the first and second selection overlap   Y <- lbh_selec_table   Y$end[4] <- 1.5    overlapping_sels(X = Y)    # drop overlapping   overlapping_sels(X = Y, drop = TRUE)    # get index instead   overlapping_sels(X = Y, index = TRUE) } #> No overlapping selections were found #> 2 selections overlapped #> 2 selections overlapped, 1 were removed #> [1] 4 5"},{"path":"https://marce10.github.io/warbleR/reference/ovlp_sels.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for overlapping_sels — ovlp_sels","title":"alternative name for overlapping_sels — ovlp_sels","text":"alternative name overlapping_sels","code":""},{"path":"https://marce10.github.io/warbleR/reference/ovlp_sels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for overlapping_sels — ovlp_sels","text":"","code":"ovlp_sels(   X,   index = FALSE,   pb = TRUE,   max.ovlp = 0,   relabel = FALSE,   drop = FALSE,   priority = NULL,   priority.col = NULL,   unique.labs = NULL,   indx.row = FALSE,   parallel = 1,   verbose = TRUE )"},{"path":"https://marce10.github.io/warbleR/reference/ovlp_sels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for overlapping_sels — ovlp_sels","text":"see overlapping_sels documentation. ovlp_sels deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/phylo_spectro.html","id":null,"dir":"Reference","previous_headings":"","what":"Add spectrograms onto phylogenetic trees — phylo_spectro","title":"Add spectrograms onto phylogenetic trees — phylo_spectro","text":"phylo_spectro Add spectrograms tips objects class phylo.","code":""},{"path":"https://marce10.github.io/warbleR/reference/phylo_spectro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add spectrograms onto phylogenetic trees — phylo_spectro","text":"","code":"phylo_spectro(X, tree, type = \"phylogram\", par.mar = rep(1, 4),  size = 1, offset = 0, path = NULL, ladder = NULL, horizontal = TRUE, axis = TRUE,  box = TRUE, ...)"},{"path":"https://marce10.github.io/warbleR/reference/phylo_spectro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add spectrograms onto phylogenetic trees — phylo_spectro","text":"X 'selection_table', 'extended_selection_table' data frame containing columns sound file name  (sound.files), selection number (selec), start end time signals (start end).  'top.freq' 'bottom.freq' columns optional. addition, data frame must include column 'tip.label' contains names tip labels found tree (e.g. 'tree$tip.label). column used match rows tip labels. using  'extended_selection_table' sound files required (see selection_table). tree Object class 'phylo' (.e. phylogenetic tree). Ultrametric trees may produce better results. NULL (default) current working directory used. Tip labels must match names provided 'tip.label' column 'X' (see 'X' argument). type Character string length 1 specifying type phylogeny drawn  (plot.phylo). 'phylogram' (default) 'fan' allowed. par.mar Numeric vector 4 elements, default rep(1, 4). Specifies number lines  inner plot margins axis labels fall, form c(bottom, left, top, right).  See par. See 'inner.par' argument controlling spectrogram margins. size Numeric vector length 1 controlling relative size spectrograms. Higher numbers increase height spectrograms. Default 1.  Numbers range c(>0, Inf) allowed. offset Numeric vector length 1 controlling space tips spectrograms. Default 0. path Character string containing directory path sound files located.  NULL (default) current working directory used. ladder Character string controlling whether phylogeny ladderized (.e. internal structure  tree reorganized get ladderized effect plotted). 'left' 'right' values accepted. Default  NULL (ladderization). See ladderize details. horizontal Logical. Controls whether spectrograms fan phylogeny place horizontal position  FALSE angle tree tips. Currently horizontal spectrograms available. axis Logical control Y X axis spectrograms plotted (see box). Default TRUE. box Logical control box around spectrograms plotted (see box). Default TRUE. ... Additional arguments passed internal spectrogram  creating function (spectrograms) phylogeny plotting function (plot.phylo)  customizing graphical output. rightwards phylogenies can plotted.","code":""},{"path":"https://marce10.github.io/warbleR/reference/phylo_spectro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add spectrograms onto phylogenetic trees — phylo_spectro","text":"phylogenetic tree spectrograms tree tips plotted current graphical device.","code":""},{"path":"https://marce10.github.io/warbleR/reference/phylo_spectro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add spectrograms onto phylogenetic trees — phylo_spectro","text":"function add spectrograms sounds annotated selection table ('X' argument) onto tips phylogenetic tree.  'tip.label' column 'X' used match spectrograms tree tips. function uses internally plot.phylo function plot tree  spectrograms function create spectrograms. Arguments functions can provided customization.","code":""},{"path":"https://marce10.github.io/warbleR/reference/phylo_spectro.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Add spectrograms onto phylogenetic trees — phylo_spectro","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/phylo_spectro.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add spectrograms onto phylogenetic trees — phylo_spectro","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/phylo_spectro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add spectrograms onto phylogenetic trees — phylo_spectro","text":"","code":"{  # \\donttest{ # First set empty folder   # save example sound files data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))  # set spectrogram options (can be done at the phylo_spectro() function too) warbleR_options(wl = 200, ovlp = 90, flim = \"frange\", wav.path = tempdir())  # subset example selection table X <- lbh_selec_table[1:8, ]  # create random tree (need ape to be installed) set.seed(1) tree <- ape::rtree(nrow(X))  # Force tree to be ultrametric tree <- ape::chronoMPL(tree)  # add tip label column to example selection table (just for the sake of the example) X$tip.label <- tree$tip.label  # print phylogram with spectros phylo_spectro(X = X, tree = tree, par.mar = c(0, 0, 0, 8), size = 2)  # no margin in spectrograms and showing tip labels (higher offset) phylo_spectro(X = X, tree = tree, offset = 0.1, par.mar = c(0, 0, 0, 6),  inner.mar = rep(0, 4), size = 2, box = FALSE, axis = FALSE)  # print fan tree and no margin in spectrograms phylo_spectro(X = X, tree = tree, offset = 0.6, par.mar = rep(3, 4), inner.mar = rep(0, 4), size = 2, type = \"fan\", show.tip.label = FALSE, box = FALSE, axis = FALSE)  # changing edge color and witdh phylo_spectro(X = X, tree = tree, offset = 0.2, par.mar = rep(3, 4), inner.mar = rep(0, 4),  size = 2, type = \"fan\", show.tip.label = FALSE, edge.color = \"red\", edge.width = 2,  box = FALSE, axis = FALSE)  # plotting a tree representing cross-correlation distances  xcorr_mat <- cross_correlation(X, bp = c(1, 10))  xc.tree <- ape::chronoMPL(ape::as.phylo(hclust(as.dist(1 - xcorr_mat))))  X$tip.label <- xc.tree$tip.label  phylo_spectro(X = X, tree = xc.tree, offset = 0.03, par.mar = rep(3, 4),  inner.mar = rep(0, 4), size = 0.3, type = \"fan\", show.tip.label = FALSE,  edge.color = \"red\", edge.width = 2, box = FALSE, axis = FALSE)   # } }    #> creating spectrogram matrices (step 1 of 2): #> running cross-correlation (step 2 of 2):"},{"path":"https://marce10.github.io/warbleR/reference/plot_coordination.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinated singing graphs — plot_coordination","title":"Coordinated singing graphs — plot_coordination","text":"plot_coordination creates graphs coordinated singing highlights signals overlap time. signals represented polygons different colors.","code":""},{"path":"https://marce10.github.io/warbleR/reference/plot_coordination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinated singing graphs — plot_coordination","text":"","code":"plot_coordination(X, only.coor = FALSE, ovlp = TRUE, xl = 1, res= 80, it = \"jpeg\", img = TRUE, tlim = NULL, pb = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/plot_coordination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinated singing graphs — plot_coordination","text":"X Data frame containing columns singing event (sing.event), individual (indiv), start end time signal (start end). .coor Logical. TRUE segment individuals singing included (solo singing removed). Default FALSE. ovlp Logical. TRUE vocalizations overlap time highlighted. Default TRUE. xl Numeric vector length 1, constant scale spectrogram width. Default 1. res Numeric argument length 1. Controls image resolution. Default 80. character vector length 1 giving image type used. Currently \"tiff\" \"jpeg\" admitted. Default \"jpeg\". img Logical argument. FALSE, image files produced graphs shown current graphic device. Default TRUE. tlim Numeric vector length 2 indicating start end time coordinated singing events displayed graphs. pb Logical argument control progress bar messages. Default TRUE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/plot_coordination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinated singing graphs — plot_coordination","text":"function returns list graphs, one singing event input data frame. graphs can plotted simply calling list. 'img' TRUE graphs also saved working directory files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/plot_coordination.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coordinated singing graphs — plot_coordination","text":"function provides visualization coordination acoustic signals. Signals shown polygon across time axis. also shows signals overlap, amount overlap, highlights individual responsible overlap using color code. width polygons depicting time overlap.","code":""},{"path":"https://marce10.github.io/warbleR/reference/plot_coordination.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Coordinated singing graphs — plot_coordination","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/reference/plot_coordination.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coordinated singing graphs — plot_coordination","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/plot_coordination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinated singing graphs — plot_coordination","text":"","code":"if (FALSE) { # load simulate singing events (see data documentation) data(sim_coor_sing)  #' # make plot_coordination in graphic device format cgs <- plot_coordination(X = sim_coor_sing, ovlp = TRUE, only.coor = FALSE, img = FALSE)  cgs }"},{"path":"https://marce10.github.io/warbleR/reference/print.autodetec.output.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for class autodetec.output — print.autodetec.output","title":"print method for class autodetec.output — print.autodetec.output","text":"print method class autodetec.output","code":""},{"path":"https://marce10.github.io/warbleR/reference/print.autodetec.output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for class autodetec.output — print.autodetec.output","text":"","code":"# S3 method for autodetec.output print(x, ...)"},{"path":"https://marce10.github.io/warbleR/reference/print.autodetec.output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for class autodetec.output — print.autodetec.output","text":"x Object class autodetec.output, generated auto_detec. ... arguments passed methods. Ignored printing selection tables.","code":""},{"path":"https://marce10.github.io/warbleR/reference/print.extended_selection_table.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for class extended_selection_table — print.extended_selection_table","title":"print method for class extended_selection_table — print.extended_selection_table","text":"print method class extended_selection_table","code":""},{"path":"https://marce10.github.io/warbleR/reference/print.extended_selection_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for class extended_selection_table — print.extended_selection_table","text":"","code":"# S3 method for extended_selection_table print(x, ...)"},{"path":"https://marce10.github.io/warbleR/reference/print.extended_selection_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for class extended_selection_table — print.extended_selection_table","text":"x Object class extended_selection_table, generated selection_table. ... arguments passed methods. Ignored printing extended selection tables.","code":""},{"path":"https://marce10.github.io/warbleR/reference/print.find_peaks.output.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for class xcorr.output — print.find_peaks.output","title":"print method for class xcorr.output — print.find_peaks.output","text":"print method class xcorr.output","code":""},{"path":"https://marce10.github.io/warbleR/reference/print.find_peaks.output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for class xcorr.output — print.find_peaks.output","text":"","code":"# S3 method for find_peaks.output print(x, ...)"},{"path":"https://marce10.github.io/warbleR/reference/print.find_peaks.output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for class xcorr.output — print.find_peaks.output","text":"x Object class find_peaks.output, generated find_peaks. ... arguments passed methods. Ignored printing selection tables.","code":""},{"path":"https://marce10.github.io/warbleR/reference/print.selection_table.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for class selection_table — print.selection_table","title":"print method for class selection_table — print.selection_table","text":"print method class selection_table","code":""},{"path":"https://marce10.github.io/warbleR/reference/print.selection_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for class selection_table — print.selection_table","text":"","code":"# S3 method for selection_table print(x, ...)"},{"path":"https://marce10.github.io/warbleR/reference/print.selection_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for class selection_table — print.selection_table","text":"x Object class selection_table, generated selection_table. ... arguments passed methods. Ignored printing selection tables.","code":""},{"path":"https://marce10.github.io/warbleR/reference/print.xcorr.output.html","id":null,"dir":"Reference","previous_headings":"","what":"print method for class xcorr.output — print.xcorr.output","title":"print method for class xcorr.output — print.xcorr.output","text":"print method class xcorr.output","code":""},{"path":"https://marce10.github.io/warbleR/reference/print.xcorr.output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print method for class xcorr.output — print.xcorr.output","text":"","code":"# S3 method for xcorr.output print(x, ...)"},{"path":"https://marce10.github.io/warbleR/reference/print.xcorr.output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print method for class xcorr.output — print.xcorr.output","text":"x Object class xcorr.output, generated cross_correlation. ... arguments passed methods. Ignored printing selection tables.","code":""},{"path":"https://marce10.github.io/warbleR/reference/querxc.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for query_xc — querxc","title":"alternative name for query_xc — querxc","text":"alternative name query_xc","code":""},{"path":"https://marce10.github.io/warbleR/reference/querxc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for query_xc — querxc","text":"","code":"querxc(   qword,   download = FALSE,   X = NULL,   file.name = c(\"Genus\", \"Specific_epithet\"),   parallel = 1,   path = NULL,   pb = TRUE )"},{"path":"https://marce10.github.io/warbleR/reference/querxc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for query_xc — querxc","text":"see query_xc documentation. querxc deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/query_xc.html","id":null,"dir":"Reference","previous_headings":"","what":"Access 'Xeno-Canto' recordings and metadata — query_xc","title":"Access 'Xeno-Canto' recordings and metadata — query_xc","text":"query_xc downloads recordings metadata Xeno-Canto.","code":""},{"path":"https://marce10.github.io/warbleR/reference/query_xc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access 'Xeno-Canto' recordings and metadata — query_xc","text":"","code":"query_xc(qword, download = FALSE, X = NULL, file.name = c(\"Genus\", \"Specific_epithet\"), parallel = 1, path = NULL, pb = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/query_xc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access 'Xeno-Canto' recordings and metadata — query_xc","text":"qword Character vector length one indicating genus, genus species, query 'Xeno-Canto' database. example, Phaethornis Phaethornis longirostris. complex queries can done using search terms follow xeno-canto advance query syntax. syntax uses tags search within particular aspect recordings (e.g. country, location, sound type). Tags form tag:searchterm'. instance, 'type:song' search recordings sound type description contains word 'song'. Several tags can included query. query \"phaethornis cnt:belize' return results birds genus Phaethornis recorded Belize. Queries case insensitive. Make sure taxonomy related tags (Genus scientific name) found first multi-tag queries. See Xeno-Canto's search help full description see examples queries using terms one word. download Logical argument. FALSE recording file names associated metadata downloaded. TRUE, recordings also downloaded working directory .mp3 files. Default FALSE. Note recording already working directory (downloading process interrupted) skipped. Hence, resuming downloading processes start scratch. X Data frame 'Recording_ID' column column listed file.name argument. recordings listed data frame download (download argument automatically set TRUE). can used select recordings downloaded based attributes. file.name Character vector indicating tags (column names) included sound file names (download = TRUE). Several tags can included. NULL 'Xeno-Canto' recording identification number (\"Recording_ID\") used. Default c(\"Genus\", \"Specific_epithet\"). Note recording id always used (whether listed users) avoid duplicated names. parallel Numeric. Controls whether parallel computing applied downloading mp3 files. specifies number cores used. Default 1 (.e. parallel computing). Applied getting metadata downloading files. path Character string containing directory path sound files saved. NULL (default) current working directory used. pb Logical argument control progress bar. Default TRUE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/query_xc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access 'Xeno-Canto' recordings and metadata — query_xc","text":"X provided function returns data frame following recording information: recording ID, Genus, Specific epithet, Subspecies, English name, Recordist, Country, Locality, Latitude, Longitude, Vocalization type, Audio file, License, URL, Quality, Time, Date. Sound files .mp3 format downloaded working directory download = TRUE X provided; column indicating  names downloaded files included output data frame.","code":""},{"path":"https://marce10.github.io/warbleR/reference/query_xc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access 'Xeno-Canto' recordings and metadata — query_xc","text":"function queries avian vocalization recordings open-access online repository Xeno-Canto. can return recordings metadata download associated sound files. Complex queries can done using search terms follow  xeno-canto advance query syntax (check \"qword\" argument description).  Files double-checked downloading \"empty\" files re-downloaded.  File downloading process can interrupted resume later long working directory .  Maps recording coordinates can produced using map_xc.","code":""},{"path":"https://marce10.github.io/warbleR/reference/query_xc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Access 'Xeno-Canto' recordings and metadata — query_xc","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/query_xc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Access 'Xeno-Canto' recordings and metadata — query_xc","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/query_xc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access 'Xeno-Canto' recordings and metadata — query_xc","text":"","code":"if (FALSE) { # search without downloading df1 <- query_xc(qword = \"Phaethornis anthophilus\", download = FALSE) View(df1)  # downloading files query_xc(qword = \"Phaethornis anthophilus\", download = TRUE, path = tempdir())  # check this folder tempdir()  ## search using xeno-canto advance query ### orth.pap <- query_xc(qword = \"gen:orthonyx cnt:papua loc:tari\", download = FALSE)  # download file using the output data frame as input query_xc(X = orth.pap, path = tempdir())  # use quotes for queries with more than 1 word (e.g. Costa Rica),note that the # single quotes are used for the whole 'qword' and double quotes for the 2-word term inside # Phaeochroa genus in Costa Rica phae.cr <- query_xc(qword = 'gen:phaeochroa cnt:\"costa rica\"', download = FALSE)  # several terms can be searched for in the same field # search for all female songs in sound type femsong <- query_xc(qword = \"type:song type:female\", download = FALSE) }"},{"path":"https://marce10.github.io/warbleR/reference/rbind.extended_selection_table.html","id":null,"dir":"Reference","previous_headings":"","what":"rbind method for class extended_selection_table — rbind.extended_selection_table","title":"rbind method for class extended_selection_table — rbind.extended_selection_table","text":"rbind method class extended_selection_table","code":""},{"path":"https://marce10.github.io/warbleR/reference/rbind.extended_selection_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rbind method for class extended_selection_table — rbind.extended_selection_table","text":"","code":"# S3 method for extended_selection_table rbind(..., deparse.level = 1)"},{"path":"https://marce10.github.io/warbleR/reference/rbind.extended_selection_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rbind method for class extended_selection_table — rbind.extended_selection_table","text":"... Objects class extended_selection_table, generated selection_table.","code":""},{"path":"https://marce10.github.io/warbleR/reference/rbind.selection_table.html","id":null,"dir":"Reference","previous_headings":"","what":"rbind method for class selection_table — rbind.selection_table","title":"rbind method for class selection_table — rbind.selection_table","text":"rbind method class selection_table","code":""},{"path":"https://marce10.github.io/warbleR/reference/rbind.selection_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rbind method for class selection_table — rbind.selection_table","text":"","code":"# S3 method for selection_table rbind(..., deparse.level = 1)"},{"path":"https://marce10.github.io/warbleR/reference/rbind.selection_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rbind method for class selection_table — rbind.selection_table","text":"... Objects class selection_table, generated selection_table.","code":""},{"path":"https://marce10.github.io/warbleR/reference/read_sound_file.html","id":null,"dir":"Reference","previous_headings":"","what":"An extended version of read_wave that reads several sound file formats and files from selection tables — read_sound_file","title":"An extended version of read_wave that reads several sound file formats and files from selection tables — read_sound_file","text":"read_sound_file reads several sound file formats well files referenced selection tables","code":""},{"path":"https://marce10.github.io/warbleR/reference/read_sound_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An extended version of read_wave that reads several sound file formats and files from selection tables — read_sound_file","text":"","code":"read_sound_file(X, index, from = X$start[index], to = X$end[index], channel = X$channel[index], header = FALSE, path = NULL)"},{"path":"https://marce10.github.io/warbleR/reference/read_sound_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An extended version of read_wave that reads several sound file formats and files from selection tables — read_sound_file","text":"X 'data.frame', 'selection_table' 'extended_selection_table' containing columns sound file name (sound.files), selection number (selec), start end time signals (start end). Alternatively, name sound file URL address sound file can provided. function can read sound files 'wav', 'mp3', 'flac' 'wac' format. file name can contain directory path. 'top.freq' 'bottom.freq' columns optional. Default NULL. index Index selection 'X' read. Ignored 'X' NULL. start reading, seconds. Default X$start[index]. stop reading, seconds. Default X$end[index]. channel Channel read sound file (1 = left, 2 = right, higher number multichannel waves). Default X$channel[index]. 'channel' column exist read first channel. header TRUE, header information Wave object returned, otherwise (default) whole Wave object. path Character string containing directory path sound files located. NULL (default) current working directory used. 'X' refers sound file including directory 'path' ignored.","code":""},{"path":"https://marce10.github.io/warbleR/reference/read_sound_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An extended version of read_wave that reads several sound file formats and files from selection tables — read_sound_file","text":"object class \"Wave\".","code":""},{"path":"https://marce10.github.io/warbleR/reference/read_sound_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An extended version of read_wave that reads several sound file formats and files from selection tables — read_sound_file","text":"function wrapper readWave read sound files, including referenced selection tables. also used internally warbleR functions read wave objects extended selection tables (see selection_table details). reading 'flac' files windows path .exe required. can set globally using 'flac.path' argument warbleR_options. Note reading 'flac' files requires creating temporary copy 'wav' format, can particularly slow long files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/read_sound_file.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"An extended version of read_wave that reads several sound file formats and files from selection tables — read_sound_file","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/reference/read_sound_file.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"An extended version of read_wave that reads several sound file formats and files from selection tables — read_sound_file","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/read_sound_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An extended version of read_wave that reads several sound file formats and files from selection tables — read_sound_file","text":"","code":"if (FALSE) { # write wave files with lower case file extension data(list = c(\"Phae.long1\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"))  # read from selection table read_sound_file(X = lbh_selec_table, index = 1, path = tempdir())  # from extended selection table library(NatureSounds) read_sound_file(X = lbh.est, index = 1)  # read from selection table read_sound_file(X = lbh_selec_table, index = 1, path = tempdir())  # read WAV filepath <- system.file(\"extdata\", \"recording.wav\", package = \"bioacoustics\") read_sound_file(filepath)  # read MP3 filepath <- system.file(\"extdata\", \"recording.mp3\", package = \"bioacoustics\") read_sound_file(filepath)  # read WAC filepath <- system.file(\"extdata\", \"recording_20170716_230503.wac\", package = \"bioacoustics\") read_sound_file(filepath, from = 0, to = 0.2)  # URL file read_sound_file(X = \"https://www.xeno-canto.org/513948/download\") }"},{"path":"https://marce10.github.io/warbleR/reference/read_wave.html","id":null,"dir":"Reference","previous_headings":"","what":"A wrapper for tuneR's readWave that read sound files listed within selection tables — read_wave","title":"A wrapper for tuneR's readWave that read sound files listed within selection tables — read_wave","text":"read_wave wrapper tuneR's readWave function read sound files listed data frames selection tables","code":""},{"path":"https://marce10.github.io/warbleR/reference/read_wave.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper for tuneR's readWave that read sound files listed within selection tables — read_wave","text":"","code":"read_wave(X, index, from = X$start[index], to = X$end[index], channel = NULL, header = FALSE, path = NULL)"},{"path":"https://marce10.github.io/warbleR/reference/read_wave.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper for tuneR's readWave that read sound files listed within selection tables — read_wave","text":"X 'data.frame', 'selection_table' 'extended_selection_table' containing columns sound file name (sound.files), selection number (selec), start end time signals (start end). Alternatively, name '.wav' file URL address '.wav' '.mp3' file can provided. file name can contain directory path. 'top.freq' 'bottom.freq' columns optional. Default NULL. index Index selection 'X' read. Ignored 'X' NULL. start reading, seconds. Default X$start[index]. stop reading, seconds. Default X$end[index].  Inf can used reading entire sound file ('X' sound file name), channel Channel read sound file (1 = left, 2 = right, higher number multichannel waves). NULL (default) higher number channels wave first channel used. applies '.wav' files local directories. header TRUE, header information Wave object returned, otherwise (default) whole Wave object. path Character string containing directory path sound files located. NULL (default) current working directory used. 'X' refers sound file including directory 'path' ignored.","code":""},{"path":"https://marce10.github.io/warbleR/reference/read_wave.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A wrapper for tuneR's readWave that read sound files listed within selection tables — read_wave","text":"object class \"Wave\".","code":""},{"path":"https://marce10.github.io/warbleR/reference/read_wave.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A wrapper for tuneR's readWave that read sound files listed within selection tables — read_wave","text":"function wrapper readWave read sound files listed within selection tables. also used internally warbleR functions read wave objects extended selection tables (see selection_table details).","code":""},{"path":"https://marce10.github.io/warbleR/reference/read_wave.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A wrapper for tuneR's readWave that read sound files listed within selection tables — read_wave","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/reference/read_wave.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A wrapper for tuneR's readWave that read sound files listed within selection tables — read_wave","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/read_wave.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A wrapper for tuneR's readWave that read sound files listed within selection tables — read_wave","text":"","code":"{   # write wave files with lower case file extension   data(list = c(\"Phae.long1\"))   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"))    # read from selection table   read_wave(X = lbh_selec_table, index = 1, path = tempdir())    # from extended selection table   library(NatureSounds)   read_wave(X = lbh.est, index = 1)    # read WAV   filepath <- system.file(\"extdata\", \"recording.wav\", package = \"bioacoustics\")   read_wave(filepath)    # read MP3   filepath <- system.file(\"extdata\", \"recording.mp3\", package = \"bioacoustics\")   read_wave(filepath)    # URL file   read_wave(X = \"https://www.xeno-canto.org/513948/download\") } #>  #> Wave Object #> \tNumber of Samples:      274176 #> \tDuration (seconds):     6.22 #> \tSamplingrate (Hertz):   44100 #> \tChannels (Mono/Stereo): Mono #> \tPCM (integer format):   TRUE #> \tBit (8/16/24/32/64):    16  #>"},{"path":"https://marce10.github.io/warbleR/reference/remove_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove channels in wave files — remove_channels","title":"Remove channels in wave files — remove_channels","text":"remove_channels remove channels wave files","code":""},{"path":"https://marce10.github.io/warbleR/reference/remove_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove channels in wave files — remove_channels","text":"","code":"remove_channels(files = NULL, channels, path = NULL, parallel = 1, pb = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/remove_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove channels in wave files — remove_channels","text":"files Character vector indicating files analyzed. provided. Optional. wave files working directory (path) processed. channels Numeric vector indicating index (channel number) channels kept (left = 1, right = 2; 3 inf multichannel sound files). path Character string containing directory path sound files located. NULL (default) current working directory used. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar messages. Default TRUE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/remove_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove channels in wave files — remove_channels","text":"Sound files converted saved new folder \"converted_sound_files\". `img = TRUE` spectrogram images highlighting silence segments removed also saved.","code":""},{"path":"https://marce10.github.io/warbleR/reference/remove_channels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove channels in wave files — remove_channels","text":"function removes channels wave files. works regular multichannel wave files. Converted files saved new directory (\"converted_sound_files\") original files modified.","code":""},{"path":"https://marce10.github.io/warbleR/reference/remove_channels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Remove channels in wave files — remove_channels","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/remove_channels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove channels in wave files — remove_channels","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/remove_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove channels in wave files — remove_channels","text":"","code":"{ # save sound file examples data(\"Phae.long1\") Phae.long1.2 <- stereo(Phae.long1, Phae.long1)  writeWave(Phae.long1.2, file.path(tempdir(), \"Phae.long1.2.wav\"))  remove_channels(channels = 1, path = tempdir())  #check this floder tempdir() } #> [1] \"/tmp/RtmpV1BiAC\""},{"path":"https://marce10.github.io/warbleR/reference/remove_silence.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove silence in wave files — remove_silence","title":"Remove silence in wave files — remove_silence","text":"remove_silence Removes silences wave files","code":""},{"path":"https://marce10.github.io/warbleR/reference/remove_silence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove silence in wave files — remove_silence","text":"","code":"remove_silence(path = NULL, min.sil.dur = 2, img = TRUE, it = \"jpeg\", flim = NULL, files = NULL, flist = NULL, parallel = 1, pb = TRUE, downsample = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/remove_silence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove silence in wave files — remove_silence","text":"path Character string containing directory path sound files located. NULL (default) current working directory used. min.sil.dur Numeric. Controls minimum duration silence segments removed. img Logical argument. FALSE, image files produced. Default TRUE. character vector length 1  giving image type used. Currently \"tiff\" \"jpeg\" admitted. Default \"jpeg\". flim numeric vector length 2 indicating highest lowest frequency limits (kHz) spectrogram spectro. Default NULL. Ignored `img = FALSE`. files character vector factor indicating subset files analyzed. provided wave files working directory (path) processed. flist DEPRECATED. Please use 'files' instead. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar messages. Default TRUE. downsample Logical indicating whether files downsampled 5000 kHz sampling rate. can used speed process, make function ignore sound/noise 2500 kHz. Default TRUE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/remove_silence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove silence in wave files — remove_silence","text":"Sound files silence segments removed saved new folder \"silence-removed_files\" .wav format. `img = TRUE` spectrogram images highlighting silence segments removed also saved.","code":""},{"path":"https://marce10.github.io/warbleR/reference/remove_silence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove silence in wave files — remove_silence","text":"function removes silence segments (.e. segments low amplitude values) wave files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/remove_silence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Remove silence in wave files — remove_silence","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/remove_silence.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove silence in wave files — remove_silence","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/remove_silence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove silence in wave files — remove_silence","text":"","code":"{ # save sound file examples data(list = c(\"Phae.long1\", \"Phae.long2\",\"lbh_selec_table\")) sil <- silence(samp.rate = 22500, duration = 3, xunit = \"time\")   wv1 <- pastew(pastew(Phae.long1, sil, f = 22500, output = \"Wave\"), Phae.long2, f = 22500, output = \"Wave\")  #check silence in between amplitude peaks env(wv1)   #save wave file  writeWave(object = wv1, filename = file.path(tempdir(), \"wv1.wav\"),   extensible = FALSE)  #remove silence # remove_silence(files = \"wv1.wav\", pb = FALSE, path = tempdir())  #check this floder tempdir() }  #> [1] \"/tmp/RtmpV1BiAC\""},{"path":"https://marce10.github.io/warbleR/reference/rename_est_waves.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename wave objects and associated metadata in extended selection tables — rename_est_waves","title":"Rename wave objects and associated metadata in extended selection tables — rename_est_waves","text":"rename_est_waves rename wave objects associated metadata extended selection tables","code":""},{"path":"https://marce10.github.io/warbleR/reference/rename_est_waves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename wave objects and associated metadata in extended selection tables — rename_est_waves","text":"","code":"rename_est_waves(X, new.sound.files, new.selec = NULL)"},{"path":"https://marce10.github.io/warbleR/reference/rename_est_waves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename wave objects and associated metadata in extended selection tables — rename_est_waves","text":"X object class 'extended_selection_table'. new.sound.files Character vector length equals number wave objects extended selection table (length(attr(X, \"wave.objects\"))).Specifies new names used wave objects sound file column. Note rename wave objects associated attributes data 'X'. new.selec Numeric character vector length equals number rows 'X' specify 'selec' column labels. Default NULL. provided 'selec' column kept unchanged. Note combination 'sound.files' 'selec' columns must produce unique IDs selection (row).","code":""},{"path":"https://marce10.github.io/warbleR/reference/rename_est_waves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename wave objects and associated metadata in extended selection tables — rename_est_waves","text":"extended selection table rename sound files names data frame attributes. function adds columns previous sound file names ('selec' provided).","code":""},{"path":"https://marce10.github.io/warbleR/reference/rename_est_waves.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rename wave objects and associated metadata in extended selection tables — rename_est_waves","text":"function allow users change names 'sound.files' 'selec' columns extended selection tables. names can become long manipulations used produce extended tables.","code":""},{"path":"https://marce10.github.io/warbleR/reference/rename_est_waves.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rename wave objects and associated metadata in extended selection tables — rename_est_waves","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/rename_est_waves.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename wave objects and associated metadata in extended selection tables — rename_est_waves","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/rename_est_waves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename wave objects and associated metadata in extended selection tables — rename_est_waves","text":"","code":"{ data(\"lbh.est\")  # order by sound file name lbh.est <- lbh.est[order(lbh.est$sound.files),]  # create new sound file name nsf <- sapply(strsplit(lbh.est$sound.files, \".wav\",fixed = TRUE), \"[\",1)  slc <- vector(length = nrow(lbh.est)) slc[1] <- 1  for(i in 2:length(slc)) if (nsf[i - 1] == nsf[i]) slc[i] <- slc[i - 1] + 1 else slc[i] <- 1  nsf <- paste(nsf, slc, sep = \"_\")  # rename sound files Y <- rename_est_waves(X = lbh.est, new.sound.files = nsf) }"},{"path":"https://marce10.github.io/warbleR/reference/rename_waves_est.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for rename_est_waves — rename_waves_est","title":"alternative name for rename_est_waves — rename_waves_est","text":"alternative name rename_est_waves","code":""},{"path":"https://marce10.github.io/warbleR/reference/rename_waves_est.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for rename_est_waves — rename_waves_est","text":"","code":"rename_waves_est(X, new.sound.files, new.selec = NULL)"},{"path":"https://marce10.github.io/warbleR/reference/rename_waves_est.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for rename_est_waves — rename_waves_est","text":"see rename_est_waves documentation. rename_waves_est deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/resample_est.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample wave objects in a extended selection table — resample_est","title":"Resample wave objects in a extended selection table — resample_est","text":"resample_est changes sampling rate bit depth wave objects extended selection table.","code":""},{"path":"https://marce10.github.io/warbleR/reference/resample_est.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample wave objects in a extended selection table — resample_est","text":"","code":"resample_est(X, samp.rate = 44.1, bit.depth = 16,  avoid.clip = TRUE, pb = FALSE, parallel = 1)"},{"path":"https://marce10.github.io/warbleR/reference/resample_est.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample wave objects in a extended selection table — resample_est","text":"X object class 'extended_selection_table' (see selection_table). samp.rate Numeric vector length 1 sampling rate (kHz) output files. Default NULL. bit.depth Numeric vector length 1 dynamic interval (.e. bit depth) output files. avoid.clip Logical control whether volume automatically adjusted avoid clipping high amplitude samples resampling. Ignored  'sox = FALSE. Default TRUE. pb Logical argument control progress bar. Default FALSE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing).","code":""},{"path":"https://marce10.github.io/warbleR/reference/resample_est.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample wave objects in a extended selection table — resample_est","text":"extended selection table modified wave objects.","code":""},{"path":"https://marce10.github.io/warbleR/reference/resample_est.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resample wave objects in a extended selection table — resample_est","text":"function aims simplify process homogenizing sound files (sampling rate bit depth). necessary step running (bio)acoustic analysis. SOX must installed.","code":""},{"path":"https://marce10.github.io/warbleR/reference/resample_est.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Resample wave objects in a extended selection table — resample_est","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/resample_est.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Resample wave objects in a extended selection table — resample_est","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr) #last modification oct-15-2018 (MAS)","code":""},{"path":"https://marce10.github.io/warbleR/reference/resample_est.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resample wave objects in a extended selection table — resample_est","text":"","code":"if (FALSE) { data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))  # create extended selection table X <- selection_table(   X = lbh_selec_table, extended = TRUE, confirm.extended = FALSE, pb = FALSE,   path = tempdir() )  # resample Y <- resample_est(X) }"},{"path":"https://marce10.github.io/warbleR/reference/resample_est_waves.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for resample_est — resample_est_waves","title":"alternative name for resample_est — resample_est_waves","text":"alternative name resample_est","code":""},{"path":"https://marce10.github.io/warbleR/reference/resample_est_waves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for resample_est — resample_est_waves","text":"","code":"resample_est_waves(   X,   samp.rate = 44.1,   bit.depth = 16,   avoid.clip = TRUE,   pb = FALSE,   parallel = 1 )"},{"path":"https://marce10.github.io/warbleR/reference/resample_est_waves.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for resample_est — resample_est_waves","text":"see resample_est documentation. resample_est_waves deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/rm_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for remove_channels — rm_channels","title":"alternative name for remove_channels — rm_channels","text":"alternative name remove_channels","code":""},{"path":"https://marce10.github.io/warbleR/reference/rm_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for remove_channels — rm_channels","text":"","code":"rm_channels(files = NULL, channels, path = NULL, parallel = 1, pb = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/rm_channels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for remove_channels — rm_channels","text":"see remove_channels documentation. rm_channels deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/rm_sil.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for remove_silence — rm_sil","title":"alternative name for remove_silence — rm_sil","text":"alternative name remove_silence","code":""},{"path":"https://marce10.github.io/warbleR/reference/rm_sil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for remove_silence — rm_sil","text":"","code":"rm_sil(   path = NULL,   min.sil.dur = 2,   img = TRUE,   it = \"jpeg\",   flim = NULL,   files = NULL,   flist = NULL,   parallel = 1,   pb = TRUE,   downsample = TRUE )"},{"path":"https://marce10.github.io/warbleR/reference/rm_sil.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for remove_silence — rm_sil","text":"see remove_silence documentation. rm_sil deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/selec.table.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative name for lbh_selec_table — selec.table","title":"Alternative name for lbh_selec_table — selec.table","text":"selec.table alternative name lbh_selec_table. selec.table deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/selec.table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative name for lbh_selec_table — selec.table","text":"","code":"selec.table"},{"path":"https://marce10.github.io/warbleR/reference/selec.table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternative name for lbh_selec_table — selec.table","text":"object class data.frame 11 rows 9 columns.","code":""},{"path":"https://marce10.github.io/warbleR/reference/selec.table.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Alternative name for lbh_selec_table — selec.table","text":"Marcelo Araya Salas, warbleR","code":""},{"path":"https://marce10.github.io/warbleR/reference/selec.table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternative name for lbh_selec_table — selec.table","text":"Selection table long-billed hermit songs","code":""},{"path":"https://marce10.github.io/warbleR/reference/selection_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create 'selection_table' and 'extended_selection_table' objects — selection_table","title":"Create 'selection_table' and 'extended_selection_table' objects — selection_table","text":"selection_table converts data frames object classes 'selection_table' 'extended_selection_table'.","code":""},{"path":"https://marce10.github.io/warbleR/reference/selection_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create 'selection_table' and 'extended_selection_table' objects — selection_table","text":"","code":"selection_table(X, max.dur = 10, path = NULL, whole.recs = FALSE, extended = FALSE, confirm.extended = TRUE, mar = 0.1, by.song = NULL, pb = TRUE, parallel = 1, verbose = TRUE, skip.error = FALSE, file.format = \"\\\\.wav$|\\\\.wac$|\\\\.mp3$|\\\\.flac$\", ...)"},{"path":"https://marce10.github.io/warbleR/reference/selection_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create 'selection_table' and 'extended_selection_table' objects — selection_table","text":"X data frame following columns: 1) \"sound.files\": name .wav files, 2) \"selec\": unique selection identifier (within sound file), 3) \"start\": start time 4) \"end\": end time selections. Columns 'top.freq', 'bottom.freq' 'channel' optional. Note , 'channel' provided first channel (.e. left channel) used default. Frequency parameters (including top bottom frequency) provided kHz. Alternatively, 'selection_table' class object can input. max.dur maximum duration expected selection  (ie. end - start). surpassed error message generated. Useful detecting errors selection tables. path Character string containing directory path sound files located. NULL (default) current working directory used. whole.recs Logical. TRUE function create selection table sound files working directory (\"path\") `start = 0` `end = duration_wavs()`. Default FALSE. Note create extended selection table. provided 'X' ignored. extended Logical. TRUE, function create object class 'extended_selection_table' included wave objects selections additional attribute ('wave.objects') data set. self-contained format require original sound files running acoustic analysis warbleR. can largely facilitate storing sharing (bio)acoustic data. Default FALSE. extended selection table created issue selection. See 'details'. confirm.extended Logical. TRUE size 'extended_selection_table' estimated user asked confirmation (console) proceeding. Ignored 'extended' FALSE. used prevent generating objects big dealt R. See 'details' information extended selection table size. mar Numeric vector length 1 specifying margins (seconds) adjacent start end points selections creating extended selection tables. Default 0.1. Ignored 'extended' FALSE. .song Character string column name containing song labels. provided wave object containing selection belonging single song saved extended selection table (hence applicable extended selection tables). Note function assumes song labels repeated within sound file. NULL (default), wave objects created selection (e.g. selection). Ignored extended = FALSE. pb Logical argument control progress bar messages. Default TRUE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). verbose Logical argument control summary messages printed console. Default TRUE. skip.error Logical control errors omitted. , files read excluded name printed console. Default FALSE, return error files problematic. file.format Character string format sound files. default sound file formats supported warbleR included (\"\\.wav$|\\.wac$|\\.mp3$|\\.flac$\"). Note several formats can included using regular expression syntax grep. instance \"\\.wav$|\\.mp3$\" include .wav .mp3 files. Ignored whole.recs = FALSE. ... Additional arguments passed check_sels customizing checking routine.","code":""},{"path":"https://marce10.github.io/warbleR/reference/selection_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create 'selection_table' and 'extended_selection_table' objects — selection_table","text":"object class selection_table includes original data frame plus following additional attributes: 1) data frame output check_sels run input data frame. extended selection table created also include original values input data frame selections. used downstream warbleR functions improve efficiency avoid errors due missing mislabeled data, selection ranges original sound files. 2) list indicating selection table created song (see '.song argument). 3) extended selection table created list containing wave objects selection (song '.song').","code":""},{"path":"https://marce10.github.io/warbleR/reference/selection_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create 'selection_table' and 'extended_selection_table' objects — selection_table","text":"function creates object class 'selection_table' 'extended_selection_table' (extended = TRUE, see ). First, function checks: 1) selections listed data frame correspond .wav files working directory 2) sound files can read , 3) start end time selections found within duration sound files errors found selection table extended selection table generated. Note sound files working directory (directory provided 'path'). useful avoiding errors downstream functions (e.g. spectro_analysis, cross_correlation,  catalog, freq_DTW). Note also corrupt files can fixed using fix_wavs ('sox' must installed able run function). 'selection_table' class can input subsequent functions. extended = TRUE function generate object class 'extended_selection_table' also contains wave objects selections data frame. transforms selection tables self-contained objects longer need original sound files run acoustic analysis. can largely facilitate storing sharing (bio)acoustic data. Extended selection table size function number selections nrow(X), sampling rate, selection duration margin duration. guide, selection table 1000 selections similar ones 'lbh_selec_table' (mean duration ~0.15  seconds) 22.5 kHz sampling rate default margin (mar = 0.1)  generate extended selection table ~31 MB (~310 MB 10000 rows  selection table). can check size output extended selection table  object.size function. Note extended selection table created '.song'  considerable larger.","code":""},{"path":"https://marce10.github.io/warbleR/reference/selection_table.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create 'selection_table' and 'extended_selection_table' objects — selection_table","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/selection_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create 'selection_table' and 'extended_selection_table' objects — selection_table","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/selection_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create 'selection_table' and 'extended_selection_table' objects — selection_table","text":"","code":"{   data(list = c(     \"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\",     \"lbh_selec_table\"   ))   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"))   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))   writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))   writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))    # make selection table   st <- selection_table(X = lbh_selec_table, path = tempdir())    is_selection_table(st)    #' # make extended selection table   st <- selection_table(     X = lbh_selec_table, extended = TRUE,     confirm.extended = FALSE,     path = tempdir()   )    is_extended_selection_table(st)    ### make extended selection by song   # create a song variable   lbh_selec_table$song <- as.numeric(as.factor(lbh_selec_table$sound.files))    st <- selection_table(     X = lbh_selec_table, extended = TRUE,     confirm.extended = FALSE, by.song = \"song\", path = tempdir()   ) } #> checking selections (step 1 of 2): #> checking selections (step 1 of 2): #> saving wave objects into extended selection table (step 2 of 2): #> checking selections (step 1 of 2): #> saving wave objects into extended selection table (step 2 of 2):"},{"path":"https://marce10.github.io/warbleR/reference/seltailor.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for tailor_sels — seltailor","title":"alternative name for tailor_sels — seltailor","text":"alternative name tailor_sels","code":""},{"path":"https://marce10.github.io/warbleR/reference/seltailor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for tailor_sels — seltailor","text":"","code":"seltailor(   X = NULL,   wl = 512,   flim = c(0, 22),   wn = \"hanning\",   mar = 0.5,   osci = TRUE,   pal = reverse.gray.colors.2,   ovlp = 70,   auto.next = FALSE,   pause = 1,   comments = TRUE,   path = NULL,   frange = TRUE,   fast.spec = FALSE,   ext.window = TRUE,   width = 15,   height = 5,   index = NULL,   collevels = NULL,   title = c(\"sound.files\", \"selec\"),   ts.df = NULL,   col = \"#E37222\",   alpha = 0.7,   auto.contour = FALSE,   ... )"},{"path":"https://marce10.github.io/warbleR/reference/seltailor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for tailor_sels — seltailor","text":"see tailor_sels documentation. seltailor deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sig2noise.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure signal-to-noise ratio — sig2noise","title":"Measure signal-to-noise ratio — sig2noise","text":"sig2noise measures signal--noise ratio across multiple files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sig2noise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure signal-to-noise ratio — sig2noise","text":"","code":"sig2noise(X, mar, parallel = 1, path = NULL, pb = TRUE, type = 1, eq.dur = FALSE, in.dB = TRUE, before = FALSE, lim.dB = TRUE, bp = NULL, wl = 10)"},{"path":"https://marce10.github.io/warbleR/reference/sig2noise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure signal-to-noise ratio — sig2noise","text":"X object class 'selection_table', 'extended_selection_table' data frame columns sound file name (sound.files), selection number (selec), start end time signal (start end). mar numeric vector length 1. Specifies margins adjacent start end points selection measure noise. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). can also set globally using 'parallel' option (see warbleR_options). path Character string containing directory path sound files located. NULL (default) current working directory used. can also set globally using 'wav.path' option (see warbleR_options). pb Logical argument control progress bar shown. Default TRUE. can also set globally using 'pb' option (see warbleR_options). type Numeric. Determine formula used calculate signal--noise ratio (S = signal , N = background noise): 1: ratio S mean amplitude envelope   N mean amplitude envelope (mean(env(S))/mean(env(N))) 2: ratio S amplitude envelope RMS (root mean square) N amplitude envelope RMS  (rms(env(S))/rms(env(N))) 3: ratio difference S amplitude envelope RMS N amplitude envelope RMS N amplitude envelope RMS ((rms(env(S)) - rms(env(N)))/rms(env(N))) eq.dur Logical. Controls whether noise segment measured duration signal (TRUE, default FALSE). TRUE 'mar' argument ignored. .dB Logical. Controls whether signal--noise ratio returned decibels (20*log10(SNR)). Default TRUE. Logical. TRUE noise measured right signal (instead ). Default FALSE. lim.dB Logical. TRUE lowest signal--noise limited -40 dB (.dB = TRUE). remove NA's can produced noise segments higher amplitude signal . Default TRUE. bp Numeric vector length 2 giving lower upper limits frequency bandpass filter (kHz). Default NULL. wl numeric vector length 1 specifying window length spectrogram applying bandpass. Default   10. Ignored bp = NULL. can also set globally using 'wl' option (see warbleR_options).  Note lower values increase time resolution, important signal--noise ratio calculations.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sig2noise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure signal-to-noise ratio — sig2noise","text":"Data frame similar auto_detec output, also includes new variable signal--noise values.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sig2noise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Measure signal-to-noise ratio — sig2noise","text":"Signal--noise ratio (SNR) measure level desired signal compared  background noise. function divides mean amplitude signal   mean amplitude background noise adjacent signal.   general margin apply acoustic signal must   specified. Setting margins individual signals   previously clipped larger files may take optimization,   calls within larger file irregularly separated.   margins overlap another acoustic signal nearby, signal--noise   ratio (SNR) inaccurate. SNR less equal one suggests   background noise equal overpowering acoustic signal.   snr_spectrograms can used troubleshoot different noise margins.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sig2noise.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Measure signal-to-noise ratio — sig2noise","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191. Wikipedia: Signal--noise ratio","code":""},{"path":"https://marce10.github.io/warbleR/reference/sig2noise.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Measure signal-to-noise ratio — sig2noise","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr) Grace Smith Vidaurre","code":""},{"path":"https://marce10.github.io/warbleR/reference/sig2noise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure signal-to-noise ratio — sig2noise","text":"","code":"{   data(list = c(\"Phae.long1\", \"lbh_selec_table\"))   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) # save sound files    # specifying the correct margin is important   # use snr_spectrograms to troubleshoot margins for sound files   sig2noise(lbh_selec_table[grep(\"Phae.long1\", lbh_selec_table$sound.files), ],     mar = 0.2,     path = tempdir()   )    # this smaller margin doesn't overlap neighboring signals   sig2noise(lbh_selec_table[grep(\"Phae.long1\", lbh_selec_table$sound.files), ],     mar = 0.1,     path = tempdir()   ) } #>      sound.files channel selec     start       end bottom.freq top.freq #> 1 Phae.long1.wav       1     1 1.1693549 1.3423884    2.220105 8.604378 #> 2 Phae.long1.wav       1     2 2.1584085 2.3214565    2.169437 8.807053 #> 3 Phae.long1.wav       1     3 0.3433366 0.5182553    2.218294 8.756604 #>        SNR #> 1 23.55816 #> 2 22.81263 #> 3 21.12933"},{"path":"https://marce10.github.io/warbleR/reference/signal_2_noise.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for sig2noise — signal_2_noise","title":"alternative name for sig2noise — signal_2_noise","text":"alternative name sig2noise","code":""},{"path":"https://marce10.github.io/warbleR/reference/signal_2_noise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for sig2noise — signal_2_noise","text":"","code":"signal_2_noise(   X,   mar,   parallel = 1,   path = NULL,   pb = TRUE,   type = 1,   eq.dur = FALSE,   in.dB = TRUE,   before = FALSE,   lim.dB = TRUE,   bp = NULL,   wl = 10 )"},{"path":"https://marce10.github.io/warbleR/reference/signal_2_noise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for sig2noise — signal_2_noise","text":"see sig2noise documentation. sig2noise deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sim_coor_sing.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated coordinated singing events. — sim_coor_sing","title":"Simulated coordinated singing events. — sim_coor_sing","text":"sim_coor_sing contains selections simulated interactive singing events.simulated events use mean standard deviation real lekking Phaethornis longirostris (Long-billed Hermit hummingbird) songs intervals songs (e.gaps). Three events simulated: overlapping signals (ovlp), alternating signals (altern) non-synchronized signals (uncoor).","code":""},{"path":"https://marce10.github.io/warbleR/reference/sim_coor_sing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated coordinated singing events. — sim_coor_sing","text":"","code":"data(sim_coor_sing)"},{"path":"https://marce10.github.io/warbleR/reference/sim_coor_sing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated coordinated singing events. — sim_coor_sing","text":"sim_coor_sing Simulated coordinated singing events overlap overlap time,   use test_coordination","code":""},{"path":"https://marce10.github.io/warbleR/reference/sim_songs.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for simulate_songs — sim_songs","title":"alternative name for simulate_songs — sim_songs","text":"alternative name simulate_songs","code":""},{"path":"https://marce10.github.io/warbleR/reference/sim_songs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for simulate_songs — sim_songs","text":"","code":"sim_songs(   n = 1,   durs = 0.2,   harms = 3,   harm.amps = c(1, 0.5, 0.2),   am.amps = 1,   gaps = 0.1,   freqs = 5,   samp.rate = 44.1,   sig2 = 0.5,   steps = 10,   bgn = 0.5,   seed = NULL,   diff.fun = \"GBM\",   fin = 0.1,   fout = 0.2,   shape = \"linear\",   selec.table = FALSE,   file.name = NULL,   path = NULL,   hrm.freqs = c(1/2, 1/3, 2/3, 1/4, 3/4, 1/5, 1/6, 1/7, 1/8, 1/9, 1/10) )"},{"path":"https://marce10.github.io/warbleR/reference/sim_songs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for simulate_songs — sim_songs","text":"see simulate_songs documentation. sim_songs deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/simulate_songs.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate animal vocalizations — simulate_songs","title":"Simulate animal vocalizations — simulate_songs","text":"simulate_songs simulate animal vocalizations wave object brownian motion frequency drift.","code":""},{"path":"https://marce10.github.io/warbleR/reference/simulate_songs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate animal vocalizations — simulate_songs","text":"","code":"simulate_songs(n = 1, durs = 0.2, harms = 3, harm.amps = c(1, 0.5, 0.2), am.amps = 1, gaps = 0.1, freqs = 5, samp.rate = 44.1, sig2 = 0.5, steps = 10, bgn = 0.5, seed = NULL, diff.fun = \"GBM\", fin = 0.1, fout = 0.2, shape = \"linear\", selec.table = FALSE, file.name = NULL, path = NULL, hrm.freqs = c(1/2, 1/3, 2/3, 1/4, 3/4, 1/5, 1/6, 1/7, 1/8, 1/9, 1/10))"},{"path":"https://marce10.github.io/warbleR/reference/simulate_songs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate animal vocalizations — simulate_songs","text":"n Number song subunits (e.g. elements). Default 1. durs Numeric vector duration subunits seconds. either single value (used subunits) vector length n. harms NUmeric vector length 1 specifying number harmonics simulate. 1 indicates fundamental frequency harmonic simulated. harm.amps Numeric vector relative amplitude harmonics (including fundamental frequency). .amps Numeric vector relative amplitude step (see 'step' argument) simulate amplitude modulation (applied fundamental frequency). length number steps. Default 1 (amplitude modulation). gaps Numeric vector duration gaps (silence subunits) seconds. either single value (used subunits) vector  length n + 1. freqs Numeric vector initial frequency subunits (ending frequency diff.fun == \"BB\") kHz. either single value ( used subunits) vector length n. samp.rate Numeric vector length 1. Sets sampling frequency wave object (kHz). Default 44.1. sig2 Numeric vector defining sigma value brownian motion model. either single value  (used subunits) vector length n + 1.  Higher values produce faster frequency modulations. Ignored diff.fun == \"BB\". Default 0.1. Check 'BB' function Sim.DiffProc package details. steps Numeric vector length 1. Controls mean number segments song subunit split brownian motion process. subunits duration, longer units split steps (although average duration subunit predefined number steps). Default 10. bgn Numeric vector length 1 indicating background noise level. 0 means additional noise 1 means noise amplitude song subunits. Default 0.5. seed Numeric vector length 1. allows users get results different runs (using  set.seed internally). Default NULL. diff.fun Character vector length 1 controlling function used simulate brownian motion process frequency drift across time. \"BB\", \"GBM\" \"pure.tone\" accepted time. Check 'BB' function Sim.DiffProc package details. fin Numeric vector length 1 setting proportion sub-unit fade-amplitude (value 0 1). Default 0.1. Note 'fin' + 'fout' higher 1. fout Numeric vector length 1 setting proportion sub-unit fade-amplitude (value 0 1). Default 0.2. Note 'fin' + 'fout' higher 1. shape Character string length 1 controlling shape amplitude fading song sub-units ('fin' 'fout'). \"linear\" (default), \"exp\" (exponential), \"cos\" (cosine) currently allowed. selec.table Logical. TRUE function returns list two elements: 1) data frame containing start/end time, bottom/top frequency sub-units  2) wave object containing simulated songs. FALSE (default) objects returned. Regardless value argument .wav file always saved working directory. file.name Character string naming \".wav\" file. Ignored 'selec.table' FALSE. provided date-time stamp used. path Character string directory path sound file saved. Ignored 'selec.table' FALSE. NULL (default) current working directory used. hrm.freqs Numeric vector frequencies harmonics relative fundamental frequency. default values c(1/2, 1/3, 2/3, 1/4, 3/4, 1/5, 1/6, 1/7, 1/8, 1/9, 1/10).","code":""},{"path":"https://marce10.github.io/warbleR/reference/simulate_songs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate animal vocalizations — simulate_songs","text":"wave object containing simulated songs. 'selec.table' TRUE function saves wave object '.wav' sound file working directory ('path') returns list including 1) selection table start/end time, bottom/top frequency sub-units 2) wave object.","code":""},{"path":"https://marce10.github.io/warbleR/reference/simulate_songs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate animal vocalizations — simulate_songs","text":"functions uses geometric (diff.fun == \"GBM\") Brownian bridge (diff.fun == \"BB\") motion stochastic process simulate modulation animal vocalizations (.e. frequency traces across time). function can also simulate pure tones (diff.fun == \"pure.tone\", 'sig2' ignored). Several song subunits (e.g. elements) can simulated well corresponding harmonics.","code":""},{"path":"https://marce10.github.io/warbleR/reference/simulate_songs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate animal vocalizations — simulate_songs","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/simulate_songs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate animal vocalizations — simulate_songs","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/simulate_songs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate animal vocalizations — simulate_songs","text":"","code":"if (FALSE) { # simulate a song with 3 elements and no harmonics sm_sng <- simulate_songs(n = 3, harms = 1)  # plot spectro seewave::spectro(sm_sng)  # simulate a song with 5 elements and 2 extra harmonics sm_sng2 <- simulate_songs(n = 5, harms = 3)  # plot spectrogram seewave::spectro(sm_sng2)  # six pure tones with frequency ranging form 4 to 6 and returning selection table sm_sng <- simulate_songs(   n = 6, harms = 1, seed = 1, diff.fun = \"pure.tone\",   freqs = seq(4, 6, length.out = 6), selec.table = TRUE,   path = tempdir() )  # plot spectro seewave::spectro(sm_sng$wave, flim = c(2, 8))  # selection table sm_sng$selec.table }"},{"path":"https://marce10.github.io/warbleR/reference/snr_specs.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for snr_spectrograms — snr_specs","title":"alternative name for snr_spectrograms — snr_specs","text":"alternative name snr_spectrograms","code":""},{"path":"https://marce10.github.io/warbleR/reference/snr_specs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for snr_spectrograms — snr_specs","text":"","code":"snr_specs(   X,   wl = 512,   flim = NULL,   wn = \"hanning\",   ovlp = 70,   inner.mar = c(5, 4, 4, 2),   outer.mar = c(0, 0, 0, 0),   picsize = 1,   res = 100,   cexlab = 1,   title = TRUE,   before = FALSE,   eq.dur = FALSE,   propwidth = FALSE,   xl = 1,   osci = FALSE,   gr = FALSE,   sc = FALSE,   mar = 0.2,   snrmar = 0.1,   it = \"jpeg\",   parallel = 1,   path = NULL,   pb = TRUE )"},{"path":"https://marce10.github.io/warbleR/reference/snr_specs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for snr_spectrograms — snr_specs","text":"see snr_spectrograms documentation. snr_specs deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/snr_spectrograms.html","id":null,"dir":"Reference","previous_headings":"","what":"Spectrograms with background noise margins — snr_spectrograms","title":"Spectrograms with background noise margins — snr_spectrograms","text":"snr_spectrograms creates spectrograms visualize margins background noise measured sig2noise.","code":""},{"path":"https://marce10.github.io/warbleR/reference/snr_spectrograms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spectrograms with background noise margins — snr_spectrograms","text":"","code":"snr_spectrograms(X, wl = 512, flim = NULL, wn = \"hanning\", ovlp = 70, inner.mar = c(5, 4, 4, 2), outer.mar = c(0, 0, 0, 0), picsize = 1, res = 100, cexlab = 1, title = TRUE, before = FALSE, eq.dur = FALSE,   propwidth= FALSE, xl = 1, osci = FALSE, gr = FALSE, sc = FALSE, mar = 0.2,    snrmar = 0.1, it = \"jpeg\", parallel = 1, path = NULL, pb = TRUE)"},{"path":"https://marce10.github.io/warbleR/reference/snr_spectrograms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spectrograms with background noise margins — snr_spectrograms","text":"X 'selection_table', 'extended_selection_table' data frame columns sound file name (sound.files), selection number (selec), start end time signal (start end). wl numeric vector length 1 specifying window length spectrogram, default 512. flim numeric vector length 2 frequency limit kHz spectrogram, spectro. Default NULL. wn Character vector length 1 specifying window name. Default \"hanning\". See function ftwindow options. ovlp Numeric vector length 1 specifying % overlap two consecutive windows, spectro. Default 70. inner.mar Numeric vector 4 elements, default c(5,4,4,2). Specifies number lines inner plot margins axis labels fall, form c(bottom, left, top, right). See par. outer.mar Numeric vector 4 elements, default c(0,0,0,0). Specifies number lines outer plot margins beyond axis labels, form c(bottom, left, top, right). See par. picsize Numeric argument length 1, controls relative size spectrogram. Default 1. res Numeric argument length 1 controls image resolution. Default 100 (faster) although 300 - 400 recommended publication/ presentation quality. cexlab Numeric vector length 1 specifying relative size axis labels. See spectro. title Logical argument add title individual spectrograms. Default TRUE. Logical. TRUE noise measured right signal (instead ). Default FALSE. eq.dur Logical. Controls whether noise segment measured duration signal (TRUE, default FALSE). TRUE 'snrmar' argument ignored. propwidth Logical argument scale width spectrogram proportionally duration selected call. Default FALSE. xl Numeric vector length 1, constant scale spectrogram width propwidth = TRUE. Default 1. osci Logical argument add oscillogram underneath spectrogram, spectro. Default FALSE. gr Logical argument add grid spectrogram. Default FALSE. sc Logical argument add amplitude scale spectrogram, default FALSE. mar Numeric vector length 1. Specifies margins adjacent start end points selections define spectrogram limits. Default 0.2. snrmar larger mar, mar set equal snrmar. snrmar Numeric vector length 1. Specifies margins adjacent start end points selections noise measured. Default 0.1. character vector length 1 giving image type used. Currently \"tiff\" \"jpeg\" admitted. Default \"jpeg\". parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). path Character string containing directory path sound files located. NULL (default) current working directory used. pb Logical argument control progress bar. Default TRUE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/snr_spectrograms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spectrograms with background noise margins — snr_spectrograms","text":"Spectrograms per selection marked margins background noise measured.","code":""},{"path":"https://marce10.github.io/warbleR/reference/snr_spectrograms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spectrograms with background noise margins — snr_spectrograms","text":"function can used test different margins facilitate   accurate SNR measurements using sig2noise line.   Setting margins individual calls previously clipped   larger files may take optimization, calls within   larger file irregularly separated. Setting inner.mar   c(4,4.5,2,1) outer.mar c(4,2,2,1) works well picsize = 2 3.   Title font size, inner.mar outer.mar (mar oma par) work well   osci sc = TRUE, may take optimization user.","code":""},{"path":"https://marce10.github.io/warbleR/reference/snr_spectrograms.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spectrograms with background noise margins — snr_spectrograms","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191. Wikipedia: Signal--noise ratio","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/snr_spectrograms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Spectrograms with background noise margins — snr_spectrograms","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr) Grace Smith Vidaurre","code":""},{"path":"https://marce10.github.io/warbleR/reference/snr_spectrograms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spectrograms with background noise margins — snr_spectrograms","text":"","code":"if (FALSE) { data(list = c(\"Phae.long1\", \"Phae.long2\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) # save sound.files writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))  # make Phae.long1 and Phae.long2 spectrograms # snrmar needs to be smaller before moving on to sig2noise()  snr_spectrograms(lbh_selec_table,   flim = c(0, 14), inner.mar = c(4, 4.5, 2, 1),   outer.mar = c(4, 2, 2, 1), picsize = 2, res = 300, cexlab = 2, mar = 0.2,   snrmar = 0.1, it = \"jpeg\", wl = 300, path = tempdir() )  # make only Phae.long1 spectrograms # snrmar now doesn't overlap neighboring signals  snr_spectrograms(lbh_selec_table[grepl(c(\"Phae.long1\"), lbh_selec_table$sound.files), ],   flim = c(3, 14), inner.mar = c(4, 4.5, 2, 1), outer.mar = c(4, 2, 2, 1),   picsize = 2, res = 300, cexlab = 2, mar = 0.2, snrmar = 0.01, wl = 300,   path = tempdir() )  # check this folder! tempdir() }"},{"path":"https://marce10.github.io/warbleR/reference/snrspecs.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for snr_spectrograms — snrspecs","title":"alternative name for snr_spectrograms — snrspecs","text":"alternative name snr_spectrograms","code":""},{"path":"https://marce10.github.io/warbleR/reference/snrspecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for snr_spectrograms — snrspecs","text":"","code":"snrspecs(   X,   wl = 512,   flim = NULL,   wn = \"hanning\",   ovlp = 70,   inner.mar = c(5, 4, 4, 2),   outer.mar = c(0, 0, 0, 0),   picsize = 1,   res = 100,   cexlab = 1,   title = TRUE,   before = FALSE,   eq.dur = FALSE,   propwidth = FALSE,   xl = 1,   osci = FALSE,   gr = FALSE,   sc = FALSE,   mar = 0.2,   snrmar = 0.1,   it = \"jpeg\",   parallel = 1,   path = NULL,   pb = TRUE )"},{"path":"https://marce10.github.io/warbleR/reference/snrspecs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for snr_spectrograms — snrspecs","text":"see snr_spectrograms documentation. snr_spectrograms deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/song_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates acoustic parameters at the song level — song_analysis","title":"Calculates acoustic parameters at the song level — song_analysis","text":"song_analysis calculates descriptive statistics songs higher levels organization signals.","code":""},{"path":"https://marce10.github.io/warbleR/reference/song_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates acoustic parameters at the song level — song_analysis","text":"","code":"song_analysis(X = NULL, song_colm = \"song\",mean_colm = NULL, min_colm = NULL, max_colm = NULL, elm_colm = NULL, elm_fun = NULL, sd = FALSE, parallel = 1, pb = TRUE, na.rm = FALSE, weight = NULL)"},{"path":"https://marce10.github.io/warbleR/reference/song_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates acoustic parameters at the song level — song_analysis","text":"X 'selection_table', 'extended_selection_table' (created '.song') data frame following columns: 1) \"sound.files\": name sound files, 2) \"selec\": number selections, 3) \"start\": start time selections, 4) \"end\": end time selections. song_colm Character string column name containing song labels. can used label hierarchical level parameters need calculated (e.g. syllables, phrases). Note function assumes song labels repeated within sound file. mean_colm Numeric vector index columns averaged. NULL mean numeric columns 'X' returned. min_colm Character vector name(s) columns minimum value needed. Default NULL. max_colm Character vector name(s) columns maximum value needed. Default NULL. elm_colm Character vector name(s) columns identifying element labels (.e. element types). supplied 'unq.elms' 'mean.elm.count' returned. Default NULL. elm_fun Function applied sequence elements composing song. Default NULL. Ignored 'elm_colm' supplied. name column containing function's output \"elm_fun'. sd Logical value indicating whether standard deviation also returned variables averages reported. Default FALSE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar messages. Default TRUE. na.rm Logical value indicating whether 'NA' values ignored calculations. weight Character vector defining 1 numeric vectors weight average measurements (.e. song parameters). Names numeric columns 'X' can also used. See weighted.mean.  details.  Default NULL (unweighted average).","code":""},{"path":"https://marce10.github.io/warbleR/reference/song_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates acoustic parameters at the song level — song_analysis","text":"data frame similar input 'X' data frame, case row corresponds single song. data frame contains mean extreme  values numeric columns song. Columns averaged can defined  'mean_colm' (otherwise numeric columns used). Columns can  weighted columns data set (e.g. duration, frequency range). addition, function returns following song level parameters: elm.duration: mean length elements (s) song.duration: length song (s) num.elms: number elements (song units) start: start time song (s) end: end time song (s) bottom.freq: lowest 'bottom.freq' song elements (kHz) top.freq: highest 'top.freq' song elements (kHz) freq.range: difference song's 'top.freq' 'bottom.freq' (kHz) song.rate: number elements per second (NA 1 element). Calculated number elements 'song' divided duration song. case song duration calculated time start first element start last element, provides rate less affected duration individual elements. Note calculation different 'song.duration' . gap.duration: average length gaps (.e. silences) elements    (s, NA 1 element) elm.types: number element types (.e. number unique types, 'elm_colm' supplied) mean.elm.count: mean number times element types found ('elm_colm' supplied) function assumes song labels repeated within sound file.","code":""},{"path":"https://marce10.github.io/warbleR/reference/song_analysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates acoustic parameters at the song level — song_analysis","text":"function calculates average extreme values acoustic parameters elements song level organization signals.","code":""},{"path":"https://marce10.github.io/warbleR/reference/song_analysis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates acoustic parameters at the song level — song_analysis","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/song_analysis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculates acoustic parameters at the song level — song_analysis","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/song_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates acoustic parameters at the song level — song_analysis","text":"","code":"{ # get warbleR sound file examples data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))  # add a 'song' column lbh_selec_table$song <- c(\"song1\", \"song1\", \"song1\", \"song2\",   \"song2\", \"song3\", \"song3\", \"song3\", \"song4\", \"song4\", \"song4\")  # measure acoustic parameters sp <- spectro_analysis(lbh_selec_table[1:8, ], bp = c(1, 11), 300, fast = TRUE, path = tempdir())  # add song data sp <- merge(sp, lbh_selec_table[1:8, ], by = c(\"sound.files\", \"selec\"))  # caculate song-level parameters for all numeric parameters song_analysis(X = sp, song_colm = \"song\", parallel = 1, pb = TRUE)  # caculate song-level parameters selecting parameters with mean_colm song_analysis(X = sp, song_colm = \"song\",mean_colm = c(\"dfrange\", \"duration\"),  parallel = 1, pb = TRUE)  # caculate song-level parameters for selecting parameters with mean_colm, max_colm # and min_colm and weighted by duration song_analysis(X = sp, weight = \"duration\", song_colm = \"song\", mean_colm =  c(\"dfrange\", \"duration\"), min_colm =  \"mindom\", max_colm = \"maxdom\",   parallel = 1, pb = TRUE)  # with two weights song_analysis(X = sp, weight = c(\"duration\", \"dfrange\"), song_colm = \"song\", mean_colm = c(\"kurt\", \"sp.ent\"), parallel = 1, pb = TRUE)  # with two weights no progress bar song_analysis(X = sp, weight = c(\"duration\", \"dfrange\"), song_colm = \"song\", mean_colm = c(\"kurt\", \"sp.ent\"), parallel = 1, pb = FALSE) } #>      sound.files selec     start      end top.freq bottom.freq  song      kurt #> 1 Phae.long1.wav     1 0.3433366 2.321457 8.807053    2.169437 song1 11.894202 #> 2 Phae.long2.wav     1 0.1595983 1.583209 8.888027    2.284006 song2 12.223883 #> 3 Phae.long3.wav     1 0.1233643 2.104392 9.315153    2.316862 song3  9.024535 #>      sp.ent num.elms elm.duration freq.range song.duration song.rate #> 1 0.9312400        3    0.1703334   6.637617      1.978120  1.652827 #> 2 0.9257034        2    0.1293606   6.604022      1.423610  1.541473 #> 3 0.9083270        3    0.1308718   6.998291      1.981028  1.620878 #>   gap.duration #> 1    0.7335599 #> 2    1.1648893 #> 3    0.7942062"},{"path":"https://marce10.github.io/warbleR/reference/song_param.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for song_analysis — song_param","title":"alternative name for song_analysis — song_param","text":"alternative name song_analysis","code":""},{"path":"https://marce10.github.io/warbleR/reference/song_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for song_analysis — song_param","text":"","code":"song_param(   X = NULL,   song_colm = \"song\",   mean_colm = NULL,   min_colm = NULL,   max_colm = NULL,   elm_colm = NULL,   elm_fun = NULL,   sd = FALSE,   parallel = 1,   pb = TRUE,   na.rm = FALSE,   weight = NULL )"},{"path":"https://marce10.github.io/warbleR/reference/song_param.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for song_analysis — song_param","text":"see song_analysis documentation. song_param deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sort_colms.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort columns in a more intuitive order — sort_colms","title":"Sort columns in a more intuitive order — sort_colms","text":"sort_colms sorts selection table columns intuitive order.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sort_colms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort columns in a more intuitive order — sort_colms","text":"","code":"sort_colms(X)"},{"path":"https://marce10.github.io/warbleR/reference/sort_colms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort columns in a more intuitive order — sort_colms","text":"X Data frame containing columns sound file (sound.files), selection (selec), start end time signals ('start' 'end') low high frequency ('bottom.freq' 'top.freq', optional). See example data 'lbh_selec_table'.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sort_colms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort columns in a more intuitive order — sort_colms","text":"data input data frame relevant information acoustic analysis located first columns.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sort_colms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sort columns in a more intuitive order — sort_colms","text":"function returns data input data frame relevant information acoustic analysis located first columns. priority order column names : \"sound.files\", \"channel\", \"selec\", \"start\", \"end\", \"top.freq\", \"bottom.freq\".","code":""},{"path":"https://marce10.github.io/warbleR/reference/sort_colms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sort columns in a more intuitive order — sort_colms","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/sort_colms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort columns in a more intuitive order — sort_colms","text":"","code":"library(warbleR) data(\"selec.table\")  # mess column order selec.table <- selec.table[, sample(seq_len(ncol(selec.table)))]  # check names names(selec.table) #> [1] \"selec\"       \"channel\"     \"bottom.freq\" \"top.freq\"    \"sel.comment\" #> [6] \"sound.files\" \"end\"         \"rec.comment\" \"start\"        selec.table <- sort_colms(X = selec.table)  # check names again names(selec.table) #> [1] \"sound.files\" \"channel\"     \"selec\"       \"start\"       \"end\"         #> [6] \"top.freq\"    \"bottom.freq\" \"sel.comment\" \"rec.comment\""},{"path":"https://marce10.github.io/warbleR/reference/sound_pressure_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure relative sound pressure level — sound_pressure_level","title":"Measure relative sound pressure level — sound_pressure_level","text":"sound_pressure_level measures relative (uncalibrated) sound pressure level signals referenced selection table.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sound_pressure_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure relative sound pressure level — sound_pressure_level","text":"","code":"sound_pressure_level(X, reference = 20, parallel = 1, path = NULL, pb = TRUE, type = \"single\", wl = 100, bp = NULL, remove.bgn = FALSE, mar = NULL, envelope = \"abs\")"},{"path":"https://marce10.github.io/warbleR/reference/sound_pressure_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure relative sound pressure level — sound_pressure_level","text":"X object class 'selection_table', 'extended_selection_table' data frame columns sound file name (sound.files), selection number (selec), start end time signal (start end). reference Numeric vector length 1 indicating pressure (µPa) used reference. Alternatively, character vector name numeric column containing reference values row can supplied. Default 20 (µPa). YET IMPLEMENTED. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). can also set globally using 'parallel' option (see warbleR_options). path Character string containing directory path sound files located. NULL (default) current working directory used. can also set globally using 'wav.path' option (see warbleR_options). pb Logical argument control progress bar shown. Default TRUE. can also set globally using 'pb' option (see warbleR_options). type Character string controlling SPL measured: #' single: single SPL value obtained entire signal. Default. mean: average SPL values measured across signal. peak: maximum several SPL values measured across signal. wl numeric vector length 1 specifying spectrogram window length. Default 512. bp Numeric vector length 2 giving lower upper limits frequency bandpass filter (kHz). Alternatively, set 'freq.range', function use 'bottom.freq' 'top.freq' signal bandpass range. Default NULL (bandpass filter). remove.bgn Logical argument control SPL background noise excluded measured signal SPL. Default FALSE. mar numeric vector length 1. Specifies margins adjacent start point selection measure background noise. envelope Character string vector method calculate amplitude envelopes (SPL measured), env. Must either 'abs' (absolute envelope, default) 'hil' (Hilbert transformation).","code":""},{"path":"https://marce10.github.io/warbleR/reference/sound_pressure_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure relative sound pressure level — sound_pressure_level","text":"object supplied 'X' new variable sound pressure level values ('SPL' 'peak.amplitude' column, see argument 'peak.amplitude') decibels.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sound_pressure_level.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Measure relative sound pressure level — sound_pressure_level","text":"Sound pressure level (SPL) logarithmic measure effective pressure sound relative reference, measure sound intensity. SPL measured root mean square amplitude vector, useful metric variation loudness signals within recording (recorded equipment gain).","code":""},{"path":"https://marce10.github.io/warbleR/reference/sound_pressure_level.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Measure relative sound pressure level — sound_pressure_level","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191. Wikipedia: Sound pressure level","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/sound_pressure_level.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Measure relative sound pressure level — sound_pressure_level","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr) Grace Smith Vidaurre","code":""},{"path":"https://marce10.github.io/warbleR/reference/sound_pressure_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure relative sound pressure level — sound_pressure_level","text":"","code":"{   data(list = c(\"Phae.long1\", \"lbh_selec_table\"))   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) # save sound files    spl <- sound_pressure_level(     X = lbh_selec_table[grep(\"Phae.long1\", lbh_selec_table$sound.files), ],     parallel = 1, pb = TRUE, path = tempdir()   ) }"},{"path":"https://marce10.github.io/warbleR/reference/spec_param.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for tweak_spectro — spec_param","title":"alternative name for tweak_spectro — spec_param","text":"alternative name tweak_spectro","code":""},{"path":"https://marce10.github.io/warbleR/reference/spec_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for tweak_spectro — spec_param","text":"","code":"spec_param(   X,   length.out = 5,   ovlp = 90,   wl = c(100, 1000),   wn = \"hanning\",   collev.min = -40,   pal = \"reverse.gray.colors.2\",   path = NULL,   rm.axes = TRUE,   ... )"},{"path":"https://marce10.github.io/warbleR/reference/spec_param.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for tweak_spectro — spec_param","text":"see tweak_spectro documentation. spec_param deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/specan.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for spectro_analysis — specan","title":"alternative name for spectro_analysis — specan","text":"alternative name spectro_analysis","code":""},{"path":"https://marce10.github.io/warbleR/reference/specan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for spectro_analysis — specan","text":"","code":"specan(   X,   bp = \"frange\",   wl = 512,   wl.freq = NULL,   threshold = 15,   parallel = 1,   fast = TRUE,   path = NULL,   pb = TRUE,   ovlp = 50,   wn = \"hanning\",   fsmooth = 0.1,   harmonicity = FALSE,   nharmonics = 3,   ... )"},{"path":"https://marce10.github.io/warbleR/reference/specan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for spectro_analysis — specan","text":"see spectro_analysis documentation. specan deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/specreator.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for spectrograms — specreator","title":"alternative name for spectrograms — specreator","text":"alternative name spectrograms","code":""},{"path":"https://marce10.github.io/warbleR/reference/specreator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for spectrograms — specreator","text":"","code":"specreator(   X,   wl = 512,   flim = \"frange\",   wn = \"hanning\",   pal = reverse.gray.colors.2,   ovlp = 70,   inner.mar = c(5, 4, 4, 2),   outer.mar = c(0, 0, 0, 0),   picsize = 1,   res = 100,   cexlab = 1,   propwidth = FALSE,   xl = 1,   osci = FALSE,   gr = FALSE,   sc = FALSE,   line = TRUE,   col = \"#07889B\",   fill = adjustcolor(\"#07889B\", alpha.f = 0.15),   lty = 3,   mar = 0.05,   it = \"jpeg\",   parallel = 1,   path = NULL,   pb = TRUE,   fast.spec = FALSE,   by.song = NULL,   sel.labels = \"selec\",   title.labels = NULL,   dest.path = NULL,   box = TRUE,   axis = TRUE,   ... )"},{"path":"https://marce10.github.io/warbleR/reference/specreator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for spectrograms — specreator","text":"see spectrograms documentation. specreator deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/spectro_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure acoustic parameters in batches of sound files — spectro_analysis","title":"Measure acoustic parameters in batches of sound files — spectro_analysis","text":"spectro_analysis measures acoustic parameters acoustic signals start end times  provided.","code":""},{"path":"https://marce10.github.io/warbleR/reference/spectro_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure acoustic parameters in batches of sound files — spectro_analysis","text":"","code":"spectro_analysis(X, bp = \"frange\", wl = 512, wl.freq = NULL, threshold = 15,  parallel = 1, fast = TRUE, path = NULL, pb = TRUE, ovlp = 50, wn = \"hanning\", fsmooth = 0.1, harmonicity = FALSE, nharmonics = 3, ...)"},{"path":"https://marce10.github.io/warbleR/reference/spectro_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure acoustic parameters in batches of sound files — spectro_analysis","text":"X 'selection_table', 'extended_selection_table' data frame following columns: 1) \"sound.files\": name sound  files, 2) \"sel\": number selections, 3) \"start\": start time selections, 4) \"end\":  end time selections. output auto_detec can used input data frame. bp numeric vector length 2 lower upper limits  frequency bandpass filter (kHz) \"frange\" (default) indicate values bottom.freq top.freq columns used bandpass limits.  Lower limit  bandpass filter applied fundamental frequencies. wl numeric vector length 1 specifying spectrogram window length. Default 512. See 'wl.freq' setting windows length independently frequency domain. wl.freq numeric vector length 1 specifying window length spectrogram measurements frequency spectrum. Default 512. Higher values provide  accurate measurements. Note allows increase measurement precision independently time frequency domain. NULL (default) 'wl' value used. threshold amplitude threshold (%) fundamental frequency  dominant frequency detection. Default 15. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). fast Logical. TRUE (default) peakf acoustic parameter (see ) computed,  substantially increases performance (~9 times faster). argument removed future version. path Character string containing directory path sound files located.  NULL (default) current working directory used. pb Logical argument control progress bar messages. Default TRUE. ovlp Numeric vector length 1 specifying % overlap two  consecutive windows, used fundamental frequency (using fund FF) dominant frequency (using dfreq).  Default 50. wn Character vector length 1 specifying window name. Default hanning'.  See function ftwindow options. fsmooth numeric vector length 1 smooth frequency spectrum mean sliding window (kHz) used mean peak frequency detection. help average  amplitude \"hills\" minimize effect amplitude modulation. Default 0.1. harmonicity Logical. TRUE harmonicity related parameters (fundamental frequency parameters [meanfun, minfun, maxfun], hn_freq,  hn_width, harmonics HNR) measured. Note measuring parameters  considerably increases computing time. nharmonics Numeric vector length 1 setting number harmonics analyze. ... Additional parameters passed analyze, measures parameters related harmonicity.","code":""},{"path":"https://marce10.github.io/warbleR/reference/spectro_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure acoustic parameters in batches of sound files — spectro_analysis","text":"Data frame 'sound.files' 'selec' input data frame, plus following acoustic parameters: duration: length signal (s) meanfreq: mean frequency (kHz). Calculated weighted average frequency spectrum (.e. weighted amplitude within supplied band pass). sd: standard deviation frequency (kHz). Calculated weighted standard deviation frequency spectrum (.e. weighted amplitude within supplied band pass). freq.median: median frequency. frequency frequency spectrum divided two frequency    intervals equal energy (kHz) freq.Q25: first quartile frequency. frequency frequency spectrum divided two     frequency intervals 25% 75% energy respectively (kHz) freq.Q75: third quartile frequency. frequency frequency spectrum divided two    frequency intervals 75% 25% energy respectively (kHz) freq.IQR: interquartile frequency range. Frequency range 'freq.Q25' 'freq.Q75'     (kHz) time.median: median time. time time envelope divided two time    intervals equal energy (s) time.Q25: first quartile time. time time envelope divided two time intervals 25% 75% energy respectively (s). See acoustat time.Q75: third quartile time. time time envelope divided two    time intervals 75% 25% energy respectively (s). See acoustat time.IQR: interquartile time range. Time range 'time.Q25' 'time.Q75'     (s). See acoustat skew: skewness. Asymmetry frequency spectrum (see note specprop description) kurt: kurtosis. Peakedness frequency spectrum (see note specprop description) sp.ent: spectral entropy. Energy distribution frequency spectrum. Pure tone ~ 0;     noisy ~ 1. See sh time.ent: time entropy. Energy distribution time envelope. ~0 means amplitude concentrated specific time point, 1 means amplitude equally distributed across time. See th entropy: spectrographic entropy. Product time spectral entropy sp.ent * time.ent.     See H sfm: spectral flatness. Similar sp.ent (Pure tone ~ 0;     noisy ~ 1). See sfm meandom: average dominant frequency measured across spectrogram mindom: minimum dominant frequency measured across spectrogram maxdom: maximum dominant frequency measured across spectrogram dfrange: range dominant frequency measured across spectrogram modindx: modulation index. Calculated cumulative absolute      difference adjacent measurements dominant frequencies divided      dominant frequency range (measured spectrogram). 1 means signal modulated. startdom:  dominant frequency measurement start signal (measured spectrogram). enddom: dominant frequency measurement end signal(measured spectrogram). dfslope: slope change dominant frequency (measured spectrogram) time ((enddom-startdom)/duration). Units kHz/s. peakf: peak frequency. Frequency highest energy.     parameter can take considerable amount time measure.     generated fast = FALSE. provides accurate measure peak    frequency 'meanpeakf' can easily affected background noise. Measured frequency spectrum. meanpeakf: mean peak frequency. Frequency highest energy     mean frequency spectrum (see meanspec). Typically consistent peakf presence noise. meanfun: average fundamental frequency measured across acoustic signal. measured harmonicity = TRUE. minfun: minimum fundamental  frequency measured across acoustic signal. measured harmonicity = TRUE. maxfun: maximum fundamental frequency measured across acoustic signal. measured harmonicity = TRUE. hn_freq: mean frequency 'n' upper harmonics (kHz) (see analyze).     Number harmonics defined argument 'nharmonics'. measured harmonicity = TRUE. hn_width: mean bandwidth 'n' upper harmonics (kHz) (see analyze). Number harmonics defined argument 'nharmonics'. measured harmonicity = TRUE. harmonics: amount energy upper harmonics, namely     ratio total spectral power 1.25 x F0 total spectral power     1.25 x F0 (dB) (see analyze). Number     harmonics defined argument 'nharmonics'. measured harmonicity = TRUE. HNR: harmonics--noise ratio (dB). measure harmonic content generated getPitchAutocor. measured harmonicity = TRUE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/spectro_analysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Measure acoustic parameters in batches of sound files — spectro_analysis","text":"function measures 29 acoustic parameters (fast = TRUE)   selection data frame. parameters produced internally   specprop, fpeaks, fund,  dfreq package seewave analyze   package soundgen. NAs produced fundamental dominant   frequency measures amplitude values threshold.   Additional parameters can provided internal function analyze, measures parameters related harmonicity.","code":""},{"path":"https://marce10.github.io/warbleR/reference/spectro_analysis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Measure acoustic parameters in batches of sound files — spectro_analysis","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/reference/spectro_analysis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Measure acoustic parameters in batches of sound files — spectro_analysis","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr) Grace Smith Vidaurre","code":""},{"path":"https://marce10.github.io/warbleR/reference/spectro_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure acoustic parameters in batches of sound files — spectro_analysis","text":"","code":"{ data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))  # measure acoustic parameters sp_param <- spectro_analysis(X = lbh_selec_table[1:8,], pb = FALSE, path = tempdir())  # measuring peakf sp_param <- spectro_analysis(X = lbh_selec_table[1:8,], pb = FALSE, fast = FALSE, path = tempdir())  # \\donttest{ # measuring harmonic-related parameters using progress bar sp_param <- spectro_analysis(X = lbh_selec_table[1:8,], harmonicity = TRUE,  path = tempdir(), ovlp = 70) # } } #> Warning: \"step\" should normally not be larger than \"windowLength\" ms: you are skipping parts of the sound! #> Warning: overlap must be >0 and <= 100%; resetting to 70 #> Warning: \"step\" should normally not be larger than \"windowLength\" ms: you are skipping parts of the sound! #> Warning: overlap must be >0 and <= 100%; resetting to 70 #> Warning: \"step\" should normally not be larger than \"windowLength\" ms: you are skipping parts of the sound! #> Warning: overlap must be >0 and <= 100%; resetting to 70 #> Warning: \"step\" should normally not be larger than \"windowLength\" ms: you are skipping parts of the sound! #> Warning: overlap must be >0 and <= 100%; resetting to 70 #> Warning: \"step\" should normally not be larger than \"windowLength\" ms: you are skipping parts of the sound! #> Warning: overlap must be >0 and <= 100%; resetting to 70 #> Warning: \"step\" should normally not be larger than \"windowLength\" ms: you are skipping parts of the sound! #> Warning: overlap must be >0 and <= 100%; resetting to 70 #> Warning: \"step\" should normally not be larger than \"windowLength\" ms: you are skipping parts of the sound! #> Warning: overlap must be >0 and <= 100%; resetting to 70 #> Warning: \"step\" should normally not be larger than \"windowLength\" ms: you are skipping parts of the sound! #> Warning: overlap must be >0 and <= 100%; resetting to 70"},{"path":"https://marce10.github.io/warbleR/reference/spectrograms.html","id":null,"dir":"Reference","previous_headings":"","what":"Spectrograms of selected signals — spectrograms","title":"Spectrograms of selected signals — spectrograms","text":"spectrograms creates spectrograms signals selection tables.","code":""},{"path":"https://marce10.github.io/warbleR/reference/spectrograms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spectrograms of selected signals — spectrograms","text":"","code":"spectrograms(X, wl = 512, flim = \"frange\", wn = \"hanning\", pal  = reverse.gray.colors.2, ovlp = 70, inner.mar = c(5, 4, 4, 2), outer.mar = c(0, 0, 0, 0), picsize = 1, res = 100, cexlab = 1, propwidth = FALSE, xl = 1, osci = FALSE, gr = FALSE,  sc = FALSE, line = TRUE, col = \"#07889B\", fill = adjustcolor(\"#07889B\", alpha.f = 0.15), lty = 3, mar = 0.05, it = \"jpeg\", parallel = 1, path = NULL, pb = TRUE, fast.spec = FALSE, by.song = NULL, sel.labels = \"selec\", title.labels = NULL, dest.path = NULL, box = TRUE, axis = TRUE, ...)"},{"path":"https://marce10.github.io/warbleR/reference/spectrograms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spectrograms of selected signals — spectrograms","text":"X 'selection_table', 'extended_selection_table' data frame containing columns sound file name (sound.files), selection number (selec), start end time signals (start end). 'top.freq' 'bottom.freq' columns optional. using 'extended_selection_table' sound files required (see selection_table). wl numeric vector length 1 specifying window length spectrogram, default 512. flim numeric vector length 2 frequency limit (kHz) spectrogram, spectro. function also accepts 'frange' (default) produces spectrograms frequency limit around range signal (adding 1 kHz margin). wn Character vector length 1 specifying window name. Default \"hanning\". See function ftwindow options. pal color palette function used assign colors plot, spectro. Default reverse.gray.colors.2. ovlp Numeric vector length 1 specifying percent overlap two consecutive windows, spectro. Default 70. inner.mar Numeric vector 4 elements, default c(5,4,4,2). Specifies number lines inner plot margins axis labels fall, form c(bottom, left, top, right). See par. outer.mar Numeric vector 4 elements, default c(0,0,0,0). Specifies number lines outer plot margins beyond axis labels, form c(bottom, left, top, right). See par. picsize Numeric argument length 1. Controls relative size spectrogram. Default 1. Ignored propwidth TRUE. res Numeric argument length 1. Controls image resolution. Default 100 (faster) although 300 - 400 recommended publication/ presentation quality. cexlab Numeric vector length 1 specifying relative size axis labels. See spectro. propwidth Logical argument scale width spectrogram proportionally duration selection. Default FALSE. xl Numeric vector length 1. constant scale spectrogram width propwidth = TRUE. Default 1. osci Logical argument add oscillogram underneath spectrogram, spectro. Default FALSE. gr Logical argument add grid spectrogram. Default FALSE. sc Logical argument add amplitude scale spectrogram, default FALSE. line Logical argument add lines start end times selection (box bottom.freq top.freq columns provided). Default TRUE. col Color 'line'. Default \"#07889B\". fill Fill color box around selections. Default  adjustcolor(\"#07889B\", alpha.f = 0.15). lty Type 'line' par. Default 1. mar Numeric vector length 1. Specifies margins adjacent start end points selections, dealineating spectrogram limits. Default 0.05. character vector length 1 giving image type used. Currently \"tiff\" \"jpeg\" admitted. Default \"jpeg\". parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). path Character string containing directory path sound files located. NULL (default) current working directory used. pb Logical argument control progress bar. Default TRUE. fast.spec Logical. TRUE image function used internally create spectrograms, substantially increases performance (much faster), although options become unavailable, collevels, sc (amplitude scale). option indicated signals high background noise levels. Palette colors gray.1, gray.2, gray.3, topo.1 rainbow.1 (imported package monitoR) seem work better 'fast' spectrograms. Palette colors gray.1, gray.2, gray.3 offer decreasing darkness levels. .song Character string column name containing song labels. provide single spectrogram containing elements song produce. Note function assumes song unique label within sound file. NULL (default), spectrograms produced single selections. sel.labels Character string name column(s) selection labeling. Default 'selec'. Set NULL remove labels. title.labels Character string name(s) column(s) use title. Default NULL (title). sound file song included '.song' provided. dest.path Character string containing directory path image files saved. NULL (default) folder containing sound files used instead. box Logical control box around spectrogram plotted (see box). Default TRUE. axis Logical control Y X axis spectrogram plotted (see box). Default TRUE. ... Additional arguments passed internal spectrogram creating function customizing graphical output. function modified version spectro, takes arguments.","code":""},{"path":"https://marce10.github.io/warbleR/reference/spectrograms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spectrograms of selected signals — spectrograms","text":"Image files containing spectrograms signals listed input data frame.","code":""},{"path":"https://marce10.github.io/warbleR/reference/spectrograms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spectrograms of selected signals — spectrograms","text":"function provides access batch process (modified version ) spectro function 'seewave' package. function creates spectrograms visualization vocalizations. Setting inner.mar c(4,4.5,2,1) outer.mar c(4,2,2,1) works well picsize = 2 3. Title font size, inner.mar outer.mar (mar oma) work well osci sc = TRUE, may take optimization user. Setting 'fast' argument TRUE significantly increases speed, although options become unavailable, collevels, sc (amplitude scale). option indicated signals high background noise levels.","code":""},{"path":"https://marce10.github.io/warbleR/reference/spectrograms.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spectrograms of selected signals — spectrograms","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/spectrograms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Spectrograms of selected signals — spectrograms","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr) Grace Smith Vidaurre","code":""},{"path":"https://marce10.github.io/warbleR/reference/spectrograms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spectrograms of selected signals — spectrograms","text":"","code":"{   # load and save data   data(list = c(\"Phae.long1\", \"Phae.long2\", \"lbh_selec_table\"))   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) # save sound files   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))    # make spectrograms   spectrograms(     X = lbh_selec_table, flim = c(0, 11), res = 300, mar = 0.05,     wl = 300, path = tempdir()   )    # check this folder   tempdir() } #> [1] \"/tmp/RtmpV1BiAC\""},{"path":"https://marce10.github.io/warbleR/reference/split_sound_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Splits sound files — split_sound_files","title":"Splits sound files — split_sound_files","text":"split_sound_files splits sound files shorter segments","code":""},{"path":"https://marce10.github.io/warbleR/reference/split_sound_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Splits sound files — split_sound_files","text":"","code":"split_sound_files(path = NULL, sgmt.dur = 10, sgmts = NULL, files = NULL,  parallel = 1, pb = TRUE, only.sels = FALSE, X = NULL)"},{"path":"https://marce10.github.io/warbleR/reference/split_sound_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Splits sound files — split_sound_files","text":"path Directory path sound files found. NULL (default) current working directory used. sgmt.dur Numeric. Duration (s) segments sound files split. Sound files shorter 'sgmt.dur' split. Ignored 'sgmts' supplied. sgmts Numeric. Number segments split sound file. supplied 'sgmt.dur' ignored. files Character vector indicating subset files split. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar. Default TRUE. used .sels Logical argument control data frame returned (wave files saved). Default FALSE. X 'selection_table' object data frame columns sound file name (sound.files), selection number (selec), start end time signal (start end). supplied data frame/selection table modified reflect position selections new sound files. Note selections split 2 segments. deal , 'split.sels' column added data frame selection labeled 'split'. Default NULL.","code":""},{"path":"https://marce10.github.io/warbleR/reference/split_sound_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Splits sound files — split_sound_files","text":"Wave files segment working directory (.sels = FALSE, named 'sound.file.name-#.wav') data frame R environment containing name original sound files (org.sound.files), name clips (sound.files) start end clips original files. Clips saved .wav format. 'X' supplied data frame position selections newly created clips returned instead.","code":""},{"path":"https://marce10.github.io/warbleR/reference/split_sound_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Splits sound files — split_sound_files","text":"function aims reduce size sound files order simplify processes limited sound file size (big files can manipulated, e.g. auto_detec). function keeps original number channels output clips 1- 2-channel files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/split_sound_files.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Splits sound files — split_sound_files","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/split_sound_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Splits sound files — split_sound_files","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/split_sound_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Splits sound files — split_sound_files","text":"","code":"{   # load data and save to temporary working directory   data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\"))   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"))   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))   writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))    # split files in 1 s files   split_sound_files(sgmt.dur = 1, path = tempdir())    # Check this folder   tempdir() } #> [1] \"/tmp/RtmpV1BiAC\""},{"path":"https://marce10.github.io/warbleR/reference/split_wavs.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for split_sound_files — split_wavs","title":"alternative name for split_sound_files — split_wavs","text":"alternative name split_sound_files","code":""},{"path":"https://marce10.github.io/warbleR/reference/split_wavs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for split_sound_files — split_wavs","text":"","code":"split_wavs(   path = NULL,   sgmt.dur = 10,   sgmts = NULL,   files = NULL,   parallel = 1,   pb = TRUE,   only.sels = FALSE,   X = NULL )"},{"path":"https://marce10.github.io/warbleR/reference/split_wavs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for split_sound_files — split_wavs","text":"see split_sound_files documentation. split_wavs deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sub-.extended_selection_table.html","id":null,"dir":"Reference","previous_headings":"","what":"extract method for class extended_selection_table — [.extended_selection_table","title":"extract method for class extended_selection_table — [.extended_selection_table","text":"extract method class extended_selection_table","code":""},{"path":"https://marce10.github.io/warbleR/reference/sub-.extended_selection_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract method for class extended_selection_table — [.extended_selection_table","text":"","code":"# S3 method for extended_selection_table [(X, i = NULL, j = NULL, drop = FALSE)"},{"path":"https://marce10.github.io/warbleR/reference/sub-.extended_selection_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract method for class extended_selection_table — [.extended_selection_table","text":"X Object class extended_selection_table, generated selection_table. , j,    indices specifying elements extract replace. Indices numeric character vectors empty (missing) NULL.","code":""},{"path":"https://marce10.github.io/warbleR/reference/sub-.selection_table.html","id":null,"dir":"Reference","previous_headings":"","what":"extract method for class selection_table — [.selection_table","title":"extract method for class selection_table — [.selection_table","text":"extract method class selection_table","code":""},{"path":"https://marce10.github.io/warbleR/reference/sub-.selection_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract method for class selection_table — [.selection_table","text":"","code":"# S3 method for selection_table [(X, i = NULL, j = NULL, drop = FALSE)"},{"path":"https://marce10.github.io/warbleR/reference/sub-.selection_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract method for class selection_table — [.selection_table","text":"X Object class selection_table, generated selection_table. , j,    indices specifying elements extract replace. Indices numeric character vectors empty (missing) NULL.","code":""},{"path":"https://marce10.github.io/warbleR/reference/tailor_sels.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive view of spectrograms to tailor selections — tailor_sels","title":"Interactive view of spectrograms to tailor selections — tailor_sels","text":"tailor_sels produces interactive spectrographic view start/end times frequency range acoustic signals listed data frame can adjusted.","code":""},{"path":"https://marce10.github.io/warbleR/reference/tailor_sels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive view of spectrograms to tailor selections — tailor_sels","text":"","code":"tailor_sels(X = NULL, wl = 512, flim = c(0,22), wn = \"hanning\", mar = 0.5,  osci = TRUE, pal = reverse.gray.colors.2, ovlp = 70, auto.next = FALSE, pause = 1,   comments = TRUE, path = NULL, frange = TRUE, fast.spec = FALSE, ext.window = TRUE,   width = 15, height = 5, index = NULL, collevels = NULL,   title = c(\"sound.files\", \"selec\"), ts.df = NULL, col = \"#E37222\",   alpha = 0.7, auto.contour = FALSE, ...)"},{"path":"https://marce10.github.io/warbleR/reference/tailor_sels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive view of spectrograms to tailor selections — tailor_sels","text":"X 'selection_table', 'extended_selection_table' object data frame following columns: 1) \"sound.files\": name .wav files, 2) \"selec\": number selections, 3) \"start\": start time selections, 4) \"end\": end time selections. Notice , output file (\"seltailor_output.csv\") found working directory given priority input data frame. wl numeric vector length 1 specifying spectrogram window length. Default 512. flim numeric vector length 2 specifying frequency limit (kHz) spectrogram, function spectro. Default c(0,22). wn character vector length 1 specifying window function (default \"hanning\"). See function ftwindow options. mar Numeric vector length 1. Specifies margins adjacent start end points selections define spectrogram limits. Default 0.5. osci Logical argument. TRUE adds oscillogram whenever spectrograms produced higher resolution (see seltime). Default TRUE. external program must closed resuming analysis. Default NULL. pal color palette function used assign colors plot, spectro. Default reverse.gray.colors.2. See Details. ovlp Numeric vector length 1 specifying percent overlap two consecutive windows, spectro. Default 70. auto.next Logical argument control whether functions moves automatically next selection. time interval moving next selection controlled 'pause' argument. Ignored ts.df = TRUE. pause Numeric vector length 1. Controls duration waiting period moving next selection (seconds). Default 1. comments Logical argument specifying 'sel.comment' (data frame) included title spectrograms. Default TRUE. path Character string containing directory path sound files located. frange Logical argument specifying whether limits frequency range  recorded. TRUE (default) time frequency limits recorded. fast.spec Logical. TRUE image function used internally create spectrograms, substantially increases performance (much faster), although options become unavailable, sc (amplitude scale). option indicated signals high background noise levels. Palette colors gray.1, gray.2, gray.3, topo.1 rainbow.1 (imported package monitoR) seem work better 'fast' spectrograms. Palette colors gray.1, gray.2, gray.3 offer decreasing darkness levels. ext.window Logical. TRUE external graphic window used. Default dimensions can set using 'width' 'height' arguments. Default TRUE. width Numeric length 1 controlling width external graphic window. Ignored ext.window = FALSE. Default 15. height Numeric length 1 controlling height external graphic window. Ignored ext.window = FALSE. Default 5. index Numeric vector indicating selections (rows) 'X' tailored. Default NULL. Ignored process resumed. can useful combined filtersels) output (see 'index' argument filtersels). collevels Numeric. Set levels used partition amplitude range (see spectro). title Character vector names columns included title selection. ts.df Optional. Data frame frequency contour time series signals tailored. provided 'autonext' set FALSE. Default NULL. data frame must include 'sound.files' 'selec' columns selections included 'X'. col Character vector defining color points 'ts.df' provided. Default \"#E37222\" (orange). alpha Numeric length one adjust transparency points adjusting frequency contours. auto.contour Logical. TRUE contours displayed automatically (without click 'contour'). Note adjusting selection box (frequency/time limits) available. Default FALSE. Ignored 'ts.df' provided. ... Additional arguments passed internal spectrogram creating function customizing graphical output. function modified version spectro, takes arguments.","code":""},{"path":"https://marce10.github.io/warbleR/reference/tailor_sels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive view of spectrograms to tailor selections — tailor_sels","text":"data frame similar X .csv file saved working directory start end time   selections.","code":""},{"path":"https://marce10.github.io/warbleR/reference/tailor_sels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interactive view of spectrograms to tailor selections — tailor_sels","text":"function produces interactive spectrographic  view users can select new time/frequency  coordinates selections. 4 \"buttons\" provided upper right side spectrogram   allow stop analysis (stop symbol, solid rectangle), go next sound file (\">>\"), return   previous selection (\"<<\") delete   current selection (\"X\"). additional \"button\" tailored frequency contour shown   'ts.df' provided. button contains symbol 4 point contour. unit selected, function plots   dotted lines start end selection spectrogram (box   frange = TRUE). last selection kept    selection adjusted. function produces .csv file (seltailor_output.csv)    information input data frame, except new time    coordinates, plus new column (X$tailored) indicating selection   tailored. file saved working directory  updated every time user    moves next sound file (\">>\") stop process  (stop \"button\"). also return data frame object R environment.    selection made (clicking \">>\")  original time/frequency coordinates kept. resuming process (\"stop\" re-running  function working directory), function continue working  selections analyzed. deleting file (X button) orange \"X\" returning selection. X used selection recovered.  function also displays progress bar right  top spectrogram. zoom can adjusted setting mar argument.  fix contours data.frame containing 'sound.files' 'selec' columns 'X' well  frequency values contour step must provided. function plots points corresponding  time/frequency coordinates element contour. Clicking spectrogram substitute  frequency value points. contour point closest time \"click\" replaced  frequency value \"click\".","code":""},{"path":"https://marce10.github.io/warbleR/reference/tailor_sels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interactive view of spectrograms to tailor selections — tailor_sels","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/reference/tailor_sels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interactive view of spectrograms to tailor selections — tailor_sels","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/tailor_sels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive view of spectrograms to tailor selections — tailor_sels","text":"","code":"if (FALSE) { data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))  tailor_sels(X = lbh_selec_table, flim = c(1, 12), wl = 300, auto.next = TRUE, path = tempdir())  # Read output .csv file seltailor.df <- read.csv(file.path(tempdir(), \"seltailor_output.csv\")) seltailor.df  # check this directory for .csv file after stopping function tempdir() }"},{"path":"https://marce10.github.io/warbleR/reference/test_coordination.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomization test for singing coordination — test_coordination","title":"Randomization test for singing coordination — test_coordination","text":"Monte Carlo randomization test assess statistical significance overlapping alternating singing (simultaneously occurring behavior).","code":""},{"path":"https://marce10.github.io/warbleR/reference/test_coordination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomization test for singing coordination — test_coordination","text":"","code":"test_coordination(X, iterations = 1000, ovlp.method = \"count\", randomization = \"keep.gaps\", less.than.chance = TRUE, parallel = 1, pb = TRUE, rm.incomp = FALSE, cutoff = 2, rm.solo = FALSE)"},{"path":"https://marce10.github.io/warbleR/reference/test_coordination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomization test for singing coordination — test_coordination","text":"X Data frame containing columns singing event (sing.event), individual (indiv), start end time signal (start end). iterations number iterations shuffling calculation expected number overlaps. Default 1000. ovlp.method Character string defining method measure amount overlap. Three methods available: count: count number overlapping signals (default) time.overlap: measure total duration (s) signals overlap time.distance: measure time (s) individual's closest signal. method can take 2 individuals. randomization Character string defining procedure signal randomization. Three methods available: keep.gaps position signals gaps (.e. intervals signals) randomized. Default. sample.gaps gaps simulated using lognormal distribution  mean standard deviation derived observed gaps. Signal position randomized. keep.song.order position gaps randomized. details Masco et al. (2015). less..chance Logical. TRUE test evaluates whether overlaps occur less often expected chance. FALSE opposite pattern evaluated (whether overlaps occur often expected chance). Default TRUE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). pb Logical argument control progress bar. Default TRUE. rm.incomp Logical. TRUE removes events 2 interacting individuals. Default FALSE. cutoff Numeric. Determines minimum number signals per individual singing event. Events meeting criterium removed. Default 2. Note randomization tests reliable small sample sizes. Ideally 10 signals per individual available singing event. rm.solo Logical. Controls signals alternated start end sequence removed (TRUE). instance, sequence signals ---B--B--B-B-B (B represent different individuals, 'indiv' column) subset -B--B--B. Default  FALSE.","code":""},{"path":"https://marce10.github.io/warbleR/reference/test_coordination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Randomization test for singing coordination — test_coordination","text":"data frame following columns: sing.event: singing event ID obs.overlap: observed amount overlap (counts total duration, depending overlap method, see 'ovlp.method' argument) mean.random.ovlp: mean amount overlap expected chance p.value: p value coor.score: coordination score (sensu Araya-Salas et al. 2017),    calculated :    $$(obs.overlap - mean.random.ovlp) / mean.random.ovlp$$    Positive values indicate tendency overlap negative values indicate tendency alternate. NA values returned events randomized (e.g. signals).","code":""},{"path":"https://marce10.github.io/warbleR/reference/test_coordination.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Randomization test for singing coordination — test_coordination","text":"function calculates probability finding equal extreme amount song overlap (higher lower) coordinated singing event (pair-coordinated behavior). function shuffles sequences signals silence--signals individuals produce null distribution overlaps expected chance. observed overlaps compared expected values. p-values calculated proportion random expected values lower (higher) observed value. procedures described Masco et al. (2015) implemented. addition, either number (ovlp.method = \"count\") total duration (ovlp.method = \"time.overlap\") signals overlap can used estimating overall degree overlap. function runs one test singing event input data frame. function assumes overlaps signals belonging individual. See Masco et al. (2015) recommendations randomization procedures specific signal structures.","code":""},{"path":"https://marce10.github.io/warbleR/reference/test_coordination.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Randomization test for singing coordination — test_coordination","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals.  Methods Ecology Evolution, 8(2), 184-191.Araya-Salas M., Wojczulanis-Jakubas K., Phillips E.M., Mennill D.J., Wright T.F. (2017) overlap overlap: context-dependent coordinated singing lekking long-billed hermits. Animal Behavior  124, 57-65.Keenan EL, Odom KJ, M Araya-Salas, KG Horton, M Strimas-Mackey,MA Meatte, NI Mann,PJ Slater,JJ Price, CN Templeton . 2020. Breeding season length predicts duet coordination consistency Neotropical wrens (Troglodytidae). Proceeding Royal Society B. 20202482.Masco, C., Allesina, S., Mennill, D. J., Pruett-Jones, S. (2015). Song Overlap Null model Generator (SONG): new tool distinguishing random non-random song overlap. Bioacoustics.Rivera-Caceres K, E Quiros-Guerrero E, M Araya-Salas, C Templeton & W Searcy. (2018). Early development vocal interaction rules duetting songbird. Royal Society Open Science. 5, 171791.Rivera-Caceres K, E Quiros-Guerrero, M Araya-Salas & W Searcy. (2016). Neotropical wrens learn new duet adults. Proceedings Royal Society B. 285, 20161819","code":""},{"path":"https://marce10.github.io/warbleR/reference/test_coordination.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Randomization test for singing coordination — test_coordination","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/test_coordination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Randomization test for singing coordination — test_coordination","text":"","code":"{ #load  simulated singing data (see data documentation) data(sim_coor_sing)  # set global options (this can also be set within the function call) warbleR_options(iterations = 100, pb = FALSE)  # testing if coordination happens less than expected by chance test_coordination(sim_coor_sing)  # testing if coordination happens more than expected by chance test_coordination(sim_coor_sing, less.than.chance = FALSE)  # using \"duration\" method and \"keep.song.order\" as randomization procedure test_coordination(sim_coor_sing, ovlp.method =  \"time.overlap\", randomization = \"keep.song.order\") } #>   sing.event obs.ovlp mean.random.ovlp p.value coor.score #> 1     altern 1.098593         3.234261    0.00      -0.66 #> 2       ovlp 5.991010         3.651997    1.00       0.64 #> 3    uncoord 3.097526         3.225044    0.35      -0.04"},{"path":"https://marce10.github.io/warbleR/reference/track_freq_contour.html","id":null,"dir":"Reference","previous_headings":"","what":"Spectrograms with frequency measurements — track_freq_contour","title":"Spectrograms with frequency measurements — track_freq_contour","text":"track_freq_contour creates spectrograms visualize dominant fundamental frequency measurements (contours)","code":""},{"path":"https://marce10.github.io/warbleR/reference/track_freq_contour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spectrograms with frequency measurements — track_freq_contour","text":"","code":"track_freq_contour(X, wl = 512, wl.freq = 512, flim = NULL, wn = \"hanning\", pal =   reverse.gray.colors.2, ovlp = 70, inner.mar = c(5, 4, 4, 2), outer.mar =   c(0, 0, 0, 0), picsize = 1, res = 100, cexlab = 1, title = TRUE, propwidth = FALSE,   xl = 1, osci = FALSE, gr = FALSE, sc = FALSE, bp = NULL, cex = c(0.6, 1),   threshold = 15, threshold.time = NULL, threshold.freq = NULL, contour = \"both\",   col = c(\"#E37222B3\", \"#07889BB3\"), pch = c(21, 24),  mar = 0.05, lpos = \"topright\",   it = \"jpeg\", parallel = 1, path = NULL, img.suffix = NULL, custom.contour = NULL,   pb = TRUE, type = \"p\", leglab = c(\"Ffreq\", \"Dfreq\"), col.alpha = 0.6, line = TRUE,    fast.spec = FALSE, ff.method = \"seewave\", frange.detec = FALSE, fsmooth = 0.1,    widths = c(2, 1), freq.continuity = NULL, clip.edges = 2, track.harm = FALSE, ...)"},{"path":"https://marce10.github.io/warbleR/reference/track_freq_contour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spectrograms with frequency measurements — track_freq_contour","text":"X object class 'selection_table', 'extended_selection_table' data frame containing columns sound file name (sound.files), selection number (selec), start end time signal (start end). output auto_detec can also used input data frame. wl numeric vector length 1 specifying window length spectrogram, default 512. wl.freq numeric vector length 1 specifying window length spectrogram measurements frequency spectrum. Default 512. Higher values provide accurate measurements. flim numeric vector length 2 frequency limit spectrogram (kHz), spectro. Default NULL. wn Character vector length 1 specifying window name. Default \"hanning\". See function ftwindow options. pal color palette function used assign colors plot, spectro. Default reverse.gray.colors.2. ovlp Numeric vector length 1 specifying % overlap two consecutive windows, spectro. Default 70. inner.mar Numeric vector 4 elements, default c(5,4,4,2). Specifies number lines inner plot margins axis labels fall, form c(bottom, left, top, right). See par. outer.mar Numeric vector 4 elements, default c(0,0,0,0). Specifies number lines outer plot margins beyond axis labels, form c(bottom, left, top, right). See par. picsize Numeric argument length 1. Controls relative size spectrogram. Default 1. res Numeric argument length 1. Controls image resolution. Default 100 (faster) although 300 - 400 recommended publication/ presentation quality. cexlab Numeric vector length 1 specifying relative size axis labels. See spectro. title Logical argument add title individual spectrograms. Default TRUE. propwidth Logical argument scale width spectrogram proportionally duration selected call. Default FALSE. xl Numeric vector length 1. constant scale spectrogram width. Default 1. osci Logical argument add oscillogram underneath spectrogram, spectro. Default FALSE. gr Logical argument add grid spectrogram. Default FALSE. sc Logical argument add amplitude scale spectrogram, default FALSE. bp numeric vector length 2 lower upper limits frequency bandpass filter (kHz) \"frange\" indicate values bottom.freq top.freq columns used bandpass limits. Default NULL. cex Numeric vector length 2, specifies relative size points plotted frequency measurements legend font/points, respectively. See spectro. threshold amplitude threshold (%) fundamental dominant frequency detection well frequency range spectrum (see 'frange.detec'). Default 15. DEPRECATED. Use 'threshold.time' 'threshold.time' instead. threshold.time amplitude threshold (%) time domain. Use fundamental dominant frequency detection. NULL (default) 'threshold' value used. threshold.freq amplitude threshold (%) frequency domain. Use frequency range detection spectrum (see 'frange.detec'). NULL (default) 'threshold' value used. contour Character vector, one \"df\", \"ff\" \"\", specifying whether dominant fundamental frequencies plotted. Default \"\". col Vector length 1 2 specifying colors points plotted mark fundamental dominant frequency measurements respectively (plotted). Default c(\"#E37222B3\", \"#07889BB3\"). Extreme values (lowest highest) highlighted yellow. pch Numeric vector length 1 2 specifying plotting characters frequency measurements. Default c(21, 24). mar Numeric vector length 1. Specifies margins adjacent selections set spectrogram limits. Default 0.05. lpos Character vector length 1 numeric vector length 2, specifying position legend. former, keyword accepted xy.coords can used (see ). latter, first value x coordinate second value y coordinate legend's position. Default \"topright\". character vector length 1 giving image type used. Currently \"tiff\" \"jpeg\" admitted. Default \"jpeg\". parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). path Character string containing directory path sound files located. NULL (default) current working directory used. img.suffix character vector length 1 suffix (label) add end names image files. Default NULL. custom.contour data frame frequency contours exactly sound files selection X. frequency values assumed equally spaced start end signal. first 2 columns data frame contain 'sound.files' 'selec' columns identical corresponding columns X (order). pb Logical argument control progress bar. Default TRUE. type character vector length 1 indicating type frequency contour plot drawn. Possible types \"p\" points, \"l\" lines \"b\" . leglab character vector length 1 2 containing label(s) frequency contour legend output image. col.alpha numeric vector length 1  within [0,1] indicating transparent lines/points . line Logical argument add red lines (box bottom.freq top.freq columns provided) start end times selection. Default TRUE. fast.spec Logical. TRUE image function used internally create spectrograms, substantially increases performance (much faster), although options become unavailable, collevels, sc (amplitude scale). option indicated signals high background noise levels. Palette colors gray.1, gray.2, gray.3, topo.1 rainbow.1 (imported package monitoR) seem work better 'fast' spectrograms. Palette colors gray.1, gray.2, gray.3 offer decreasing darkness levels. ff.method Character. Selects method used calculate fundamental frequency. Either 'tuneR' (using FF) 'seewave' (using fund). Default 'seewave'. 'tuneR' performs faster (seems accurate) 'seewave'. frange.detec Logical. Controls whether frequency range signal automatically detected  using freq_range_detec function. , range used bandpass filter (overwriting 'bp' argument). Default FALSE. fsmooth numeric vector length 1 smooth frequency spectrum mean sliding window (kHz) used frequency range detection (frange.detec = TRUE). help average amplitude \"hills\" minimize effect amplitude modulation. Default 0.1. widths Numeric vector length 2 control relative widths spectro (first element) spectrum (second element,  (frange.detec = TRUE)). freq.continuity Numeric vector length 1 control whether dominant frequency detections outliers(.e differ frequency detections right ) removed. given kHz. Default NULL. clip.edges Integer vector length 1 control many 'frequency-wise discontinuous' detection remove start end signals (see 'freq.continuity' argument). Default 2. Ignored freq.continuity = NULL. track.harm Logical control track_harmonic modified version dfreq used dominant frequency detection. Default FALSE (use dfreq). ... Additional arguments passed internal spectrogram creating function customizing graphical output. function modified version spectro, takes arguments.","code":""},{"path":"https://marce10.github.io/warbleR/reference/track_freq_contour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spectrograms with frequency measurements — track_freq_contour","text":"Spectrograms signals listed input data frame showing location dominant fundamental frequencies.","code":""},{"path":"https://marce10.github.io/warbleR/reference/track_freq_contour.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spectrograms with frequency measurements — track_freq_contour","text":"function provides visualization frequency measurements ones   made spectro_analysis, freq_ts freq_DTW. Frequency measures can made function input   user (see 'custom.contour' argument). frange = TRUE function uses freq_range_detec detect frequency range. case graphical output includes   frequency spectrum showing detection threshold. Extreme values (lowest highest) highlighted yellow.   Note , unlike warbleR functions measure frequency contours, track_freq_contour interpolate frequency values.","code":""},{"path":"https://marce10.github.io/warbleR/reference/track_freq_contour.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spectrograms with frequency measurements — track_freq_contour","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/track_freq_contour.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Spectrograms with frequency measurements — track_freq_contour","text":"Grace Smith Vidaurre Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/track_freq_contour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spectrograms with frequency measurements — track_freq_contour","text":"","code":"{   # load data   data(\"Cryp.soui\")   writeWave(Cryp.soui, file.path(tempdir(), \"Cryp.soui.wav\")) # save sound files    # autodetec location of signals   ad <- auto_detec(     threshold = 6, bp = c(1, 3), mindur = 1.2, flim = c(0, 5),     maxdur = 3, img = FALSE, ssmooth = 600, wl = 300, flist = \"Cryp.soui.wav\",     path = tempdir()   )    # track dominant frequency graphs with freq range detection   track_freq_contour(     X = ad[!is.na(ad$start), ], flim = c(0, 5), ovlp = 90,     it = \"tiff\", bp = c(1, 3), contour = \"df\", wl = 300, frange = TRUE,     path = tempdir()   )    # using users frequency data (custom.contour argument)   # first get contours using freq_ts   df <- freq_ts(     X = ad[!is.na(ad$start), ], flim = c(0, 5), ovlp = 90, img = FALSE,     bp = c(1, 3), wl = 300, path = tempdir()   )    # now input the freq_ts output into track_freq_contour   track_freq_contour(     X = ad[!is.na(ad$start), ], custom.contour = df, flim = c(0, 5), ovlp = 90,     it = \"tiff\", path = tempdir()   )    # Check this folder   tempdir()    # track both frequencies   track_freq_contour(     X = ad[!is.na(ad$start), ], flim = c(0, 5), ovlp = 90,     it = \"tiff\", bp = c(1, 3), contour = \"both\", wl = 300, path = tempdir()   ) } #> Warning: This function will be deprecated in future warbleR versions, please look at the ohun package for automatic signal detection functions (https://marce10.github.io/ohun/index.html) #> Warning: 'img' has been deprecated. Use full_spectrograms() to create images from auto_detec() output #> Warning: 'flim' has been deprecated. Use full_spectrograms() to create images from auto_detec() output #> NULL"},{"path":"https://marce10.github.io/warbleR/reference/track_harmonic.html","id":null,"dir":"Reference","previous_headings":"","what":"Track harmonic frequency contour — track_harmonic","title":"Track harmonic frequency contour — track_harmonic","text":"track_harmonic tracks frequency contour dominant harmonic.","code":""},{"path":"https://marce10.github.io/warbleR/reference/track_harmonic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Track harmonic frequency contour — track_harmonic","text":"","code":"track_harmonic(wave, f, wl = 512, wn = \"hanning\", ovlp = 0, fftw = FALSE, at = NULL, tlim = NULL, threshold = 10, bandpass = NULL, clip = NULL, plot = TRUE, xlab = \"Times (s)\", ylab = \"Frequency (kHz)\",  ylim = c(0, f/2000), adjust.wl = FALSE, dfrq = FALSE, ...)  track_harmonic(   wave,   f,   wl = 512,   wn = \"hanning\",   ovlp = 0,   fftw = FALSE,   at = NULL,   tlim = NULL,   threshold = 10,   bandpass = NULL,   clip = NULL,   plot = TRUE,   xlab = \"Times (s)\",   ylab = \"Frequency (kHz)\",   ylim = c(0, f/2000),   adjust.wl = FALSE,   dfrq = FALSE,   ... )"},{"path":"https://marce10.github.io/warbleR/reference/track_harmonic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Track harmonic frequency contour — track_harmonic","text":"wave 'wave' object produced readWave similar functions. f Sampling frequency wave object (Hz). need specified embedded wave. wl numeric vector length 1 specifying window length FFT, default 512. wn Character vector length 1 specifying window name. Default \"hanning\". See function ftwindow options. used calculating frequency spectrum (using meanspec) producing spectrogram (using spectro, plot = TRUE). ovlp Numeric vector length 1 specifying % overlap two consecutive time windows, spectro. Default 0. fftw TRUE calls function FFT library fftw. See Notes spectro function. Default FALSE. Time position harmonic frequency contour computed (seconds). Default NULL. tlim time range measure frequency contours. Default NULL (means measure across entire wave object). threshold Amplitude threshold (%) dominant frequency detection. Default 10. bandpass numeric vector length 2 lower upper limits frequency bandpass filter (kHz). clip numeric value select dominant frequency values according amplitude reference maximal value 1 whole signal (>0 & < 1). plot Logical, TRUE plots dominant frequency time. Default TRUE. xlab Label time axis. ylab Label frequency axis. ylim numeric vector length 2 frequency limit spectrogram (kHz), spectro. Default c(0, f/2000). adjust.wl Logical. TRUE 'wl' (window length) reset lower number samples selection number samples less 'wl'. Default FALSE. dfrq Logical. TRUE seewave's dfreq used instead. Default FALSE. ... Additional arguments passed plotting function.","code":""},{"path":"https://marce10.github.io/warbleR/reference/track_harmonic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Track harmonic frequency contour — track_harmonic","text":"modified version seewave's dfreq function allows track frequency contour dominant harmonic even highest amplitude jumps harmonics. arguments default values original dfreq function kept unchanged facilitate switching 2 functions. see track_harmonic documentation. track_harmonic deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/track_harmonic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Track harmonic frequency contour — track_harmonic","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/track_harmonic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Track harmonic frequency contour — track_harmonic","text":"Jerome Sueur, modified Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/trackfreqs.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for track_freq_contour — trackfreqs","title":"alternative name for track_freq_contour — trackfreqs","text":"alternative name track_freq_contour","code":""},{"path":"https://marce10.github.io/warbleR/reference/trackfreqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for track_freq_contour — trackfreqs","text":"","code":"trackfreqs(   X,   wl = 512,   wl.freq = 512,   flim = NULL,   wn = \"hanning\",   pal = reverse.gray.colors.2,   ovlp = 70,   inner.mar = c(5, 4, 4, 2),   outer.mar = c(0, 0, 0, 0),   picsize = 1,   res = 100,   cexlab = 1,   title = TRUE,   propwidth = FALSE,   xl = 1,   osci = FALSE,   gr = FALSE,   sc = FALSE,   bp = NULL,   cex = c(0.6, 1),   threshold = 15,   threshold.time = NULL,   threshold.freq = NULL,   contour = \"both\",   col = c(\"#E37222B3\", \"#07889BB3\"),   pch = c(21, 24),   mar = 0.05,   lpos = \"topright\",   it = \"jpeg\",   parallel = 1,   path = NULL,   img.suffix = NULL,   custom.contour = NULL,   pb = TRUE,   type = \"p\",   leglab = c(\"Ffreq\", \"Dfreq\"),   col.alpha = 0.6,   line = TRUE,   fast.spec = FALSE,   ff.method = \"seewave\",   frange.detec = FALSE,   fsmooth = 0.1,   widths = c(2, 1),   freq.continuity = NULL,   clip.edges = 2,   track.harm = FALSE,   ... )"},{"path":"https://marce10.github.io/warbleR/reference/trackfreqs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for track_freq_contour — trackfreqs","text":"see track_freq_contour documentation. trackfreqs deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/try_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for ","title":"Wrapper for ","text":"try_na silly wrapper try function returns NA error found. DEPRECATED FUTURE VERSIONS.","code":""},{"path":"https://marce10.github.io/warbleR/reference/try_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for ","text":"","code":"try_na(expr, silent = TRUE, outFile)"},{"path":"https://marce10.github.io/warbleR/reference/try_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for ","text":"expr R expression try. silent Logical control whether report error messages suppressed. Default TRUE. outFile connection, character string naming file print (via message2(*, file = outFile)); used silent false, default.","code":""},{"path":"https://marce10.github.io/warbleR/reference/try_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for ","text":"Returns `NA` error occurs evaluation expression. , return result evaluation.","code":""},{"path":"https://marce10.github.io/warbleR/reference/try_na.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper for ","text":"silly wrapper try returns `NA` error occurs evaluation expression. See try details.","code":""},{"path":"https://marce10.github.io/warbleR/reference/try_na.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wrapper for ","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.","code":""},{"path":"https://marce10.github.io/warbleR/reference/try_na.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wrapper for ","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/try_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for ","text":"","code":"{ # try a function that does not exists to produce an error try_na(crazy78(12))  # try a real function (no error) try_na(mean(1:5)) } #> [1] 3"},{"path":"https://marce10.github.io/warbleR/reference/tweak_spectro.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a mosaic of spectrograms with varying display parameters — tweak_spectro","title":"Plot a mosaic of spectrograms with varying display parameters — tweak_spectro","text":"tweak_spectro plots mosaic spectrograms varying display parameters facilitate selection display parameters","code":""},{"path":"https://marce10.github.io/warbleR/reference/tweak_spectro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a mosaic of spectrograms with varying display parameters — tweak_spectro","text":"","code":"tweak_spectro(X, length.out = 5, ovlp = 90, wl = c(100, 1000), wn = \"hanning\",  collev.min = -40, pal = \"reverse.gray.colors.2\", path = NULL, rm.axes = TRUE, ...)"},{"path":"https://marce10.github.io/warbleR/reference/tweak_spectro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a mosaic of spectrograms with varying display parameters — tweak_spectro","text":"X object class 'selection_table', 'extended_selection_table' data frame single row columns sound file name (sound.files), selection number (selec),  start end time signal (start end). Default NULL. length.Numeric vector length 1 controlling number sublevels numeric arguments range provided. Ranges allowed 'ovlp', 'wl', 'collev.min' arguments. ovlp Numeric vector length 1 2 specifying % overlap ( lower/upper values desired range) two consecutive windows,  spectro. Default 90. wl numeric vector length 1 2 specifying window length (length 1) lower upper range limits desired window length range (length 2) creating spectrograms. Default c(100, 1000). wn Character vector specifying window function names used. Several names can provided. See ftwindow name options. Default \"hanning\". \"\", window functions available used. collev.min (negative) numeric vector length 1 2. Determines first argument use 'collevels' internal spectrogram creating function. replaces  first element 'collevels' spectro. Note 'collevels' available function tweak_spectro. pal Color palette function spectrogram. Default \"reverse.gray.colors.2\".  Several palettes can provided character vector. Note , contrary  warbleR seewave functions,  palette provided character string rather function. See  spectro palettes. path Character string containing directory path sound file located. rm.axes Logical. TRUE frequency time axes excluded. Default TRUE. ... Additional arguments passed catalog function customizing graphical output. Check catalog details.","code":""},{"path":"https://marce10.github.io/warbleR/reference/tweak_spectro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a mosaic of spectrograms with varying display parameters — tweak_spectro","text":"Image files spectrograms entire sound files working directory. Multiple pages can returned, depending length sound file.","code":""},{"path":"https://marce10.github.io/warbleR/reference/tweak_spectro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a mosaic of spectrograms with varying display parameters — tweak_spectro","text":"functions aims simplify selection spectrogram parameters.  function plots, single selection, mosaic spectrograms varying  display parameters. numeric arguments upper lower limits range can provided. following arguments accept can varying values: wl: Windows length (numeric range) ovlp: Overlap (numeric range) collev.min: Minimum value color levels (numeric range) wn: window function names (character) pal: palette (character) Outputs similar catalog. output image files can put together single pdf file catalog2pdf.   recommend using low resolution (~60-100) smaller dimensions (width & height < 10)   aiming generate pdfs (otherwise pdfs pretty big).","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/tweak_spectro.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a mosaic of spectrograms with varying display parameters — tweak_spectro","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/warbleR.html","id":null,"dir":"Reference","previous_headings":"","what":"warbleR: A package to streamline bioacoustic analysis — warbleR","title":"warbleR: A package to streamline bioacoustic analysis — warbleR","text":"warbleR intended facilitate analysis structure animal acoustic signals R. Users can collect open-access avian recordings enter data workflow facilitates spectrographic visualization measurement acoustic parameters. warbleR makes use fundamental sound analysis tools seewave package, offers new tools acoustic structure analysis. tools available batch analysis acoustic signals.","code":""},{"path":"https://marce10.github.io/warbleR/reference/warbleR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"warbleR: A package to streamline bioacoustic analysis — warbleR","text":"main features package : use loops apply tasks acoustic signals referenced selection table production images working folder spectrograms allow organize data verify acoustic analyzes package offers functions : Explore download Xeno Canto recordings Explore, organize manipulate multiple sound files Detect signals automatically (frequency time) Create spectrograms complete recordings individual signals Run different measures acoustic signal structure Evaluate performance measurement methods Catalog signals Characterize different structural levels acoustic signals Statistical analysis duet coordination Consolidate databases annotation tables functions allow parallelization tasks, distributes tasks among several processors improve computational efficiency. Tools evaluate performance analysis step also available. addition, warbleR satisfies need rigorous open source bioacoustic analysis, facilitates opportunities use research innovation additional custom analyzes. warbleR package offers three overarching categories   functions: License: GPL (>= 2)","code":""},{"path":"https://marce10.github.io/warbleR/reference/warbleR.html","id":"obtaining-animal-vocalization-data","dir":"Reference","previous_headings":"","what":"Obtaining animal vocalization data","title":"warbleR: A package to streamline bioacoustic analysis — warbleR","text":"query_xc: Download recordings /metadata 'Xeno-Canto' sim_songs: Simulate animal vocalizations","code":""},{"path":"https://marce10.github.io/warbleR/reference/warbleR.html","id":"managing-sound-files","dir":"Reference","previous_headings":"","what":"Managing sound files","title":"warbleR: A package to streamline bioacoustic analysis — warbleR","text":"read_wave: Read wave files 'wave' objects read_sound_file: Read sound files 'wave' objects selection_table: Create 'selection_table' class objects mp32wav: Convert several .mp3 files working directory .wav   format check_sels: Check whether selections can read subsequent functions check_wavs: Check whether .wav files can read subsequent   functions minimum windows length (\"wl\" argument) can used fix_wavs: Fix .wav files can read functions split_wavs: Split .wav fies several sound files resample_est_waves: Resample wave objects extended selection tables duration_wavs: Determine duration sound files cut_sels: Cut selections selection table individual sound files remove_silence: Remove silence segments wave files remove_channels: Remove channels wave files consolidate: Consolidate sound files single folder selection_table: Create double-checked self-contained selection tables fix_extended_selection_table: Fix attributes extended selection tables","code":""},{"path":"https://marce10.github.io/warbleR/reference/warbleR.html","id":"exploring-analyzing-signal-structure","dir":"Reference","previous_headings":"","what":"Exploring/analyzing signal structure","title":"warbleR: A package to streamline bioacoustic analysis — warbleR","text":"auto_detec: Automatically detect start   end acoustic signals tailor_sels: Interactive view spectrograms tailor start end selections sig2noise: Measure signal--noise ratio across multiple files track_freq_contour: Create spectrograms visualize frequency   measurements filter_sels: Filter selection data frames based filtered image files freq_range: Detect frequency range iteratively signals selection table freq_range_detec: Detect frequency range Wave object spectro_analysis: Measure acoustic parameters selected acoustic   signals mfcc_stats: Calculate descriptive statistics Mel-frequency cepstral coefficients song_analysis: Measure acoustic parameters higher levels organization cross_correlation: Pairwise cross-correlation multiple signals gaps: Measures gap duration freq_ts: Extract frequency contours signal time series find_peaks: Find peaks cross-correlation scores cross_correlation freq_DTW: Calculate acoustic dissimilarity using dynamic time warping    frequency contours wpd_features: Measure wavelet packet decomposition features compare_methods: Produce graphs visually assess performance acoustic   distance measurements test_coordination: Assess statistical significance singing coordination overlapping_sels: Find selections overlap time within given sound file track_harmonic:  Track harmonic frequency contour","code":""},{"path":"https://marce10.github.io/warbleR/reference/warbleR.html","id":"graphical-outputs","dir":"Reference","previous_headings":"","what":"Graphical outputs","title":"warbleR: A package to streamline bioacoustic analysis — warbleR","text":"map_xc: Create maps visualize geographic spread 'Xeno-Canto' recordings catalog: Produce vocalization catalog spectrograms array   several rows columns catalog2pdf: Combine catalog images single pdf files plot_coordination: Create graphs coordinated singing color_spectro: Highlight spectrogram regions full_spectrograms: Produce spectrograms whole recordings split   multiple rows full_spectrogram2pdf: Combine lspec images single pdf files spectrograms: Create spectrograms selections snr_spectrograms: Create spectrograms visualize margins   noise measured sig2noise phylo_spectro: Add spectrograms onto phylogenetic trees tweak_spectro: Visually inspect effect different settings creating (improving) spectrograms","code":""},{"path":"https://marce10.github.io/warbleR/reference/warbleR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"warbleR: A package to streamline bioacoustic analysis — warbleR","text":"Marcelo Araya-Salas & Grace Smith Vidaurre Maintainer: Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/warbleR_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Setting warbleR options — warbleR_options","title":"Setting warbleR options — warbleR_options","text":"warbleR_options sets global parameters warbleR functions","code":""},{"path":"https://marce10.github.io/warbleR/reference/warbleR_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setting warbleR options — warbleR_options","text":"","code":"warbleR_options(reset = FALSE, ...)"},{"path":"https://marce10.github.io/warbleR/reference/warbleR_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setting warbleR options — warbleR_options","text":"reset Logical. TRUE global parameters removed. Default FALSE. ... Arguments `parameter = value` form, list tagged values. tags (.e. parameters) must come list parameters described .","code":""},{"path":"https://marce10.github.io/warbleR/reference/warbleR_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setting warbleR options — warbleR_options","text":"parameters set warbleR_options, former values returned invisible named list. list can passed argument pboptions restore parameter values. function called arguments current option values printed.","code":""},{"path":"https://marce10.github.io/warbleR/reference/warbleR_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Setting warbleR options — warbleR_options","text":"function aims simplify use parameters apply many warbleR functions (.e. global parameters) setting default value used function downstream analyses. Tags set warbleR_options used iby functions share arguments. However, argument set within function call overwrite values set warbleR_options. Hence, functions remain 'flexible' parameters can also modified 'fly'. following tags available: bp: Numeric vector length 2 giving lower upper limits   frequency bandpass filter (kHz). collevels:  numeric vector length 3. Specifies levels partition   amplitude range spectrogram (dB) spectro. levels higher   resolution spectrogram. lower first value darker spectrograms. flim: numeric vector length 2 frequency limit kHz   spectrogram, spectro. : character vector length 1 giving image type used. Currently \"tiff\" \"jpeg\" admitted. osci: Logical argument add oscillogram underneath spectrogram,   spectro. pal: color palette function used assign colors   plot, spectro. parallel: Numeric. Controls whether parallel computing applied. specifies number cores used iterative functions. pb: Logical argument control whether progress bar used. res: Numeric argument length 1. Controls image resolution image creating functions. wav.path: Character string containing directory path    sound files located. Used 'path' functions sound files read. wl: numeric vector length 1 specifying window length creating spectrogram (either plotting measuring spectrogram parameters). wn: Character vector length 1 specifying window name creating spectrogram (either plotting measuring spectrogram parameters). See function ftwindow options.","code":""},{"path":"https://marce10.github.io/warbleR/reference/warbleR_options.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Setting warbleR options — warbleR_options","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/warbleR_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setting warbleR options — warbleR_options","text":"","code":"{   # load data and save in temporary working directory   data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\", \"lbh_selec_table\"))   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"))   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))   writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\"))   writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))    # sig2noise with progress bar (by default is TRUE)   a <- sig2noise(X = lbh_selec_table, mar = 0.1, path = tempdir())    # set progress bar to FALSE with warbleR_options   warbleR_options(pb = FALSE, path = tempdir())    # sig2noise without progress bar   a <- sig2noise(X = lbh_selec_table, mar = 0.1)    # sig2noise with progress bar by setting it within the function call (overwritting options)   a <- sig2noise(X = lbh_selec_table, pb = TRUE, mar = 0.1)    # sig2noise without progress bar using warbleR_options setting again   a <- sig2noise(X = lbh_selec_table, mar = 0.1) }"},{"path":"https://marce10.github.io/warbleR/reference/wav_2_flac.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert .wav files to .flac — wav_2_flac","title":"Convert .wav files to .flac — wav_2_flac","text":"wav_2_flac converts several .wav files .flac compressed lossless format","code":""},{"path":"https://marce10.github.io/warbleR/reference/wav_2_flac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert .wav files to .flac — wav_2_flac","text":"","code":"wav_2_flac(files = NULL, path = NULL, overwrite = FALSE, pb = TRUE, parallel = 1, reverse = FALSE, compression = 5, flac.path)"},{"path":"https://marce10.github.io/warbleR/reference/wav_2_flac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert .wav files to .flac — wav_2_flac","text":"files character vector names files converted. NULL files working directory ('path' supplied) converted. path Character string containing directory path .wav files located. NULL (default) current working directory used. overwrite Logical. Control whether .flac sound file already working directory overwritten. pb Logical argument control progress bar shown. Default TRUE. can also set globally using 'pb' option (see warbleR_options). parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing). can also set globally using 'parallel' option (see warbleR_options). reverse Logical argument control .wav files converted .flac files (default, reverse = FALSE) .flac files converted .wav files reverse = TRUE. compression Numeric string length 1 indicating level compression .flac files. Must number 0 (lowest) 8 (highest compression). Default 5. flac.path Path flac program, mostly needed windows OS.","code":""},{"path":"https://marce10.github.io/warbleR/reference/wav_2_flac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert .wav files to .flac — wav_2_flac","text":".flac files saved working directory name original wav files.","code":""},{"path":"https://marce10.github.io/warbleR/reference/wav_2_flac.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert .wav files to .flac — wav_2_flac","text":"function convert .wav files working directory 'path' supplied .flac format (opposite reverse = TRUE). reading 'flac' files windows path .exe required. can set using 'flac.path' argument (globally using argument warbleR_options). Note reading 'flac' files requires creating temporary copy 'wav' format, can particularly slow long files. convert .wav files working directory .flac compressed lossless format. just silly wrapper (wav2flac) simplify converting several files . function works recursively, converting files within subfolders.","code":""},{"path":"https://marce10.github.io/warbleR/reference/wav_2_flac.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert .wav files to .flac — wav_2_flac","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/wav_2_flac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert .wav files to .flac — wav_2_flac","text":"","code":"if (FALSE) { # create some .wav files data(list = c(\"Phae.long1\", \"Phae.long2\", \"Phae.long3\", \"Phae.long4\")) writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\")) writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\")) writeWave(Phae.long3, file.path(tempdir(), \"Phae.long3.wav\")) writeWave(Phae.long4, file.path(tempdir(), \"Phae.long4.wav\"))  # Convert all files to .flac format wav_2_flac(path = tempdir())  # check this folder!! open_wd(tempdir()) }"},{"path":"https://marce10.github.io/warbleR/reference/wav_dur.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for duration_sound_files — wav_dur","title":"alternative name for duration_sound_files — wav_dur","text":"alternative name duration_sound_files","code":""},{"path":"https://marce10.github.io/warbleR/reference/wav_dur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for duration_sound_files — wav_dur","text":"","code":"wav_dur(   files = NULL,   path = NULL,   skip.error = FALSE,   file.format = \"\\\\.wav$|\\\\.wac$|\\\\.mp3$|\\\\.flac$\" )"},{"path":"https://marce10.github.io/warbleR/reference/wav_dur.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for duration_sound_files — wav_dur","text":"see duration_sound_files documentation. wavdur deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/wav_info.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for info_sound_files — wav_info","title":"alternative name for info_sound_files — wav_info","text":"alternative name info_sound_files","code":""},{"path":"https://marce10.github.io/warbleR/reference/wav_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for info_sound_files — wav_info","text":"","code":"wav_info(   path = NULL,   parallel = 1,   pb = TRUE,   skip.error = FALSE,   file.format = \"\\\\.wav$|\\\\.wac$|\\\\.mp3$|\\\\.flac$\" )"},{"path":"https://marce10.github.io/warbleR/reference/wav_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for info_sound_files — wav_info","text":"see info_sound_files documentation. wav_info deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/wavdur.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for duration_sound_files — wavdur","title":"alternative name for duration_sound_files — wavdur","text":"alternative name duration_sound_files","code":""},{"path":"https://marce10.github.io/warbleR/reference/wavdur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for duration_sound_files — wavdur","text":"","code":"wavdur(   files = NULL,   path = NULL,   skip.error = FALSE,   file.format = \"\\\\.wav$|\\\\.wac$|\\\\.mp3$|\\\\.flac$\" )"},{"path":"https://marce10.github.io/warbleR/reference/wavdur.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for duration_sound_files — wavdur","text":"see duration_sound_files documentation. wavdur deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/wpd_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Measure wavelet packet decomposition features (EXPERIMENTAL) — wpd_features","title":"Measure wavelet packet decomposition features (EXPERIMENTAL) — wpd_features","text":"wpd_features Measure wavelet packet decomposition features.","code":""},{"path":"https://marce10.github.io/warbleR/reference/wpd_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measure wavelet packet decomposition features (EXPERIMENTAL) — wpd_features","text":"","code":"wpd_features(X, normalize = TRUE, threshold1 = 6, threshold2 = 0.5, path = NULL, pb = TRUE, parallel = 1)"},{"path":"https://marce10.github.io/warbleR/reference/wpd_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measure wavelet packet decomposition features (EXPERIMENTAL) — wpd_features","text":"X object class 'selection_table', 'extended_selection_table' data frame following columns: 1) \"sound.files\": name sound files, 2) \"sel\": number selections, 3) \"start\": start time selections, 4) \"end\": end time selections. output auto_detec can also used input data frame. normalize Logical determine features normalized signal duration. threshold1 Threshold (%) wavelet coefficient detection. Equivalent denominator equation 6 Selin et al (2007). Must value 0 1. threshold2 Threshold width detection. Equivalent threshold 2 (th2) equation 7 Selin et al (2007). path Character string containing directory path sound files located. NULL (default) current working directory used. pb Logical argument control progress bar messages. Default TRUE. parallel Numeric. Controls whether parallel computing applied. specifies number cores used. Default 1 (.e. parallel computing).","code":""},{"path":"https://marce10.github.io/warbleR/reference/wpd_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Measure wavelet packet decomposition features (EXPERIMENTAL) — wpd_features","text":"data frame rows selections 'X' addition four wavelet packet decomposition features: max.energy, position, spread width.","code":""},{"path":"https://marce10.github.io/warbleR/reference/wpd_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Measure wavelet packet decomposition features (EXPERIMENTAL) — wpd_features","text":"Measures wavelet packet decomposition features. STILL DEVELOPMENT. USE RISK.","code":""},{"path":"https://marce10.github.io/warbleR/reference/wpd_features.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Measure wavelet packet decomposition features (EXPERIMENTAL) — wpd_features","text":"Araya-Salas, M., & Smith-Vidaurre, G. (2017). warbleR: R package streamline analysis animal acoustic signals. Methods Ecology Evolution, 8(2), 184-191.Selin ., J. Turunen, J. T. Tanttu, 2007. Wavelets recognition bird sounds. EURASIP Journal Advances Signal Processing.","code":""},{"path":[]},{"path":"https://marce10.github.io/warbleR/reference/wpd_features.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Measure wavelet packet decomposition features (EXPERIMENTAL) — wpd_features","text":"Marcelo Araya-Salas (marcelo.araya@ucr.ac.cr)","code":""},{"path":"https://marce10.github.io/warbleR/reference/wpd_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measure wavelet packet decomposition features (EXPERIMENTAL) — wpd_features","text":"","code":"{   data(list = c(\"Phae.long1\", \"Phae.long2\", \"lbh_selec_table\"))   writeWave(Phae.long1, file.path(tempdir(), \"Phae.long1.wav\"))   writeWave(Phae.long2, file.path(tempdir(), \"Phae.long2.wav\"))    # not normalize   wpd_features(lbh_selec_table[1:5, ], threshold2 = 0.3, nor = FALSE, path = tempdir()) } #>      sound.files selec max.energy position    spread width #> 1 Phae.long1.wav     1 3819085942     3413 0.5333922    18 #> 2 Phae.long1.wav     2 4566803930     3371 0.5617731    15 #> 3 Phae.long1.wav     3 1710652669     3332 4.4784859    31 #> 4 Phae.long2.wav     1  123488775     3872 1.0150520   125 #> 5 Phae.long2.wav     2  347589172     3364 1.2633529    41"},{"path":"https://marce10.github.io/warbleR/reference/xcmaps.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for map_xc — xcmaps","title":"alternative name for map_xc — xcmaps","text":"alternative name map_xc","code":""},{"path":"https://marce10.github.io/warbleR/reference/xcmaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for map_xc — xcmaps","text":"","code":"xcmaps(   X,   img = TRUE,   it = \"jpeg\",   res = 100,   labels = FALSE,   path = NULL,   leaflet.map = FALSE,   leaflet.cluster = FALSE )"},{"path":"https://marce10.github.io/warbleR/reference/xcmaps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for map_xc — xcmaps","text":"see map_xc documentation. xcmaps deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/reference/xcorr.html","id":null,"dir":"Reference","previous_headings":"","what":"alternative name for cross_correlation — xcorr","title":"alternative name for cross_correlation — xcorr","text":"alternative name cross_correlation","code":""},{"path":"https://marce10.github.io/warbleR/reference/xcorr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"alternative name for cross_correlation — xcorr","text":"","code":"xcorr(   X = NULL,   wl = 512,   bp = \"pairwise.freq.range\",   ovlp = 70,   dens = NULL,   wn = \"hanning\",   cor.method = \"pearson\",   parallel = 1,   path = NULL,   pb = TRUE,   na.rm = FALSE,   cor.mat = NULL,   output = \"cor.mat\",   templates = NULL,   surveys = NULL,   compare.matrix = NULL,   type = \"fourier\",   nbands = 40,   method = 1 )"},{"path":"https://marce10.github.io/warbleR/reference/xcorr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"alternative name for cross_correlation — xcorr","text":"see cross_correlation documentation. xcorr deprecated future versions.","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1128","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.28","title":"warbleR 1.1.28","text":"CRAN release: 2022-12-09","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-28","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.28","text":"New method (‘time.closest’) test_coordination() estimate coordination 2 individuals Warning messages check_sels() check_sound_files() sound files/wave objects different sampling rates Fix bug file size estimation ‘whole.recs = TRUE’ selection_table() Box axis can removed phylo_spectro()","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-28","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.28","text":"by_element_est() convert -song extended selection table -element","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1127","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.27","title":"warbleR 1.1.27","text":"CRAN release: 2022-02-23","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-27","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.27","text":"sound_pressure_level() measure, well, sound pressure level find_clipping() detect clipped selections wav_2_flac() convert ‘.wav’ files flac compresed lossless format gaps() calculating time intervals (.e. gaps) selections read_sound_files() now use read sound files split_sound_files() now can also split associated selection tables","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-27","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.27","text":"read_sound_files() consequently functions warbleR look ‘channel’ column deciding channel read updated download URL quer_xc() selection_table extended_selection_table subsetting ([) drop behavior switched FALSE overlapping_sels() updated improve performance unique.labs argument overlapping_sels() deprecated fix.selec argument added check_sels() fix ‘selec’ column labels warbleR now supports ‘.wav’, ‘.flac’, ‘.wac’ ‘.mp3’ formats New argument ‘downsample’ speed processing remove_silence() New printing methods ‘autodetec.output’, ‘find.peaks.output’ ‘xcorr.output’ object classes ‘templates’ ‘surveys’ arguments added cross_correlation() simplify signal detection function auto_detec() output including envelopes ~1/3 smaller reduce memory usage","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-27","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.27","text":"error resampling wavs resample_est_waves() error silences found remove_silence()","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1126","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.26","title":"warbleR 1.1.26","text":"CRAN release: 2021-03-09","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-26","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.26","text":"df_DTW() ff_DTW() merged new function freq_DTW() sp.en.ts(), dfts() ffts() merged new function freq_ts() sel_tailor() can undo deletions button labels replaced symbols sel_tailor() many functions renamed (see new_function_names)","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1125","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.25","title":"warbleR 1.1.25","text":"CRAN release: 2021-01-27","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-25","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.25","text":"Negative gaps values song_param()","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-25","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.25","text":"optimize_autodetec() tunning detection parameters autodetec() envelope() C-compiled version seewave::env() new function find_peaks() detect signals sound files using xcorr() output read_sound_file() read wav, wav mp3 files well wave objects extended selection tables","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-25","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.25","text":"Remove bioacoustics::resample() deprecated (mp32wav() fixwavs() affected) Remove comment columns lbh_selec_table Selection table printing method uses huxtable package text coloring ‘suffix’ argument added lspec() autodetec() create image files spectrograms new arguments added autodetec(): ‘hold.time’ merging selections, ‘thinning’ decreasing envelope size error “songs” across multiple files song_param()","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1124","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.24","title":"warbleR 1.1.24","text":"CRAN release: 2020-07-01","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-24","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.24","text":"lspec() allow set resolution custom dimensions output image ifles split_wavs() can now save selections data frame selection table sound files read_wave() can now read .wav .mp3 files URLs ‘strength’ argument control color color_spectro() ‘method’ option create spectrograms fly xcorr() ‘img’ argument autodetec() soft-deprecated lspec() now takes output xcorr(), find_peaks() autodetec() plots cross-correlation scores envelopes along spectrograms ‘download’ option available find_annotations() ‘leaflet’ interactive maps xc_maps() ‘split_wavs()’ new argument ‘.sels’ return selection tables ‘color_spectro()’ frequency range restricted selection table top bottom frequency","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-24","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.24","text":"Negative gaps values song_param() Trivial bug downloading files quer_xc() Fixed number segments using ‘sgmts’ argument ‘split_wavs()’, used return ‘sgmts - 1’ segments. Fix mismatch specreator() spectrograms oscillograms Fix bug detections x_corr()","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1123","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.23","title":"warbleR 1.1.23","text":"CRAN release: 2020-03-10","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-23","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.23","text":"add ‘.amps’ argument add amplitude modulation sim_songs()","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-23","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.23","text":"fix ‘spectrograms()’ plotting extended selection tables ‘song’ fix ‘compare_methods()’ less 100 rows ‘X’","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1122","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.22","title":"warbleR 1.1.22","text":"CRAN release: 2020-02-12","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-22","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.22","text":"fix rbind extended selection tables","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1121","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.21","title":"warbleR 1.1.21","text":"CRAN release: 2020-02-04","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-21","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.21","text":"print information extended selection table includes sampling rates, bit depths warbleR version warning message ‘rbind.extended_selection_table()’ wave object names found extended selection tables","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1120","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.20","title":"warbleR 1.1.20","text":"CRAN release: 2020-01-11","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-20","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.20","text":"mfcc cross-correlation implemented ‘xcorr()’ (argument ‘type’) argument ‘cor.mat’ ‘xcorr()’ deprecated new argument ‘output’ ‘xcorr()’ new example data ‘comp_matrix’ ‘lbh_selec_table2’ using ‘find_peaks()’ ‘xcorr()’ can run cross-correlation entire sound files ‘seltailor()’ can take now extended selection tables","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-20","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.20","text":"new function ‘image_to_wave()’ convert images wave objects new function ‘find_peaks()’ detect signals sound files using ‘xcorr()’ output","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1119","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.19","title":"warbleR 1.1.19","text":"CRAN release: 2019-12-17","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-19","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.19","text":"remove duplicated sound file names spectrogram() images ‘.song’ replace class(.) == , (., *) new argument ‘fill’ control fill color boxes ‘specreator()’","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-19","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.19","text":"new function rename_waves_est() rename wave objects extended selection tables","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-19","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.19","text":"box/lines plotting frequency columns supplied","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1118","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.18","title":"warbleR 1.1.18","text":"CRAN release: 2019-11-04","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-18","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.18","text":"updates specan() improve harmonic detection xcorr() performance largely improved (5X faster) ‘compare.matrix’ argument xcorr() let user defined pairwise comparisons conducted function xcorr.graph() deprecated (use corrplot package instead) arguments ‘dens’ ‘bp’ xcorr() deprecated jpeg maps packages strong dependencies anymore","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1117","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.17","title":"warbleR 1.1.17","text":"CRAN release: 2019-09-29","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-17","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.17","text":"arguments ‘custom1’ ‘custom2’ autodetec() let users enter data new vignette ‘Introduction warbleR’","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1116","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.16","title":"warbleR 1.1.16","text":"CRAN release: 2019-09-02","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-16","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.16","text":"sort_colms: moves required colms left side data frame. Originally found Rraven package split_wavs: splits sound files shorter segments","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-16","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.16","text":"‘’ replaced ‘dest.path’ argument removed mp32wav() read_wave() can also read regular .wav files quer_ml() temporarily removed ebird-macaulay API updated fix_wavs() now can use bioacoustics package SOX resampling global options (warbleR_options()) now taken wav_info() ‘coor.test()’ now returns 0 coordination score ratio undefined ‘dB.threshold’ argument ‘frange()’ ‘frange_detec()’ detecting frequency range based dB scale ‘min_indx’ ‘max_indx’ argument ‘song_param()’ renamed ‘min_colm’ ‘max_colm’ now take names instead indexes accurate dominant frequency detection ‘dfts()’, ‘trackfreqs()’ ‘specan()’ ‘elm_colm’ ‘elm_fun’ argument calculate element level parameters ‘unq.elemts’ ‘mean.elemt.count’ parameters added ‘song_param()’ output error messages check_sels() info file input ‘auto_detec()’ documentation add ‘frange’ bp ‘dfts()’ 2 new methods available ‘compare.methods()’ error messages check_sels() info file input ‘auto_detec()’ documentation ‘frange’ available bandpass ‘dfts()’ ‘mfcc_stats()’ ‘bioacoustics’ dependency changed ‘suggested package’ ‘mfcc_stats()’ return NAs instead error MFCC can’t calculated","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-16","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.16","text":"x_corr() extended selection tables extra column names generated error system() commands windows ‘fix_wavs()’ ‘resample_est()’ normalization downsampling ‘mp32wav()’ required error creating extended selection tables ‘song’ ‘song’ column tags repeated across sound files (selection_table())","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1115","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.15","title":"warbleR 1.1.15","text":"CRAN release: 2018-10-16","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-15","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.15","text":"resample_est: resample wave objects extended selection table phylo_spectro: add spectrograms tips phylogeny wav_info: wrapper ‘selection_table()’ returns wave file information multi_DTW: wrapper dtw comparing signals described multiple contours rm_channels: remove channels wave files melfcc_stats: calculate descriptive statistics Mel-frequency cepstral coefficients","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-15","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.15","text":"‘normalize’ argument ‘mp32wav()’ renamed ‘dip.depth’ ‘frange’ ‘dfrange’ arguments ‘xcorr()’ function deprecated ’selection_table` now can take files found different directories create extended selection tables new parameters measured ‘specan()’ wav.size.MB column names now wav.size ‘check_sels()’ output ‘title.labels’ argument ‘specreator()’ customized title","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-15","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.15","text":"Using ‘wav.path’ ‘warbleR_options’ ‘catalog()’ clipping.edges option ‘dfts()’ ‘ffts()’","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1114","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.14","title":"warbleR 1.1.14","text":"CRAN release: 2018-06-21","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-14","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.14","text":"‘open_wd()’ example fixed (requested CRAN)","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1113","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.13","title":"warbleR 1.1.13","text":"CRAN release: 2018-05-18","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-13","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.13","text":"new function names (print(new_function_names)) object class ‘extended_selection_table’ create self-contained acoustic data sets ‘’ ‘eq.dur’ arguments ‘snrspec’ function ‘ts.df’ argument ‘seltailor’ function adjust frequency contours ‘ts.df’ argument ‘seltailor’ function adjust frequency contours ‘.song’ argument ‘specreator’ create full song spectrograms labeled elements","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-13","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.13","text":"Change “http” “https” protocol accessing Xeno-Canto recordings “querxc”","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-13","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.13","text":"selection_table: converts data frames object classes ‘selection_table’ ‘extended_selection_table’ generic S3 methods ‘print’, ‘cbind’ ‘[’ classes ‘selection_table’ ‘extended_selection_table’ song_param: calculate acoustic parameters song (hierarchical) level spec_param: plot catalog single selection varying spectrogram (display) parameters read_wave: wrapper tuneR’s readWave ignores extension file case mismatches warbleR_options: function set global parameters *open_wd: open current working directory wave browser","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1112","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.12","title":"warbleR 1.1.12","text":"CRAN release: 2018-03-14","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-12","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.12","text":"Parallel computing available ‘querxc’ function getting metadata Parallel computing available ‘checksels’ function New arguments ‘seltailor’ allow tailoring frequency contours Parallel computing without progress bar iterative functions Parallel computing windows OS without progress bar New arguments ‘specreator’ customize control lines/box around selections Replace internal “message” functions “cat” (warnings printed black, red)","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-12","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.12","text":"track_harm: track harmonic frequency contour sim_song: simulate songs","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-1110","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.10","title":"warbleR 1.1.10","text":"CRAN release: 2018-02-11","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-10","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.10","text":"Example sound files moved new R package ‘NatureSounds’ (now dependency)","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-10","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.10","text":"Problem multiple tags ‘catalog’","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-10","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.10","text":"rm_sil: removes silence segments (.e. segments low amplitude values) wave files consolidate: copies (sound) files scattered several directories single folder","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-119","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.9","title":"warbleR 1.1.9","text":"CRAN release: 2017-11-18","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-9","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.9","text":"“low.freq” “high.freq” column names default table format now “bottom.freq” “top.freq” respectively Moved ‘imp.syrinx’ ‘imp.raven’ functions new R package Rraven Added new object class ‘selection.table’ Split vignette series three new functions added workflow New arguments “title”, “.row”, “prop.mar”, “box” “rm.axes” “catalog” function customize catalog setup New arguments “spec.mar”, “lab.mar” “group.tag” “catalog” function color groups selections “trackfreqs”, “dfts”, “dfDTW” functions can use “frange.detec” internally set bandpass limits (see “frange.detec” argument) New argument “index” “seltailor” function indicate selection tailored New argument “wl.freq” “specan” function set windows length independently time frequency domain measurements New measurement “meanpeakf” specan “imp.raven” “imp.syrinx” now import low high frequency kHz (.data == FALSE) Mew argument “bp” (bandpass) “wl” “sig2noise” function calculate signal--noise ratio within frequency range","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-9","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.9","text":".selection.table: checks object class ‘selection.table’ make.selection.table: creates object class ‘selection.table’ frange.detec: detects frequency range signals wave objects frange: applies ‘frange.detec’ function iteratively signals listed selection table move.imgs: copy/cut image files folders ovlp_sels: find overlapping/duplicated selections cut_sels: generates individual sound files (.wav) selection selection table color_spectro: produces spectrograms signals highlighted colors exp.raven: exports selection tables .txt file can opened Raven","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-9","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.9","text":"Reading wave files stereo slot “specan” “checksels”","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-118","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.8","title":"warbleR 1.1.8","text":"CRAN release: 2017-04-27","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-8","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.8","text":"installation linux distributions","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-117","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.7","title":"warbleR 1.1.7","text":"CRAN release: 2017-04-24","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-7","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.7","text":"“seltailor” function now can use external graphic devices (X11 quartz)","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-7","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.7","text":"installation windows OS fixed (pbmcapply conflict previous version)","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-116","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.6","title":"warbleR 1.1.6","text":"CRAN release: 2017-04-05","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-6","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.6","text":"catalog: create song catalogs (.e. images multiple spectrograms several rows/columns can color-labeled) catalog2pdf: convert several catalog jpeg’s images single pdf files fixwavs: convert corrupted files format can imported R","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-6","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.6","text":"added new acoustic parameters “specan” function related distribution energy time axis. Also time entropy (“time.ent”) overall entropy (“entropy”) added “centroid” “mode” parameters removed “specan” function sig2noise function can return signal--noise ratio dB (“.dB” argument). can also measure noise sides signal just right (“” argument) scale argument dfDTW ffDTW allow focus dynamic time warping comparisons frequency contours ignoring differences pitch NAs can removed xcorr function output. can also ignored using XCORR compare.methods function filtersels can return selections without image files (“missing” argument). can also return data frame row index selections (“index” argument) imp.raven function can import raven selections files share columns extract sound file name selection table name FF function (tuneR package) now can used measuring fundamental frequency (trackfreqs, specan, ffts ffDTW functions). Seems accurate faster fund function seewave window overlap can now defined users fundamental dominant frequency measures specan function arguments control dynamic time warping settings dfDTW ffDTW Progress bar available parallel computing (parallel > 1) Linux functions also iOS. works using function mcpbapply::pbmclapply *Spectrogram creating functions (manualoc, specreator, trackfreqs, dfts, ffts, dfDTW, ffDTW, lspec, catalog) can perform faster (4-10 times) using different image algorithm. can called argument “fast.spec”. Note spectrogram options available fast.spec = TRUE selections longer 20 s can analyzed specan function (previously returned error, going slow anyways) “clip.edges” argument compare.methods function set removing missing values start end signals using dfDTW ffDTW methods “threshold” argument compare.methods function set amplitude detection threshold ffDTW, dfDTW SP methods “exclude” argument imp.syrinx function exclude selection files read “rm.imcomp” argument coor.test function exclude singing events one individual “cutoff” argument coor.test function determine minimum number signals per individual needed singing event included “rm.solo” argument coor.test control signals intercalated start end sequence removed. instances sequence signals ---B--B--B-B-B (B represent different individuals) subset -B--B--B “incl.wav” argument filtersels function indicate sound file extension included image files 3 different options (formulas) calculating signal--noise ratio now available (sig2noise function). addition “eq.dur” argument allows measure noise segment duration signal grid can removed spectrograms compare.methods function","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-6","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.6","text":"error produced calculating frequency limits based dominant frequency contours xcorr (frange provided) error identifying readable sound files specific .wav formats checkwavs function error comparing signals high duration difference xcorr","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-115","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.5","title":"warbleR 1.1.5","text":"CRAN release: 2017-01-21","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-5","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.5","text":"“frange” argument seltailor define also frequency range (low.f high.f) trackfreqs, specan now can use low.f high.f bandpass limits trackfreqs specreator can plot boxes around signals low.f high.f provided manualoc.df data frame example replaced selec.table (includes low.f high.f columns) complex searches now allowed querxc() following xeno-canto advance query syntax added ‘clip.edges’ argument dfts/ ffts/ dfDTW/ ffDTW/sp.en.ts functions remove missing values start end signals detailed checksels output (now including, sampling rate, duration, number samples bits)","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-5","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.5","text":"sp.en.ts: extracts spectral entropy across signals time series iteratively","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"warbler-114","dir":"Changelog","previous_headings":"","what":"warbleR 1.1.4","title":"warbleR 1.1.4","text":"CRAN release: 2016-11-16","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"changes-and-additions-1-1-4","dir":"Changelog","previous_headings":"","what":"Changes and additions:","title":"warbleR 1.1.4","text":"“pb” argument allow users knock progress bars messages (looping functions) modification (slightly) improve ‘lspec’ performance new “sp” argument compare.methods allow users input spectral parameters new “custom.contour” argument trackfreqs allow users input frequency contours","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"bug-fixes-1-1-4","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"warbleR 1.1.4","text":"bug fix setting ‘path’ argument several functions bug fix due missing values (undetected) amplitude detection trackfreqs, ffts, dfts, ffDTW, dfDTW","code":""},{"path":"https://marce10.github.io/warbleR/news/index.html","id":"new-functions-1-1-4","dir":"Changelog","previous_headings":"","what":"New functions:","title":"warbleR 1.1.4","text":"filtersels: subsets selection data frames based manually filtered image files lspec2pdf: combines lspec images single pdf files iteratively","code":""}]
